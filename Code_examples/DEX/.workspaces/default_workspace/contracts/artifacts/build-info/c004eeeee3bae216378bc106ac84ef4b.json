{
	"id": "c004eeeee3bae216378bc106ac84ef4b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityPool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\ncontract LiquidityPool {\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    address public reserveToken;\n    address constant ltrAddress = 0x9F62A001c542F56e9b483f2e9E0999b87Ecfa00b;\n\n    constructor(address _tokenAddress){\n        reserveToken = _tokenAddress;\n    }\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    function provideLiquidity(uint256 _amount) external payable {\n        require(msg.value == _amount, \"The amount of ETH and tokens should be equal\");\n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount);\n        IERC20(ltrAddress).transfer(msg.sender, _amount);\n        emit liquidityProvided(msg.sender, _amount);\n    }\n}\n\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityPool.sol\":241:976  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LiquidityPool.sol\":470:549  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LiquidityPool.sol\":529:542  _tokenAddress */\n  dup1\n    /* \"contracts/LiquidityPool.sol\":514:526  reserveToken */\n  0x00\n  dup1\n    /* \"contracts/LiquidityPool.sol\":514:542  reserveToken = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LiquidityPool.sol\":470:549  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/LiquidityPool.sol\":241:976  contract LiquidityPool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/LiquidityPool.sol\":241:976  contract LiquidityPool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityPool.sol\":241:976  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xeb521a4c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf4325d67\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":630:974  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/LiquidityPool.sol\":358:385  address public reserveToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":630:974  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_7:\n        /* \"contracts/LiquidityPool.sol\":721:728  _amount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":708:717  msg.value */\n      callvalue\n        /* \"contracts/LiquidityPool.sol\":708:728  msg.value == _amount */\n      eq\n        /* \"contracts/LiquidityPool.sol\":700:777  require(msg.value == _amount, \"The amount of ETH and tokens should be equal\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/LiquidityPool.sol\":794:806  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":787:820  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":821:831  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":841:845  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":848:855  _amount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":787:856  IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n        /* \"contracts/LiquidityPool.sol\":421:463  0x9F62A001c542F56e9b483f2e9E0999b87Ecfa00b */\n      0x9f62a001c542f56e9b483f2e9e0999b87ecfa00b\n        /* \"contracts/LiquidityPool.sol\":866:893  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":894:904  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":906:913  _amount */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":866:914  IERC20(ltrAddress).transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_29:\n      pop\n        /* \"contracts/LiquidityPool.sol\":929:967  liquidityProvided(msg.sender, _amount) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/LiquidityPool.sol\":947:957  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":959:966  _amount */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":929:967  liquidityProvided(msg.sender, _amount) */\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityPool.sol\":630:974  function provideLiquidity(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":358:385  address public reserveToken */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_32:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_34\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_36:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_38\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:640   */\n    tag_23:\n        /* \"#utility.yul\":362:368   */\n      0x00\n        /* \"#utility.yul\":411:413   */\n      0x20\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":390:397   */\n      dup5\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:498   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":417:496   */\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":379:498   */\n    tag_41:\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":562:623   */\n      tag_44\n        /* \"#utility.yul\":615:622   */\n      dup5\n        /* \"#utility.yul\":606:612   */\n      dup3\n        /* \"#utility.yul\":595:604   */\n      dup6\n        /* \"#utility.yul\":591:613   */\n      add\n        /* \"#utility.yul\":562:623   */\n      tag_32\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":552:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":508:633   */\n      pop\n        /* \"#utility.yul\":295:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:975   */\n    tag_6:\n        /* \"#utility.yul\":705:711   */\n      0x00\n        /* \"#utility.yul\":754:756   */\n      0x20\n        /* \"#utility.yul\":742:751   */\n      dup3\n        /* \"#utility.yul\":733:740   */\n      dup5\n        /* \"#utility.yul\":729:752   */\n      sub\n        /* \"#utility.yul\":725:757   */\n      slt\n        /* \"#utility.yul\":722:841   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":760:839   */\n      tag_47\n      tag_43\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":722:841   */\n    tag_46:\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":905:958   */\n      tag_48\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":905:958   */\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":895:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":851:968   */\n      pop\n        /* \"#utility.yul\":646:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1099   */\n    tag_49:\n        /* \"#utility.yul\":1068:1092   */\n      tag_51\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1063:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1093   */\n      mstore\n        /* \"#utility.yul\":981:1099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1471   */\n    tag_53:\n        /* \"#utility.yul\":1247:1250   */\n      0x00\n        /* \"#utility.yul\":1268:1335   */\n      tag_55\n        /* \"#utility.yul\":1332:1334   */\n      0x2c\n        /* \"#utility.yul\":1327:1330   */\n      dup4\n        /* \"#utility.yul\":1268:1335   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1261:1335   */\n      swap2\n      pop\n        /* \"#utility.yul\":1344:1437   */\n      tag_57\n        /* \"#utility.yul\":1433:1436   */\n      dup3\n        /* \"#utility.yul\":1344:1437   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1462:1464   */\n      0x40\n        /* \"#utility.yul\":1457:1460   */\n      dup3\n        /* \"#utility.yul\":1453:1465   */\n      add\n        /* \"#utility.yul\":1446:1465   */\n      swap1\n      pop\n        /* \"#utility.yul\":1105:1471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1477:1595   */\n    tag_59:\n        /* \"#utility.yul\":1564:1588   */\n      tag_61\n        /* \"#utility.yul\":1582:1587   */\n      dup2\n        /* \"#utility.yul\":1564:1588   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1559:1562   */\n      dup3\n        /* \"#utility.yul\":1552:1589   */\n      mstore\n        /* \"#utility.yul\":1477:1595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1823   */\n    tag_12:\n        /* \"#utility.yul\":1694:1698   */\n      0x00\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1721:1730   */\n      dup3\n        /* \"#utility.yul\":1717:1735   */\n      add\n        /* \"#utility.yul\":1709:1735   */\n      swap1\n      pop\n        /* \"#utility.yul\":1745:1816   */\n      tag_64\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1802:1811   */\n      dup4\n        /* \"#utility.yul\":1798:1815   */\n      add\n        /* \"#utility.yul\":1789:1795   */\n      dup5\n        /* \"#utility.yul\":1745:1816   */\n      tag_49\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1601:1823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1829:2271   */\n    tag_18:\n        /* \"#utility.yul\":1978:1982   */\n      0x00\n        /* \"#utility.yul\":2016:2018   */\n      0x60\n        /* \"#utility.yul\":2005:2014   */\n      dup3\n        /* \"#utility.yul\":2001:2019   */\n      add\n        /* \"#utility.yul\":1993:2019   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2100   */\n      tag_66\n        /* \"#utility.yul\":2097:2098   */\n      0x00\n        /* \"#utility.yul\":2086:2095   */\n      dup4\n        /* \"#utility.yul\":2082:2099   */\n      add\n        /* \"#utility.yul\":2073:2079   */\n      dup7\n        /* \"#utility.yul\":2029:2100   */\n      tag_49\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2110:2182   */\n      tag_67\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2167:2176   */\n      dup4\n        /* \"#utility.yul\":2163:2181   */\n      add\n        /* \"#utility.yul\":2154:2160   */\n      dup6\n        /* \"#utility.yul\":2110:2182   */\n      tag_49\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2192:2264   */\n      tag_68\n        /* \"#utility.yul\":2260:2262   */\n      0x40\n        /* \"#utility.yul\":2249:2258   */\n      dup4\n        /* \"#utility.yul\":2245:2263   */\n      add\n        /* \"#utility.yul\":2236:2242   */\n      dup5\n        /* \"#utility.yul\":2192:2264   */\n      tag_59\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1829:2271   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2277:2609   */\n    tag_25:\n        /* \"#utility.yul\":2398:2402   */\n      0x00\n        /* \"#utility.yul\":2436:2438   */\n      0x40\n        /* \"#utility.yul\":2425:2434   */\n      dup3\n        /* \"#utility.yul\":2421:2439   */\n      add\n        /* \"#utility.yul\":2413:2439   */\n      swap1\n      pop\n        /* \"#utility.yul\":2449:2520   */\n      tag_70\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2506:2515   */\n      dup4\n        /* \"#utility.yul\":2502:2519   */\n      add\n        /* \"#utility.yul\":2493:2499   */\n      dup6\n        /* \"#utility.yul\":2449:2520   */\n      tag_49\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2530:2602   */\n      tag_71\n        /* \"#utility.yul\":2598:2600   */\n      0x20\n        /* \"#utility.yul\":2587:2596   */\n      dup4\n        /* \"#utility.yul\":2583:2601   */\n      add\n        /* \"#utility.yul\":2574:2580   */\n      dup5\n        /* \"#utility.yul\":2530:2602   */\n      tag_59\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2277:2609   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2615:3034   */\n    tag_16:\n        /* \"#utility.yul\":2781:2785   */\n      0x00\n        /* \"#utility.yul\":2819:2821   */\n      0x20\n        /* \"#utility.yul\":2808:2817   */\n      dup3\n        /* \"#utility.yul\":2804:2822   */\n      add\n        /* \"#utility.yul\":2796:2822   */\n      swap1\n      pop\n        /* \"#utility.yul\":2868:2877   */\n      dup2\n        /* \"#utility.yul\":2862:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2878   */\n      sub\n        /* \"#utility.yul\":2854:2855   */\n      0x00\n        /* \"#utility.yul\":2843:2852   */\n      dup4\n        /* \"#utility.yul\":2839:2856   */\n      add\n        /* \"#utility.yul\":2832:2879   */\n      mstore\n        /* \"#utility.yul\":2896:3027   */\n      tag_73\n        /* \"#utility.yul\":3022:3026   */\n      dup2\n        /* \"#utility.yul\":2896:3027   */\n      tag_53\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2888:3027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:3034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3121:3290   */\n    tag_56:\n        /* \"#utility.yul\":3205:3216   */\n      0x00\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3234:3237   */\n      dup3\n        /* \"#utility.yul\":3227:3246   */\n      mstore\n        /* \"#utility.yul\":3279:3283   */\n      0x20\n        /* \"#utility.yul\":3274:3277   */\n      dup3\n        /* \"#utility.yul\":3270:3284   */\n      add\n        /* \"#utility.yul\":3255:3284   */\n      swap1\n      pop\n        /* \"#utility.yul\":3121:3290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3296:3392   */\n    tag_52:\n        /* \"#utility.yul\":3333:3340   */\n      0x00\n        /* \"#utility.yul\":3362:3386   */\n      tag_78\n        /* \"#utility.yul\":3380:3385   */\n      dup3\n        /* \"#utility.yul\":3362:3386   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3351:3386   */\n      swap1\n      pop\n        /* \"#utility.yul\":3296:3392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3398:3488   */\n    tag_80:\n        /* \"#utility.yul\":3432:3439   */\n      0x00\n        /* \"#utility.yul\":3475:3480   */\n      dup2\n        /* \"#utility.yul\":3468:3481   */\n      iszero\n        /* \"#utility.yul\":3461:3482   */\n      iszero\n        /* \"#utility.yul\":3450:3482   */\n      swap1\n      pop\n        /* \"#utility.yul\":3398:3488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3620   */\n    tag_79:\n        /* \"#utility.yul\":3531:3538   */\n      0x00\n        /* \"#utility.yul\":3571:3613   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3564:3569   */\n      dup3\n        /* \"#utility.yul\":3560:3614   */\n      and\n        /* \"#utility.yul\":3549:3614   */\n      swap1\n      pop\n        /* \"#utility.yul\":3494:3620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3703   */\n    tag_62:\n        /* \"#utility.yul\":3663:3670   */\n      0x00\n        /* \"#utility.yul\":3692:3697   */\n      dup2\n        /* \"#utility.yul\":3681:3697   */\n      swap1\n      pop\n        /* \"#utility.yul\":3626:3703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3832:3949   */\n    tag_43:\n        /* \"#utility.yul\":3941:3942   */\n      0x00\n        /* \"#utility.yul\":3938:3939   */\n      dup1\n        /* \"#utility.yul\":3931:3943   */\n      revert\n        /* \"#utility.yul\":3955:4186   */\n    tag_58:\n        /* \"#utility.yul\":4095:4129   */\n      0x54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f\n        /* \"#utility.yul\":4091:4092   */\n      0x00\n        /* \"#utility.yul\":4083:4089   */\n      dup3\n        /* \"#utility.yul\":4079:4093   */\n      add\n        /* \"#utility.yul\":4072:4130   */\n      mstore\n        /* \"#utility.yul\":4164:4178   */\n      0x756c6420626520657175616c0000000000000000000000000000000000000000\n        /* \"#utility.yul\":4159:4161   */\n      0x20\n        /* \"#utility.yul\":4151:4157   */\n      dup3\n        /* \"#utility.yul\":4147:4162   */\n      add\n        /* \"#utility.yul\":4140:4179   */\n      mstore\n        /* \"#utility.yul\":3955:4186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4192:4308   */\n    tag_35:\n        /* \"#utility.yul\":4262:4283   */\n      tag_89\n        /* \"#utility.yul\":4277:4282   */\n      dup2\n        /* \"#utility.yul\":4262:4283   */\n      tag_80\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4255:4260   */\n      dup2\n        /* \"#utility.yul\":4252:4284   */\n      eq\n        /* \"#utility.yul\":4242:4302   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4298:4299   */\n      0x00\n        /* \"#utility.yul\":4295:4296   */\n      dup1\n        /* \"#utility.yul\":4288:4300   */\n      revert\n        /* \"#utility.yul\":4242:4302   */\n    tag_90:\n        /* \"#utility.yul\":4192:4308   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4314:4436   */\n    tag_39:\n        /* \"#utility.yul\":4387:4411   */\n      tag_92\n        /* \"#utility.yul\":4405:4410   */\n      dup2\n        /* \"#utility.yul\":4387:4411   */\n      tag_62\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":4380:4385   */\n      dup2\n        /* \"#utility.yul\":4377:4412   */\n      eq\n        /* \"#utility.yul\":4367:4430   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":4426:4427   */\n      0x00\n        /* \"#utility.yul\":4423:4424   */\n      dup1\n        /* \"#utility.yul\":4416:4428   */\n      revert\n        /* \"#utility.yul\":4367:4430   */\n    tag_93:\n        /* \"#utility.yul\":4314:4436   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c7b6b7770ef166d966301313a19979f0c998d424fe6ecbd0ad85131330db47f264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105f13803806105f18339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b6104da806101176000396000f3fe6080604052600436106100295760003560e01c8063eb521a4c1461002e578063f4325d671461004a575b600080fd5b610048600480360381019061004391906102c0565b610075565b005b34801561005657600080fd5b5061005f610245565b60405161006c919061032e565b60405180910390f35b8034146100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906103a9565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161011493929190610349565b602060405180830381600087803b15801561012e57600080fd5b505af1158015610142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101669190610293565b50739f62a001c542f56e9b483f2e9e0999b87ecfa00b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101b6929190610380565b602060405180830381600087803b1580156101d057600080fd5b505af11580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102089190610293565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6338260405161023a929190610380565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061027881610476565b92915050565b60008135905061028d8161048d565b92915050565b6000602082840312156102a9576102a8610422565b5b60006102b784828501610269565b91505092915050565b6000602082840312156102d6576102d5610422565b5b60006102e48482850161027e565b91505092915050565b6102f6816103da565b82525050565b6000610309602c836103c9565b915061031482610427565b604082019050919050565b61032881610418565b82525050565b600060208201905061034360008301846102ed565b92915050565b600060608201905061035e60008301866102ed565b61036b60208301856102ed565b610378604083018461031f565b949350505050565b600060408201905061039560008301856102ed565b6103a2602083018461031f565b9392505050565b600060208201905081810360008301526103c2816102fc565b9050919050565b600082825260208201905092915050565b60006103e5826103f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f60008201527f756c6420626520657175616c0000000000000000000000000000000000000000602082015250565b61047f816103ec565b811461048a57600080fd5b50565b61049681610418565b81146104a157600080fd5b5056fea2646970667358221220c7b6b7770ef166d966301313a19979f0c998d424fe6ecbd0ad85131330db47f264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F1 CODESIZE SUB DUP1 PUSH2 0x5F1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DA DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x142 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST POP PUSH20 0x9F62A001C542F56E9B483F2E9E0999B87ECFA00B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP3 SWAP2 SWAP1 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x23A SWAP3 SWAP2 SWAP1 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x278 DUP2 PUSH2 0x476 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28D DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B7 DUP5 DUP3 DUP6 ADD PUSH2 0x269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6 JUMPI PUSH2 0x2D5 PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP5 DUP3 DUP6 ADD PUSH2 0x27E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309 PUSH1 0x2C DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x314 DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x418 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x343 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x36B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x378 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x395 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C2 DUP2 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E5 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C6420626520657175616C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x47F DUP2 PUSH2 0x3EC JUMP JUMPDEST DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x496 DUP2 PUSH2 0x418 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xB6 0xB7 PUSH24 0xEF166D966301313A19979F0C998D424FE6ECBD0AD851313 ADDRESS 0xDB SELFBALANCE CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:735:1:-:0;;;470:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;529:13;514:12;;:28;;;;;;;;;;;;;;;;;;470:79;241:735;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;241:735:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@provideLiquidity_143": {
									"entryPoint": 117,
									"id": 143,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reserveToken_82": {
									"entryPoint": 581,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4439:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:2",
														"type": ""
													}
												],
												"src": "150:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "417:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:2"
															},
															"nodeType": "YulIf",
															"src": "379:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "508:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "523:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "537:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "527:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "552:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "595:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "606:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "591:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "591:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "615:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "562:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "552:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "339:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "350:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "362:6:2",
														"type": ""
													}
												],
												"src": "295:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "712:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "758:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "760:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "760:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "733:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:32:2"
															},
															"nodeType": "YulIf",
															"src": "722:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "851:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "866:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "870:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "895:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "905:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "895:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "693:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "705:6:2",
														"type": ""
													}
												],
												"src": "646:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1086:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1068:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1056:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1034:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1041:3:2",
														"type": ""
													}
												],
												"src": "981:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1251:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1261:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1332:2:2",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1268:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1261:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1433:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1344:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1446:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1462:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1239:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1247:3:2",
														"type": ""
													}
												],
												"src": "1105:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1559:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1582:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1564:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1530:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1537:3:2",
														"type": ""
													}
												],
												"src": "1477:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1709:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1721:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1717:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1709:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1802:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1813:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1798:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1798:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1745:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1745:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1671:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1683:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1694:4:2",
														"type": ""
													}
												],
												"src": "1601:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1983:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1993:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2005:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2001:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1993:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2086:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2097:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2082:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2082:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2029:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2029:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2154:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2178:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2110:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2110:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2236:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2249:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2260:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2245:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2245:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2192:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1939:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1951:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1959:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1967:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1978:4:2",
														"type": ""
													}
												],
												"src": "1829:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2403:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2413:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2425:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2421:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2413:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2493:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2449:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2449:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2574:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2587:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2598:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2583:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2583:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2530:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2530:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2367:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2379:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2387:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2398:4:2",
														"type": ""
													}
												],
												"src": "2277:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2786:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2796:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2819:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2796:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2854:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2839:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2862:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2868:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2858:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2832:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2888:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3022:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2896:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2888:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2766:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2781:4:2",
														"type": ""
													}
												],
												"src": "2615:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3080:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3090:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3073:6:2",
														"type": ""
													}
												],
												"src": "3040:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3234:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3239:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3227:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3255:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3274:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3279:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3255:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3189:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3194:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3205:11:2",
														"type": ""
													}
												],
												"src": "3121:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3341:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3351:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3380:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3362:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3351:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3323:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3333:7:2",
														"type": ""
													}
												],
												"src": "3296:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3440:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3450:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3475:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3468:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3461:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3461:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3450:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3422:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3432:7:2",
														"type": ""
													}
												],
												"src": "3398:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3539:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3549:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3564:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3571:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3549:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3521:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3531:7:2",
														"type": ""
													}
												],
												"src": "3494:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3671:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3681:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3692:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3681:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3653:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3663:7:2",
														"type": ""
													}
												],
												"src": "3626:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3798:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3815:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3818:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3808:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3808:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3808:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3709:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3921:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3941:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3931:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3832:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4061:125:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:14:2"
																	},
																	{
																		"hexValue": "54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4095:34:2",
																		"type": "",
																		"value": "The amount of ETH and tokens sho"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4072:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4072:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4151:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4159:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:15:2"
																	},
																	{
																		"hexValue": "756c6420626520657175616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4164:14:2",
																		"type": "",
																		"value": "uld be equal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4140:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4140:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4140:39:2"
														}
													]
												},
												"name": "store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4053:6:2",
														"type": ""
													}
												],
												"src": "3955:231:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4232:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4286:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4295:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4298:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4288:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4288:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4288:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4255:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4277:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4262:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4262:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4252:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4252:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4245:40:2"
															},
															"nodeType": "YulIf",
															"src": "4242:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4225:5:2",
														"type": ""
													}
												],
												"src": "4192:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4357:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4414:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4423:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4426:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4416:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4416:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4416:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4380:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4405:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4387:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4387:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4377:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4377:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:43:2"
															},
															"nodeType": "YulIf",
															"src": "4367:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4350:5:2",
														"type": ""
													}
												],
												"src": "4314:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0(memPtr) {\n\n        mstore(add(memPtr, 0), \"The amount of ETH and tokens sho\")\n\n        mstore(add(memPtr, 32), \"uld be equal\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c8063eb521a4c1461002e578063f4325d671461004a575b600080fd5b610048600480360381019061004391906102c0565b610075565b005b34801561005657600080fd5b5061005f610245565b60405161006c919061032e565b60405180910390f35b8034146100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906103a9565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161011493929190610349565b602060405180830381600087803b15801561012e57600080fd5b505af1158015610142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101669190610293565b50739f62a001c542f56e9b483f2e9e0999b87ecfa00b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101b6929190610380565b602060405180830381600087803b1580156101d057600080fd5b505af11580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102089190610293565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6338260405161023a929190610380565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061027881610476565b92915050565b60008135905061028d8161048d565b92915050565b6000602082840312156102a9576102a8610422565b5b60006102b784828501610269565b91505092915050565b6000602082840312156102d6576102d5610422565b5b60006102e48482850161027e565b91505092915050565b6102f6816103da565b82525050565b6000610309602c836103c9565b915061031482610427565b604082019050919050565b61032881610418565b82525050565b600060208201905061034360008301846102ed565b92915050565b600060608201905061035e60008301866102ed565b61036b60208301856102ed565b610378604083018461031f565b949350505050565b600060408201905061039560008301856102ed565b6103a2602083018461031f565b9392505050565b600060208201905081810360008301526103c2816102fc565b9050919050565b600082825260208201905092915050565b60006103e5826103f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f60008201527f756c6420626520657175616c0000000000000000000000000000000000000000602082015250565b61047f816103ec565b811461048a57600080fd5b50565b61049681610418565b81146104a157600080fd5b5056fea2646970667358221220c7b6b7770ef166d966301313a19979f0c998d424fe6ecbd0ad85131330db47f264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x142 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST POP PUSH20 0x9F62A001C542F56E9B483F2E9E0999B87ECFA00B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP3 SWAP2 SWAP1 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x23A SWAP3 SWAP2 SWAP1 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x278 DUP2 PUSH2 0x476 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28D DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B7 DUP5 DUP3 DUP6 ADD PUSH2 0x269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6 JUMPI PUSH2 0x2D5 PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP5 DUP3 DUP6 ADD PUSH2 0x27E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309 PUSH1 0x2C DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x314 DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x418 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x343 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x36B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x378 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x395 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C2 DUP2 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E5 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C6420626520657175616C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x47F DUP2 PUSH2 0x3EC JUMP JUMPDEST DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x496 DUP2 PUSH2 0x418 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xB6 0xB7 PUSH24 0xEF166D966301313A19979F0C998D424FE6ECBD0AD851313 ADDRESS 0xDB SELFBALANCE CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:735:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;630:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;358:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;630:344;721:7;708:9;:20;700:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;794:12;;;;;;;;;;787:33;;;821:10;841:4;848:7;787:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;421:42;866:27;;;894:10;906:7;866:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;929:38;947:10;959:7;929:38;;;;;;;:::i;:::-;;;;;;;;630:344;:::o;358:27::-;;;;;;;;;;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:345::-;362:6;411:2;399:9;390:7;386:23;382:32;379:119;;;417:79;;:::i;:::-;379:119;537:1;562:61;615:7;606:6;595:9;591:22;562:61;:::i;:::-;552:71;;508:125;295:345;;;;:::o;646:329::-;705:6;754:2;742:9;733:7;729:23;725:32;722:119;;;760:79;;:::i;:::-;722:119;880:1;905:53;950:7;941:6;930:9;926:22;905:53;:::i;:::-;895:63;;851:117;646:329;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;981:118;;:::o;1105:366::-;1247:3;1268:67;1332:2;1327:3;1268:67;:::i;:::-;1261:74;;1344:93;1433:3;1344:93;:::i;:::-;1462:2;1457:3;1453:12;1446:19;;1105:366;;;:::o;1477:118::-;1564:24;1582:5;1564:24;:::i;:::-;1559:3;1552:37;1477:118;;:::o;1601:222::-;1694:4;1732:2;1721:9;1717:18;1709:26;;1745:71;1813:1;1802:9;1798:17;1789:6;1745:71;:::i;:::-;1601:222;;;;:::o;1829:442::-;1978:4;2016:2;2005:9;2001:18;1993:26;;2029:71;2097:1;2086:9;2082:17;2073:6;2029:71;:::i;:::-;2110:72;2178:2;2167:9;2163:18;2154:6;2110:72;:::i;:::-;2192;2260:2;2249:9;2245:18;2236:6;2192:72;:::i;:::-;1829:442;;;;;;:::o;2277:332::-;2398:4;2436:2;2425:9;2421:18;2413:26;;2449:71;2517:1;2506:9;2502:17;2493:6;2449:71;:::i;:::-;2530:72;2598:2;2587:9;2583:18;2574:6;2530:72;:::i;:::-;2277:332;;;;;:::o;2615:419::-;2781:4;2819:2;2808:9;2804:18;2796:26;;2868:9;2862:4;2858:20;2854:1;2843:9;2839:17;2832:47;2896:131;3022:4;2896:131;:::i;:::-;2888:139;;2615:419;;;:::o;3121:169::-;3205:11;3239:6;3234:3;3227:19;3279:4;3274:3;3270:14;3255:29;;3121:169;;;;:::o;3296:96::-;3333:7;3362:24;3380:5;3362:24;:::i;:::-;3351:35;;3296:96;;;:::o;3398:90::-;3432:7;3475:5;3468:13;3461:21;3450:32;;3398:90;;;:::o;3494:126::-;3531:7;3571:42;3564:5;3560:54;3549:65;;3494:126;;;:::o;3626:77::-;3663:7;3692:5;3681:16;;3626:77;;;:::o;3832:117::-;3941:1;3938;3931:12;3955:231;4095:34;4091:1;4083:6;4079:14;4072:58;4164:14;4159:2;4151:6;4147:15;4140:39;3955:231;:::o;4192:116::-;4262:21;4277:5;4262:21;:::i;:::-;4255:5;4252:32;4242:60;;4298:1;4295;4288:12;4242:60;4192:116;:::o;4314:122::-;4387:24;4405:5;4387:24;:::i;:::-;4380:5;4377:35;4367:63;;4426:1;4423;4416:12;4367:63;4314:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "248400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"provideLiquidity(uint256)": "infinite",
								"reserveToken()": "2511"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 976,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 529,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 514,
									"end": 526,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 514,
									"end": 542,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 542,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 542,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 976,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 976,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 241,
									"end": 976,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 976,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7b6b7770ef166d966301313a19979f0c998d424fe6ecbd0ad85131330db47f264736f6c63430008070033",
									".code": [
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "EB521A4C"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "F4325D67"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 976,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 630,
											"end": 974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 717,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 708,
											"end": 728,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 820,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 820,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 821,
											"end": 831,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 841,
											"end": 845,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 848,
											"end": 855,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 787,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "9F62A001C542F56E9B483F2E9E0999B87ECFA00B"
										},
										{
											"begin": 866,
											"end": 893,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 866,
											"end": 893,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 894,
											"end": 904,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 906,
											"end": 913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "PUSH",
											"source": 1,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 947,
											"end": 957,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 959,
											"end": 966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 929,
											"end": 967,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 929,
											"end": 967,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 967,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 929,
											"end": 967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 967,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 630,
											"end": 974,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 595,
											"end": 604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 591,
											"end": 613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 508,
											"end": 633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 729,
											"end": 752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 725,
											"end": 757,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 851,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1433,
											"end": 1436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1453,
											"end": 1465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1823,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1601,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1745,
											"end": 1816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1745,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1823,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1823,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1823,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2005,
											"end": 2014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2029,
											"end": 2100,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2029,
											"end": 2100,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2029,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2160,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2110,
											"end": 2182,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2182,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2110,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2260,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2192,
											"end": 2264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2192,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 2271,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2449,
											"end": 2520,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2520,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2449,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2530,
											"end": 2602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2602,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2530,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 2877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3022,
											"end": 3026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2896,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 3027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 3027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 3034,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3237,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3277,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3296,
											"end": 3392,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3296,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3380,
											"end": 3385,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3362,
											"end": 3386,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3362,
											"end": 3386,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3362,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3392,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3398,
											"end": 3488,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3398,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3482,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3488,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3494,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3613,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3620,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3626,
											"end": 3703,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3626,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3663,
											"end": 3670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3703,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3832,
											"end": 3949,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3832,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3943,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4186,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3955,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4129,
											"name": "PUSH",
											"source": 2,
											"value": "54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F"
										},
										{
											"begin": 4091,
											"end": 4092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4079,
											"end": 4093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4164,
											"end": 4178,
											"name": "PUSH",
											"source": 2,
											"value": "756C6420626520657175616C0000000000000000000000000000000000000000"
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4186,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4192,
											"end": 4308,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4192,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4277,
											"end": 4282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4262,
											"end": 4283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4262,
											"end": 4283,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4262,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4284,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4242,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4242,
											"end": 4302,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4300,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4242,
											"end": 4302,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4242,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4308,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4314,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4314,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4387,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4405,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4387,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4387,
											"end": 4411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4387,
											"end": 4411,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4387,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4380,
											"end": 4385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4377,
											"end": 4412,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4367,
											"end": 4430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4426,
											"end": 4427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4428,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4367,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"provideLiquidity(uint256)": "eb521a4c",
							"reserveToken()": "f4325d67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0xd47714a9f6305ef69ae6c32220c8b97c1557901aaa674fa2af5f70b77e70ca0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43f38797f11da12bad47de829cefb087a1f7f86ef0327f373672606662a4cf4\",\"dweb:/ipfs/QmbQje5rAUwjHV42xM2cr54Dch2Aqbim4VoETu7NWtSKMD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "reserveToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2660:0"
				},
				"id": 0
			},
			"contracts/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LiquidityPool": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "192:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 145,
							"sourceUnit": 78,
							"src": "217:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "LiquidityPool",
							"nameLocation": "250:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f4325d67",
									"id": 82,
									"mutability": "mutable",
									"name": "reserveToken",
									"nameLocation": "373:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "358:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 85,
									"mutability": "constant",
									"name": "ltrAddress",
									"nameLocation": "408:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "391:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "391:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839463632413030316335343246353665396234383366326539453039393962383745636661303062",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "421:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9F62A001c542F56e9b483f2e9E0999b87Ecfa00b"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "504:45:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "reserveToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "514:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "529:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "514:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "514:28:1"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "490:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "482:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:23:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:0:1"
									},
									"scope": 144,
									"src": "470:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 101,
									"name": "liquidityProvided",
									"nameLocation": "561:17:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "587:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "579:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "615:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "607:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:45:1"
									},
									"src": "555:69:1"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "690:284:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 107,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "708:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "708:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 109,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "721:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "708:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f756c6420626520657175616c",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "730:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																"typeString": "literal_string \"The amount of ETH and tokens should be equal\""
															},
															"value": "The amount of ETH and tokens should be equal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																"typeString": "literal_string \"The amount of ETH and tokens should be equal\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "700:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "700:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 118,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "821:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "821:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 122,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "841:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$144",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$144",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "833:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "833:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 124,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 115,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "794:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 114,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "787:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "787:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "787:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "787:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 131,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "894:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "894:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 133,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "906:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 128,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "873:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 127,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "866:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "866:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "866:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "866:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "866:48:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "947:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "947:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 139,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "959:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 136,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "929:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "EmitStatement",
												"src": "924:43:1"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "639:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:17:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:1"
									},
									"scope": 144,
									"src": "630:344:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 145,
							"src": "241:735:1",
							"usedErrors": []
						}
					],
					"src": "192:786:1"
				},
				"id": 1
			}
		}
	}
}