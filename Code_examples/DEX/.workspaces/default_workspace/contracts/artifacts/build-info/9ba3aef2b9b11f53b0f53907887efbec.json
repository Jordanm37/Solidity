{
	"id": "9ba3aef2b9b11f53b0f53907887efbec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\n\n1. We will need to know the addresses of the tokens held within the pool.\n2. \n\n\n*/\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ncontract Pool {\n    address public immutable token0;\n    address public immutable token1;\n    address public immutable ltrAddress;\n    uint256 public kLast;\n    uint256 public reserve0;\n    uint256 public reserve1;\n    uint256 public price0;\n    uint256 public price1;\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    constructor(address _token0, address _token1, address _ltrAddress) {\n        token0 = _token0;\n        token1 = _token1;\n        ltrAddress = _ltrAddress;\n    }\n\n    function update() private {\n        reserve0 = IERC20(token0).balanceOf(address(this));\n        reserve1 = IERC20(token1).balanceOf(address(this));\n        price0 = reserve1 / reserve0;\n        price1 = reserve0 / reserve1;\n    }\n\n\n\n    function provideLiquidity(uint256 _amount0, uint256 _amount1) external {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this));\n        uint256 shares = Math.sqrt(kLast);\n        IERC20(ltrAddress).transfer(msg.sender, shares);\n        update();\n        emit liquidityProvided(msg.sender, shares);\n    }\n\n    function get0(uint256 _amount1) public {\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        uint256 amountOut = reserve0 - (kLast / reserve1);\n        if (reserve0 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token0).transfer(msg.sender, amountOut);\n        }\n\n        update();\n    }\n\n    function get1(uint256 _amount0) public returns (uint256) {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        uint256 amountOut = reserve1 - (kLast / reserve0); //100000 * (40 / 366670)\n        if (reserve1 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token1).transfer(msg.sender, amountOut);\n        }\n        update();\n        return amountOut;\n\n    }\n\n    function swap(uint256 _token0, uint256 _token1) public {\n        if (_token0 > 0 && _token1 == 0) {\n            get1(_token0);\n        } else if (_token1 > 0 && _token0 == 0) {\n            get0(_token1);\n        } else {\n            revert();\n        }\n    }\n}\n\n\n// DAI/ETH\n\n//  x * y = k\n\n//   x = DAI\n//   y = ETH\n\n//   x' = amount of DAI being swapped for eth\n//   y' = amount of ETH being swapped for DAI\n\n//   if y = 100ETH = eth_reserve\n//   then x = 150000 = dai_reserve\n\n//   price of eth based on the dai = dai_reserve / eth_reserve = 1500\n//   price of dai based on eth would be the inverse = 6.7 * 10^-4\n\n//   Let's try and swap 3000 Dai for eth\n\n//   x' = 3000\n//   y' = 3000 * 6.7 * 10^-4 = 2\n\n//   x' = y' * dai_reserve / eth_reserve\n//   y' = x' * eth_reserve / dai_reserve\n\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pool.sol": {
				"Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ltrAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "get0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								}
							],
							"name": "get1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ltrAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_token0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_token1",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pool.sol\":224:2932  contract Pool {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/Pool.sol\":573:733  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Pool.sol\":659:666  _token0 */\n  dup3\n    /* \"contracts/Pool.sol\":650:666  token0 = _token0 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":685:692  _token1 */\n  dup2\n    /* \"contracts/Pool.sol\":676:692  token1 = _token1 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":715:726  _ltrAddress */\n  dup1\n    /* \"contracts/Pool.sol\":702:726  ltrAddress = _ltrAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":573:733  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Pool.sol\":224:2932  contract Pool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":966:1085   */\ntag_27:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_29\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_30\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_31\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/Pool.sol\":224:2932  contract Pool {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n  0x00\n  assignImmutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n  0x00\n  assignImmutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pool.sol\":224:2932  contract Pool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a16af7f\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x7a16af7f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9c117f0f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0a986f1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xba9c6845\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd96073cf\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2af4ec36\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6caf25ce\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":244:275  address public immutable token0 */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":1691:2141  function get0(uint256 _amount1) public {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Pool.sol\":385:408  uint256 public reserve0 */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":414:437  uint256 public reserve1 */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":470:491  uint256 public price1 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":359:379  uint256 public kLast */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":976:1685  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Pool.sol\":2147:2666  function get1(uint256 _amount0) public returns (uint256) {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":443:464  uint256 public price0 */\n    tag_11:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":318:353  address public immutable ltrAddress */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":281:312  address public immutable token1 */\n    tag_13:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":2672:2930  function swap(uint256 _token0, uint256 _token1) public {... */\n    tag_14:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/Pool.sol\":244:275  address public immutable token0 */\n    tag_17:\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":1691:2141  function get0(uint256 _amount1) public {... */\n    tag_23:\n        /* \"contracts/Pool.sol\":1803:1811  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1755:1761  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1748:1772  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1773:1783  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1793:1797  this */\n      address\n        /* \"contracts/Pool.sol\":1748:1799  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/Pool.sol\":1748:1811  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1740:1837  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/Pool.sol\":1854:1860  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1847:1874  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1875:1885  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1895:1899  this */\n      address\n        /* \"contracts/Pool.sol\":1902:1910  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1847:1911  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/Pool.sol\":1921:1938  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":1961:1969  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":1953:1958  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":1953:1969  kLast / reserve1 */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"contracts/Pool.sol\":1941:1949  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1941:1970  reserve0 - (kLast / reserve1) */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"contracts/Pool.sol\":1921:1970  uint256 amountOut = reserve0 - (kLast / reserve1) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1996:2005  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":1984:1992  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1984:2005  reserve0 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":1980:2116  if (reserve0 <= amountOut) {... */\n      tag_77\n      jumpi\n        /* \"contracts/Pool.sol\":2021:2029  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":1980:2116  if (reserve0 <= amountOut) {... */\n    tag_77:\n        /* \"contracts/Pool.sol\":2066:2072  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2059:2082  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2083:2093  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2095:2104  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":2059:2105  IERC20(token0).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/Pool.sol\":2126:2134  update() */\n      tag_84\n        /* \"contracts/Pool.sol\":2126:2132  update */\n      tag_85\n        /* \"contracts/Pool.sol\":2126:2134  update() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Pool.sol\":1730:2141  {... */\n      pop\n        /* \"contracts/Pool.sol\":1691:2141  function get0(uint256 _amount1) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":385:408  uint256 public reserve0 */\n    tag_25:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":414:437  uint256 public reserve1 */\n    tag_29:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":470:491  uint256 public price1 */\n    tag_32:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":359:379  uint256 public kLast */\n    tag_35:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":976:1685  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_40:\n        /* \"contracts/Pool.sol\":1120:1128  _amount0 */\n      dup2\n        /* \"contracts/Pool.sol\":1072:1078  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1065:1089  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1090:1100  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1110:1114  this */\n      address\n        /* \"contracts/Pool.sol\":1065:1116  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_90:\n        /* \"contracts/Pool.sol\":1065:1128  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1057:1154  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_66\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/Pool.sol\":1227:1235  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1179:1185  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1172:1196  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1197:1207  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1217:1221  this */\n      address\n        /* \"contracts/Pool.sol\":1172:1223  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_96:\n        /* \"contracts/Pool.sol\":1172:1235  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1164:1261  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_66\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/Pool.sol\":1278:1284  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1271:1298  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1299:1309  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1319:1323  this */\n      address\n        /* \"contracts/Pool.sol\":1326:1334  _amount0 */\n      dup6\n        /* \"contracts/Pool.sol\":1271:1335  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_102:\n      pop\n        /* \"contracts/Pool.sol\":1352:1358  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1345:1372  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1373:1383  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1393:1397  this */\n      address\n        /* \"contracts/Pool.sol\":1400:1408  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1345:1409  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_106:\n      pop\n        /* \"contracts/Pool.sol\":1476:1482  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1469:1493  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1502:1506  this */\n      address\n        /* \"contracts/Pool.sol\":1469:1508  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_110:\n        /* \"contracts/Pool.sol\":1434:1440  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1427:1451  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1460:1464  this */\n      address\n        /* \"contracts/Pool.sol\":1427:1466  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_114:\n        /* \"contracts/Pool.sol\":1427:1508  IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/Pool.sol\":1419:1424  kLast */\n      0x00\n        /* \"contracts/Pool.sol\":1419:1508  kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":1518:1532  uint256 shares */\n      0x00\n        /* \"contracts/Pool.sol\":1535:1551  Math.sqrt(kLast) */\n      tag_117\n        /* \"contracts/Pool.sol\":1545:1550  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":1535:1544  Math.sqrt */\n      tag_118\n        /* \"contracts/Pool.sol\":1535:1551  Math.sqrt(kLast) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Pool.sol\":1518:1551  uint256 shares = Math.sqrt(kLast) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1568:1578  ltrAddress */\n      immutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n        /* \"contracts/Pool.sol\":1561:1588  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":1589:1599  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1601:1607  shares */\n      dup4\n        /* \"contracts/Pool.sol\":1561:1608  IERC20(ltrAddress).transfer(msg.sender, shares) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_122:\n      pop\n        /* \"contracts/Pool.sol\":1618:1626  update() */\n      tag_123\n        /* \"contracts/Pool.sol\":1618:1624  update */\n      tag_85\n        /* \"contracts/Pool.sol\":1618:1626  update() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Pool.sol\":1641:1678  liquidityProvided(msg.sender, shares) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/Pool.sol\":1659:1669  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1671:1677  shares */\n      dup3\n        /* \"contracts/Pool.sol\":1641:1678  liquidityProvided(msg.sender, shares) */\n      mload(0x40)\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pool.sol\":1047:1685  {... */\n      pop\n        /* \"contracts/Pool.sol\":976:1685  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":2147:2666  function get1(uint256 _amount0) public returns (uint256) {... */\n    tag_43:\n        /* \"contracts/Pool.sol\":2195:2202  uint256 */\n      0x00\n        /* \"contracts/Pool.sol\":2277:2285  _amount0 */\n      dup2\n        /* \"contracts/Pool.sol\":2229:2235  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2222:2246  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":2247:2257  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2267:2271  this */\n      address\n        /* \"contracts/Pool.sol\":2222:2273  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_126:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_129:\n        /* \"contracts/Pool.sol\":2222:2285  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":2214:2311  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_66\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/Pool.sol\":2328:2334  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2321:2348  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":2349:2359  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2369:2373  this */\n      address\n        /* \"contracts/Pool.sol\":2376:2384  _amount0 */\n      dup6\n        /* \"contracts/Pool.sol\":2321:2385  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_135:\n      pop\n        /* \"contracts/Pool.sol\":2395:2412  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":2435:2443  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":2427:2432  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":2427:2443  kLast / reserve0 */\n      tag_136\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_136:\n        /* \"contracts/Pool.sol\":2415:2423  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2415:2444  reserve1 - (kLast / reserve0) */\n      tag_137\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_137:\n        /* \"contracts/Pool.sol\":2395:2444  uint256 amountOut = reserve1 - (kLast / reserve0) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":2495:2504  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":2483:2491  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2483:2504  reserve1 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":2479:2615  if (reserve1 <= amountOut) {... */\n      tag_138\n      jumpi\n        /* \"contracts/Pool.sol\":2520:2528  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":2479:2615  if (reserve1 <= amountOut) {... */\n    tag_138:\n        /* \"contracts/Pool.sol\":2565:2571  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":2558:2581  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2582:2592  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2594:2603  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":2558:2604  IERC20(token1).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_140:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_143:\n      pop\n        /* \"contracts/Pool.sol\":2624:2632  update() */\n      tag_144\n        /* \"contracts/Pool.sol\":2624:2630  update */\n      tag_85\n        /* \"contracts/Pool.sol\":2624:2632  update() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Pool.sol\":2649:2658  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":2642:2658  return amountOut */\n      swap2\n      pop\n      pop\n        /* \"contracts/Pool.sol\":2147:2666  function get1(uint256 _amount0) public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":443:464  uint256 public price0 */\n    tag_46:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":318:353  address public immutable ltrAddress */\n    tag_49:\n      immutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":281:312  address public immutable token1 */\n    tag_52:\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":2672:2930  function swap(uint256 _token0, uint256 _token1) public {... */\n    tag_56:\n        /* \"contracts/Pool.sol\":2751:2752  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2741:2748  _token0 */\n      dup3\n        /* \"contracts/Pool.sol\":2741:2752  _token0 > 0 */\n      gt\n        /* \"contracts/Pool.sol\":2741:2768  _token0 > 0 && _token1 == 0 */\n      dup1\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/Pool.sol\":2767:2768  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2756:2763  _token1 */\n      dup2\n        /* \"contracts/Pool.sol\":2756:2768  _token1 == 0 */\n      eq\n        /* \"contracts/Pool.sol\":2741:2768  _token0 > 0 && _token1 == 0 */\n    tag_146:\n        /* \"contracts/Pool.sol\":2737:2924  if (_token0 > 0 && _token1 == 0) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/Pool.sol\":2784:2797  get1(_token0) */\n      tag_148\n        /* \"contracts/Pool.sol\":2789:2796  _token0 */\n      dup3\n        /* \"contracts/Pool.sol\":2784:2788  get1 */\n      tag_43\n        /* \"contracts/Pool.sol\":2784:2797  get1(_token0) */\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/Pool.sol\":2737:2924  if (_token0 > 0 && _token1 == 0) {... */\n      jump(tag_149)\n    tag_147:\n        /* \"contracts/Pool.sol\":2828:2829  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2818:2825  _token1 */\n      dup2\n        /* \"contracts/Pool.sol\":2818:2829  _token1 > 0 */\n      gt\n        /* \"contracts/Pool.sol\":2818:2845  _token1 > 0 && _token0 == 0 */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"contracts/Pool.sol\":2844:2845  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2833:2840  _token0 */\n      dup3\n        /* \"contracts/Pool.sol\":2833:2845  _token0 == 0 */\n      eq\n        /* \"contracts/Pool.sol\":2818:2845  _token1 > 0 && _token0 == 0 */\n    tag_150:\n        /* \"contracts/Pool.sol\":2814:2924  if (_token1 > 0 && _token0 == 0) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/Pool.sol\":2861:2874  get0(_token1) */\n      tag_152\n        /* \"contracts/Pool.sol\":2866:2873  _token1 */\n      dup2\n        /* \"contracts/Pool.sol\":2861:2865  get0 */\n      tag_23\n        /* \"contracts/Pool.sol\":2861:2874  get0(_token1) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Pool.sol\":2814:2924  if (_token1 > 0 && _token0 == 0) {... */\n      jump(tag_153)\n    tag_151:\n        /* \"contracts/Pool.sol\":2905:2913  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":2814:2924  if (_token1 > 0 && _token0 == 0) {... */\n    tag_153:\n        /* \"contracts/Pool.sol\":2737:2924  if (_token0 > 0 && _token1 == 0) {... */\n    tag_149:\n        /* \"contracts/Pool.sol\":2672:2930  function swap(uint256 _token0, uint256 _token1) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":739:968  function update() private {... */\n    tag_85:\n        /* \"contracts/Pool.sol\":793:799  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":786:810  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":819:823  this */\n      address\n        /* \"contracts/Pool.sol\":786:825  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_155:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_158:\n        /* \"contracts/Pool.sol\":775:783  reserve0 */\n      0x01\n        /* \"contracts/Pool.sol\":775:825  reserve0 = IERC20(token0).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":853:859  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":846:870  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":879:883  this */\n      address\n        /* \"contracts/Pool.sol\":846:885  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_162:\n        /* \"contracts/Pool.sol\":835:843  reserve1 */\n      0x02\n        /* \"contracts/Pool.sol\":835:885  reserve1 = IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":915:923  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":904:912  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":904:923  reserve1 / reserve0 */\n      tag_163\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_163:\n        /* \"contracts/Pool.sol\":895:901  price0 */\n      0x03\n        /* \"contracts/Pool.sol\":895:923  price0 = reserve1 / reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":953:961  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":942:950  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":942:961  reserve0 / reserve1 */\n      tag_164\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_164:\n        /* \"contracts/Pool.sol\":933:939  price1 */\n      0x04\n        /* \"contracts/Pool.sol\":933:961  price1 = reserve0 / reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":739:968  function update() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6336  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6357:6358  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6353  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6358  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6374:6382  return 0 */\n      swap1\n      pop\n      jump(tag_165)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7072  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7075:7076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7076  uint256 result = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7095  uint256 x */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7098:7099  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7099  uint256 x = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7124:7125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7118:7121  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7114  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7121  x >> 128 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7125  x >> 128 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7147:7150  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7141:7150  x >>= 128 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7175:7177  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7164:7177  result <<= 64 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7211:7212  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7206:7208  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7202  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7208  x >> 64 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7212  x >> 64 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7234:7236  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7228:7236  x >>= 64 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7261:7263  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7250:7263  result <<= 32 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7297:7298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7292:7294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7288  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7294  x >> 32 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7298  x >> 32 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7320:7322  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7314:7322  x >>= 32 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7347:7349  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7336:7349  result <<= 16 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7383:7384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7378:7380  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7374  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7380  x >> 16 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7384  x >> 16 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7406:7408  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7400:7408  x >>= 16 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7433:7434  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7422:7434  result <<= 8 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7467:7468  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7463:7464  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7459  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7464  x >> 8 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7468  x >> 8 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7490:7491  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7484:7491  x >>= 8 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7516:7517  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7505:7517  result <<= 4 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7550:7551  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7546:7547  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7542  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7547  x >> 4 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7551  x >> 4 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7573:7574  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7567:7574  x >>= 4 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7599:7600  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7588:7600  result <<= 2 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7633:7634  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7629:7630  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7625  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7630  x >> 2 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7634  x >> 2 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7661:7662  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7650:7662  result <<= 1 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8131:8132  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8120:8126  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8117  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8126  a / result */\n      dup2\n      tag_174\n      jumpi\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n    tag_174:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8113  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8126  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8106:8132  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8097:8132  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8180:8181  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8169:8175  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8166  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8175  a / result */\n      dup2\n      tag_177\n      jumpi\n      tag_178\n      tag_176\n      jump\t// in\n    tag_178:\n    tag_177:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8162  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8175  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8155:8181  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8146:8181  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8229:8230  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8218:8224  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8215  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8224  a / result */\n      dup2\n      tag_179\n      jumpi\n      tag_180\n      tag_176\n      jump\t// in\n    tag_180:\n    tag_179:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8211  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8224  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8204:8230  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8195:8230  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8278:8279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8267:8273  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8264  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8273  a / result */\n      dup2\n      tag_181\n      jumpi\n      tag_182\n      tag_176\n      jump\t// in\n    tag_182:\n    tag_181:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8260  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8273  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8253:8279  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8244:8279  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8327:8328  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8316:8322  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8313  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8322  a / result */\n      dup2\n      tag_183\n      jumpi\n      tag_184\n      tag_176\n      jump\t// in\n    tag_184:\n    tag_183:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8309  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8322  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8302:8328  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8293:8328  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8376:8377  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8365:8371  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8362  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8371  a / result */\n      dup2\n      tag_185\n      jumpi\n      tag_186\n      tag_176\n      jump\t// in\n    tag_186:\n    tag_185:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8358  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8371  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8351:8377  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8342:8377  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8425:8426  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8414:8420  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8411  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8420  a / result */\n      dup2\n      tag_187\n      jumpi\n      tag_188\n      tag_176\n      jump\t// in\n    tag_188:\n    tag_187:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8407  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8420  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8400:8426  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8391:8426  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8451:8457  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8463:8469  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8460  a */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8469  a / result */\n      dup2\n      tag_190\n      jumpi\n      tag_191\n      tag_176\n      jump\t// in\n    tag_191:\n    tag_190:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8450  min */\n      tag_192\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8440:8470  return min(result, a / result) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_165:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":647:654  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":677:678  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:674  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:678  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":685:686  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      jump(tag_195)\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":681:682  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":666:686  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_196:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_197:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_217\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_196\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_198:\n        /* \"#utility.yul\":328:352   */\n      tag_219\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_197\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_19:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_221\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_198\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_200:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:997   */\n    tag_202:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":975:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_203:\n        /* \"#utility.yul\":1076:1100   */\n      tag_227\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_202\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_228:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_204:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_230\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_203\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_22:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_233\n      tag_200\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1352:1471   */\n    tag_232:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_234\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_204\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_205:\n        /* \"#utility.yul\":1698:1722   */\n      tag_236\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_202\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_27:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_238\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_205\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2437   */\n    tag_39:\n        /* \"#utility.yul\":2031:2037   */\n      0x00\n        /* \"#utility.yul\":2039:2045   */\n      dup1\n        /* \"#utility.yul\":2088:2090   */\n      0x40\n        /* \"#utility.yul\":2076:2085   */\n      dup4\n        /* \"#utility.yul\":2067:2074   */\n      dup6\n        /* \"#utility.yul\":2063:2086   */\n      sub\n        /* \"#utility.yul\":2059:2091   */\n      slt\n        /* \"#utility.yul\":2056:2175   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2094:2173   */\n      tag_241\n      tag_200\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2056:2175   */\n    tag_240:\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2239:2292   */\n      tag_242\n        /* \"#utility.yul\":2284:2291   */\n      dup6\n        /* \"#utility.yul\":2275:2281   */\n      dup3\n        /* \"#utility.yul\":2264:2273   */\n      dup7\n        /* \"#utility.yul\":2260:2282   */\n      add\n        /* \"#utility.yul\":2239:2292   */\n      tag_204\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2229:2292   */\n      swap3\n      pop\n        /* \"#utility.yul\":2185:2302   */\n      pop\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2367:2420   */\n      tag_243\n        /* \"#utility.yul\":2412:2419   */\n      dup6\n        /* \"#utility.yul\":2403:2409   */\n      dup3\n        /* \"#utility.yul\":2392:2401   */\n      dup7\n        /* \"#utility.yul\":2388:2410   */\n      add\n        /* \"#utility.yul\":2367:2420   */\n      tag_204\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2357:2420   */\n      swap2\n      pop\n        /* \"#utility.yul\":2312:2430   */\n      pop\n        /* \"#utility.yul\":1963:2437   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2775   */\n    tag_59:\n        /* \"#utility.yul\":2564:2568   */\n      0x00\n        /* \"#utility.yul\":2602:2604   */\n      0x40\n        /* \"#utility.yul\":2591:2600   */\n      dup3\n        /* \"#utility.yul\":2587:2605   */\n      add\n        /* \"#utility.yul\":2579:2605   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:2686   */\n      tag_245\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2672:2681   */\n      dup4\n        /* \"#utility.yul\":2668:2685   */\n      add\n        /* \"#utility.yul\":2659:2665   */\n      dup6\n        /* \"#utility.yul\":2615:2686   */\n      tag_198\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2696:2768   */\n      tag_246\n        /* \"#utility.yul\":2764:2766   */\n      0x20\n        /* \"#utility.yul\":2753:2762   */\n      dup4\n        /* \"#utility.yul\":2749:2767   */\n      add\n        /* \"#utility.yul\":2740:2746   */\n      dup5\n        /* \"#utility.yul\":2696:2768   */\n      tag_198\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2443:2775   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2781:2924   */\n    tag_206:\n        /* \"#utility.yul\":2838:2843   */\n      0x00\n        /* \"#utility.yul\":2869:2875   */\n      dup2\n        /* \"#utility.yul\":2863:2876   */\n      mload\n        /* \"#utility.yul\":2854:2876   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2918   */\n      tag_248\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2885:2918   */\n      tag_203\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2781:2924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2930:3281   */\n    tag_63:\n        /* \"#utility.yul\":3000:3006   */\n      0x00\n        /* \"#utility.yul\":3049:3051   */\n      0x20\n        /* \"#utility.yul\":3037:3046   */\n      dup3\n        /* \"#utility.yul\":3028:3035   */\n      dup5\n        /* \"#utility.yul\":3024:3047   */\n      sub\n        /* \"#utility.yul\":3020:3052   */\n      slt\n        /* \"#utility.yul\":3017:3136   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3055:3134   */\n      tag_251\n      tag_200\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3017:3136   */\n    tag_250:\n        /* \"#utility.yul\":3175:3176   */\n      0x00\n        /* \"#utility.yul\":3200:3264   */\n      tag_252\n        /* \"#utility.yul\":3256:3263   */\n      dup5\n        /* \"#utility.yul\":3247:3253   */\n      dup3\n        /* \"#utility.yul\":3236:3245   */\n      dup6\n        /* \"#utility.yul\":3232:3254   */\n      add\n        /* \"#utility.yul\":3200:3264   */\n      tag_206\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3190:3264   */\n      swap2\n      pop\n        /* \"#utility.yul\":3146:3274   */\n      pop\n        /* \"#utility.yul\":2930:3281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3287:3456   */\n    tag_207:\n        /* \"#utility.yul\":3371:3382   */\n      0x00\n        /* \"#utility.yul\":3405:3411   */\n      dup3\n        /* \"#utility.yul\":3400:3403   */\n      dup3\n        /* \"#utility.yul\":3393:3412   */\n      mstore\n        /* \"#utility.yul\":3445:3449   */\n      0x20\n        /* \"#utility.yul\":3440:3443   */\n      dup3\n        /* \"#utility.yul\":3436:3450   */\n      add\n        /* \"#utility.yul\":3421:3450   */\n      swap1\n      pop\n        /* \"#utility.yul\":3287:3456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3633   */\n    tag_208:\n        /* \"#utility.yul\":3602:3625   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3590:3596   */\n      dup3\n        /* \"#utility.yul\":3586:3600   */\n      add\n        /* \"#utility.yul\":3579:3626   */\n      mstore\n        /* \"#utility.yul\":3462:3633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3639:4005   */\n    tag_209:\n        /* \"#utility.yul\":3781:3784   */\n      0x00\n        /* \"#utility.yul\":3802:3869   */\n      tag_256\n        /* \"#utility.yul\":3866:3868   */\n      0x15\n        /* \"#utility.yul\":3861:3864   */\n      dup4\n        /* \"#utility.yul\":3802:3869   */\n      tag_207\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3795:3869   */\n      swap2\n      pop\n        /* \"#utility.yul\":3878:3971   */\n      tag_257\n        /* \"#utility.yul\":3967:3970   */\n      dup3\n        /* \"#utility.yul\":3878:3971   */\n      tag_208\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3996:3998   */\n      0x20\n        /* \"#utility.yul\":3991:3994   */\n      dup3\n        /* \"#utility.yul\":3987:3999   */\n      add\n        /* \"#utility.yul\":3980:3999   */\n      swap1\n      pop\n        /* \"#utility.yul\":3639:4005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4011:4430   */\n    tag_66:\n        /* \"#utility.yul\":4177:4181   */\n      0x00\n        /* \"#utility.yul\":4215:4217   */\n      0x20\n        /* \"#utility.yul\":4204:4213   */\n      dup3\n        /* \"#utility.yul\":4200:4218   */\n      add\n        /* \"#utility.yul\":4192:4218   */\n      swap1\n      pop\n        /* \"#utility.yul\":4264:4273   */\n      dup2\n        /* \"#utility.yul\":4258:4262   */\n      dup2\n        /* \"#utility.yul\":4254:4274   */\n      sub\n        /* \"#utility.yul\":4250:4251   */\n      0x00\n        /* \"#utility.yul\":4239:4248   */\n      dup4\n        /* \"#utility.yul\":4235:4252   */\n      add\n        /* \"#utility.yul\":4228:4275   */\n      mstore\n        /* \"#utility.yul\":4292:4423   */\n      tag_259\n        /* \"#utility.yul\":4418:4422   */\n      dup2\n        /* \"#utility.yul\":4292:4423   */\n      tag_209\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4284:4423   */\n      swap1\n      pop\n        /* \"#utility.yul\":4011:4430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4436:4878   */\n    tag_68:\n        /* \"#utility.yul\":4585:4589   */\n      0x00\n        /* \"#utility.yul\":4623:4625   */\n      0x60\n        /* \"#utility.yul\":4612:4621   */\n      dup3\n        /* \"#utility.yul\":4608:4626   */\n      add\n        /* \"#utility.yul\":4600:4626   */\n      swap1\n      pop\n        /* \"#utility.yul\":4636:4707   */\n      tag_261\n        /* \"#utility.yul\":4704:4705   */\n      0x00\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4689:4706   */\n      add\n        /* \"#utility.yul\":4680:4686   */\n      dup7\n        /* \"#utility.yul\":4636:4707   */\n      tag_198\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4717:4789   */\n      tag_262\n        /* \"#utility.yul\":4785:4787   */\n      0x20\n        /* \"#utility.yul\":4774:4783   */\n      dup4\n        /* \"#utility.yul\":4770:4788   */\n      add\n        /* \"#utility.yul\":4761:4767   */\n      dup6\n        /* \"#utility.yul\":4717:4789   */\n      tag_198\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4799:4871   */\n      tag_263\n        /* \"#utility.yul\":4867:4869   */\n      0x40\n        /* \"#utility.yul\":4856:4865   */\n      dup4\n        /* \"#utility.yul\":4852:4870   */\n      add\n        /* \"#utility.yul\":4843:4849   */\n      dup5\n        /* \"#utility.yul\":4799:4871   */\n      tag_205\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4436:4878   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4884:4974   */\n    tag_210:\n        /* \"#utility.yul\":4918:4925   */\n      0x00\n        /* \"#utility.yul\":4961:4966   */\n      dup2\n        /* \"#utility.yul\":4954:4967   */\n      iszero\n        /* \"#utility.yul\":4947:4968   */\n      iszero\n        /* \"#utility.yul\":4936:4968   */\n      swap1\n      pop\n        /* \"#utility.yul\":4884:4974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4980:5096   */\n    tag_211:\n        /* \"#utility.yul\":5050:5071   */\n      tag_266\n        /* \"#utility.yul\":5065:5070   */\n      dup2\n        /* \"#utility.yul\":5050:5071   */\n      tag_210\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5040:5072   */\n      eq\n        /* \"#utility.yul\":5030:5090   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":5086:5087   */\n      0x00\n        /* \"#utility.yul\":5083:5084   */\n      dup1\n        /* \"#utility.yul\":5076:5088   */\n      revert\n        /* \"#utility.yul\":5030:5090   */\n    tag_267:\n        /* \"#utility.yul\":4980:5096   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5102:5239   */\n    tag_212:\n        /* \"#utility.yul\":5156:5161   */\n      0x00\n        /* \"#utility.yul\":5187:5193   */\n      dup2\n        /* \"#utility.yul\":5181:5194   */\n      mload\n        /* \"#utility.yul\":5172:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5203:5233   */\n      tag_269\n        /* \"#utility.yul\":5227:5232   */\n      dup2\n        /* \"#utility.yul\":5203:5233   */\n      tag_211\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5102:5239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5590   */\n    tag_72:\n        /* \"#utility.yul\":5312:5318   */\n      0x00\n        /* \"#utility.yul\":5361:5363   */\n      0x20\n        /* \"#utility.yul\":5349:5358   */\n      dup3\n        /* \"#utility.yul\":5340:5347   */\n      dup5\n        /* \"#utility.yul\":5336:5359   */\n      sub\n        /* \"#utility.yul\":5332:5364   */\n      slt\n        /* \"#utility.yul\":5329:5448   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":5367:5446   */\n      tag_272\n      tag_200\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5329:5448   */\n    tag_271:\n        /* \"#utility.yul\":5487:5488   */\n      0x00\n        /* \"#utility.yul\":5512:5573   */\n      tag_273\n        /* \"#utility.yul\":5565:5572   */\n      dup5\n        /* \"#utility.yul\":5556:5562   */\n      dup3\n        /* \"#utility.yul\":5545:5554   */\n      dup6\n        /* \"#utility.yul\":5541:5563   */\n      add\n        /* \"#utility.yul\":5512:5573   */\n      tag_212\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5502:5573   */\n      swap2\n      pop\n        /* \"#utility.yul\":5458:5583   */\n      pop\n        /* \"#utility.yul\":5245:5590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:5776   */\n    tag_176:\n        /* \"#utility.yul\":5644:5721   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5641:5642   */\n      0x00\n        /* \"#utility.yul\":5634:5722   */\n      mstore\n        /* \"#utility.yul\":5741:5745   */\n      0x12\n        /* \"#utility.yul\":5738:5739   */\n      0x04\n        /* \"#utility.yul\":5731:5746   */\n      mstore\n        /* \"#utility.yul\":5765:5769   */\n      0x24\n        /* \"#utility.yul\":5762:5763   */\n      0x00\n        /* \"#utility.yul\":5755:5770   */\n      revert\n        /* \"#utility.yul\":5782:5962   */\n    tag_213:\n        /* \"#utility.yul\":5830:5907   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5827:5828   */\n      0x00\n        /* \"#utility.yul\":5820:5908   */\n      mstore\n        /* \"#utility.yul\":5927:5931   */\n      0x11\n        /* \"#utility.yul\":5924:5925   */\n      0x04\n        /* \"#utility.yul\":5917:5932   */\n      mstore\n        /* \"#utility.yul\":5951:5955   */\n      0x24\n        /* \"#utility.yul\":5948:5949   */\n      0x00\n        /* \"#utility.yul\":5941:5956   */\n      revert\n        /* \"#utility.yul\":5968:6153   */\n    tag_74:\n        /* \"#utility.yul\":6008:6009   */\n      0x00\n        /* \"#utility.yul\":6025:6045   */\n      tag_277\n        /* \"#utility.yul\":6043:6044   */\n      dup3\n        /* \"#utility.yul\":6025:6045   */\n      tag_202\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6020:6045   */\n      swap2\n      pop\n        /* \"#utility.yul\":6059:6079   */\n      tag_278\n        /* \"#utility.yul\":6077:6078   */\n      dup4\n        /* \"#utility.yul\":6059:6079   */\n      tag_202\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6054:6079   */\n      swap3\n      pop\n        /* \"#utility.yul\":6098:6099   */\n      dup3\n        /* \"#utility.yul\":6088:6123   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":6103:6121   */\n      tag_280\n      tag_176\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6088:6123   */\n    tag_279:\n        /* \"#utility.yul\":6145:6146   */\n      dup3\n        /* \"#utility.yul\":6142:6143   */\n      dup3\n        /* \"#utility.yul\":6138:6147   */\n      div\n        /* \"#utility.yul\":6133:6147   */\n      swap1\n      pop\n        /* \"#utility.yul\":5968:6153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6159:6353   */\n    tag_76:\n        /* \"#utility.yul\":6199:6203   */\n      0x00\n        /* \"#utility.yul\":6219:6239   */\n      tag_282\n        /* \"#utility.yul\":6237:6238   */\n      dup3\n        /* \"#utility.yul\":6219:6239   */\n      tag_202\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6214:6239   */\n      swap2\n      pop\n        /* \"#utility.yul\":6253:6273   */\n      tag_283\n        /* \"#utility.yul\":6271:6272   */\n      dup4\n        /* \"#utility.yul\":6253:6273   */\n      tag_202\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6248:6273   */\n      swap3\n      pop\n        /* \"#utility.yul\":6297:6298   */\n      dup3\n        /* \"#utility.yul\":6294:6295   */\n      dup3\n        /* \"#utility.yul\":6290:6299   */\n      sub\n        /* \"#utility.yul\":6282:6299   */\n      swap1\n      pop\n        /* \"#utility.yul\":6321:6322   */\n      dup2\n        /* \"#utility.yul\":6315:6319   */\n      dup2\n        /* \"#utility.yul\":6312:6323   */\n      gt\n        /* \"#utility.yul\":6309:6346   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":6326:6344   */\n      tag_285\n      tag_213\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6309:6346   */\n    tag_284:\n        /* \"#utility.yul\":6159:6353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6359:6691   */\n    tag_80:\n        /* \"#utility.yul\":6480:6484   */\n      0x00\n        /* \"#utility.yul\":6518:6520   */\n      0x40\n        /* \"#utility.yul\":6507:6516   */\n      dup3\n        /* \"#utility.yul\":6503:6521   */\n      add\n        /* \"#utility.yul\":6495:6521   */\n      swap1\n      pop\n        /* \"#utility.yul\":6531:6602   */\n      tag_287\n        /* \"#utility.yul\":6599:6600   */\n      0x00\n        /* \"#utility.yul\":6588:6597   */\n      dup4\n        /* \"#utility.yul\":6584:6601   */\n      add\n        /* \"#utility.yul\":6575:6581   */\n      dup6\n        /* \"#utility.yul\":6531:6602   */\n      tag_198\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6612:6684   */\n      tag_288\n        /* \"#utility.yul\":6680:6682   */\n      0x20\n        /* \"#utility.yul\":6669:6678   */\n      dup4\n        /* \"#utility.yul\":6665:6683   */\n      add\n        /* \"#utility.yul\":6656:6662   */\n      dup5\n        /* \"#utility.yul\":6612:6684   */\n      tag_205\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6359:6691   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6697:7107   */\n    tag_116:\n        /* \"#utility.yul\":6737:6744   */\n      0x00\n        /* \"#utility.yul\":6760:6780   */\n      tag_290\n        /* \"#utility.yul\":6778:6779   */\n      dup3\n        /* \"#utility.yul\":6760:6780   */\n      tag_202\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6755:6780   */\n      swap2\n      pop\n        /* \"#utility.yul\":6794:6814   */\n      tag_291\n        /* \"#utility.yul\":6812:6813   */\n      dup4\n        /* \"#utility.yul\":6794:6814   */\n      tag_202\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6789:6814   */\n      swap3\n      pop\n        /* \"#utility.yul\":6849:6850   */\n      dup3\n        /* \"#utility.yul\":6846:6847   */\n      dup3\n        /* \"#utility.yul\":6842:6851   */\n      mul\n        /* \"#utility.yul\":6871:6901   */\n      tag_292\n        /* \"#utility.yul\":6889:6900   */\n      dup2\n        /* \"#utility.yul\":6871:6901   */\n      tag_202\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6860:6901   */\n      swap2\n      pop\n        /* \"#utility.yul\":7050:7051   */\n      dup3\n        /* \"#utility.yul\":7041:7048   */\n      dup3\n        /* \"#utility.yul\":7037:7052   */\n      div\n        /* \"#utility.yul\":7034:7035   */\n      dup5\n        /* \"#utility.yul\":7031:7053   */\n      eq\n        /* \"#utility.yul\":7011:7012   */\n      dup4\n        /* \"#utility.yul\":7004:7013   */\n      iszero\n        /* \"#utility.yul\":6984:7067   */\n      or\n        /* \"#utility.yul\":6961:7100   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":7080:7098   */\n      tag_294\n      tag_213\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6961:7100   */\n    tag_293:\n        /* \"#utility.yul\":6745:7107   */\n      pop\n        /* \"#utility.yul\":6697:7107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207a6b853c7ccadd9ff2a668668c5269f53b5c53dba807d6abdc2101d65a9ea2ca64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_629": {
									"entryPoint": null,
									"id": 629,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "956:552:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1002:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:32:3"
															},
															"nodeType": "YulIf",
															"src": "966:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1095:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1139:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1233:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1278:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1372:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1417:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "910:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "921:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "933:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "941:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "949:6:3",
														"type": ""
													}
												],
												"src": "845:663:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040523480156200001157600080fd5b506040516200167c3803806200167c833981810160405281019062000037919062000146565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050620001a2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010e82620000e1565b9050919050565b620001208162000101565b81146200012c57600080fd5b50565b600081519050620001408162000115565b92915050565b600080600060608486031215620001625762000161620000dc565b5b600062000172868287016200012f565b935050602062000185868287016200012f565b925050604062000198868287016200012f565b9150509250925092565b60805160a05160c0516114416200023b600039600081816109150152610c6001526000818161025401528181610331015281816105a301528181610721015281816107c201528181610baa01528181610c840152610d9901526000818161022f01528181610401015281816104c5015281816106800152818161085c015281816109fd01528181610ada0152610cf901526114416000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637a16af7f116100715780637a16af7f1461016b5780639c117f0f14610187578063a0a986f1146101b7578063ba9c6845146101d5578063d21220a7146101f3578063d96073cf14610211576100b4565b80630dfe1681146100b95780632af4ec36146100d7578063443cb4bc146100f35780635a76f25e146101115780636caf25ce1461012f5780637464fc3d1461014d575b600080fd5b6100c161022d565b6040516100ce919061106c565b60405180910390f35b6100f160048036038101906100ec91906110c2565b610251565b005b6100fb6104aa565b60405161010891906110fe565b60405180910390f35b6101196104b0565b60405161012691906110fe565b60405180910390f35b6101376104b6565b60405161014491906110fe565b60405180910390f35b6101556104bc565b60405161016291906110fe565b60405180910390f35b61018560048036038101906101809190611119565b6104c2565b005b6101a1600480360381019061019c91906110c2565b6109f8565b6040516101ae91906110fe565b60405180910390f35b6101bf610c58565b6040516101cc91906110fe565b60405180910390f35b6101dd610c5e565b6040516101ea919061106c565b60405180910390f35b6101fb610c82565b604051610208919061106c565b60405180910390f35b61022b60048036038101906102269190611119565b610ca6565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102ad929190611159565b602060405180830381865afa1580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190611197565b101561032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032690611221565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161038c93929190611241565b6020604051808303816000875af11580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf91906112b0565b5060006002546000546103e2919061133b565b6001546103ef919061136c565b905080600154116103ff57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161045a9291906113a0565b6020604051808303816000875af1158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d91906112b0565b506104a6610cf7565b5050565b60015481565b60025481565b60045481565b60005481565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161051e929190611159565b602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190611197565b10156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790611221565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016105fc929190611159565b602060405180830381865afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190611197565b101561067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590611221565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106db93929190611241565b6020604051808303816000875af11580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e91906112b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161077c93929190611241565b6020604051808303816000875af115801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf91906112b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610819919061106c565b602060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085a9190611197565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108b3919061106c565b602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190611197565b6108fe91906113c9565b6000819055506000610911600054610e65565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161096e9291906113a0565b6020604051808303816000875af115801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b191906112b0565b506109ba610cf7565b7fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516109eb9291906113a0565b60405180910390a1505050565b6000817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610a56929190611159565b602060405180830381865afa158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a979190611197565b1015610ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acf90611221565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b3593929190611241565b6020604051808303816000875af1158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7891906112b0565b506000600154600054610b8b919061133b565b600254610b98919061136c565b90508060025411610ba857600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c039291906113a0565b6020604051808303816000875af1158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4691906112b0565b50610c4f610cf7565b80915050919050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082118015610cb65750600081145b15610cca57610cc4826109f8565b50610cf3565b600081118015610cda5750600082145b15610ced57610ce881610251565b610cf2565b600080fd5b5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d50919061106c565b602060405180830381865afa158015610d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d919190611197565b6001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610df0919061106c565b602060405180830381865afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e319190611197565b600281905550600154600254610e47919061133b565b600381905550600254600154610e5d919061133b565b600481905550565b6000808203610e77576000905061100d565b60006001905060008390506000608082901c1115610e9e57608081901c9050604082901b91505b6000604082901c1115610eba57604081901c9050602082901b91505b6000602082901c1115610ed657602081901c9050601082901b91505b6000601082901c1115610ef257601081901c9050600882901b91505b6000600882901c1115610f0e57600881901c9050600482901b91505b6000600482901c1115610f2a57600481901c9050600282901b91505b6000600282901c1115610f3f57600182901b91505b6001828581610f5157610f506112dd565b5b048301901c91506001828581610f6a57610f696112dd565b5b048301901c91506001828581610f8357610f826112dd565b5b048301901c91506001828581610f9c57610f9b6112dd565b5b048301901c91506001828581610fb557610fb46112dd565b5b048301901c91506001828581610fce57610fcd6112dd565b5b048301901c91506001828581610fe757610fe66112dd565b5b048301901c915061100882838681611002576110016112dd565b5b04611012565b925050505b919050565b60008183106110215781611023565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110568261102b565b9050919050565b6110668161104b565b82525050565b6000602082019050611081600083018461105d565b92915050565b600080fd5b6000819050919050565b61109f8161108c565b81146110aa57600080fd5b50565b6000813590506110bc81611096565b92915050565b6000602082840312156110d8576110d7611087565b5b60006110e6848285016110ad565b91505092915050565b6110f88161108c565b82525050565b600060208201905061111360008301846110ef565b92915050565b600080604083850312156111305761112f611087565b5b600061113e858286016110ad565b925050602061114f858286016110ad565b9150509250929050565b600060408201905061116e600083018561105d565b61117b602083018461105d565b9392505050565b60008151905061119181611096565b92915050565b6000602082840312156111ad576111ac611087565b5b60006111bb84828501611182565b91505092915050565b600082825260208201905092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b600061120b6015836111c4565b9150611216826111d5565b602082019050919050565b6000602082019050818103600083015261123a816111fe565b9050919050565b6000606082019050611256600083018661105d565b611263602083018561105d565b61127060408301846110ef565b949350505050565b60008115159050919050565b61128d81611278565b811461129857600080fd5b50565b6000815190506112aa81611284565b92915050565b6000602082840312156112c6576112c5611087565b5b60006112d48482850161129b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113468261108c565b91506113518361108c565b925082611361576113606112dd565b5b828204905092915050565b60006113778261108c565b91506113828361108c565b925082820390508181111561139a5761139961130c565b5b92915050565b60006040820190506113b5600083018561105d565b6113c260208301846110ef565b9392505050565b60006113d48261108c565b91506113df8361108c565b92508282026113ed8161108c565b915082820484148315176114045761140361130c565b5b509291505056fea26469706673582212207a6b853c7ccadd9ff2a668668c5269f53b5c53dba807d6abdc2101d65a9ea2ca64736f6c63430008110033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x167C CODESIZE SUB DUP1 PUSH3 0x167C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x146 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1A2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E DUP3 PUSH3 0xE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x120 DUP2 PUSH3 0x101 JUMP JUMPDEST DUP2 EQ PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x140 DUP2 PUSH3 0x115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x162 JUMPI PUSH3 0x161 PUSH3 0xDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x172 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x185 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x198 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1441 PUSH3 0x23B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x915 ADD MSTORE PUSH2 0xC60 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x254 ADD MSTORE DUP2 DUP2 PUSH2 0x331 ADD MSTORE DUP2 DUP2 PUSH2 0x5A3 ADD MSTORE DUP2 DUP2 PUSH2 0x721 ADD MSTORE DUP2 DUP2 PUSH2 0x7C2 ADD MSTORE DUP2 DUP2 PUSH2 0xBAA ADD MSTORE DUP2 DUP2 PUSH2 0xC84 ADD MSTORE PUSH2 0xD99 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x22F ADD MSTORE DUP2 DUP2 PUSH2 0x401 ADD MSTORE DUP2 DUP2 PUSH2 0x4C5 ADD MSTORE DUP2 DUP2 PUSH2 0x680 ADD MSTORE DUP2 DUP2 PUSH2 0x85C ADD MSTORE DUP2 DUP2 PUSH2 0x9FD ADD MSTORE DUP2 DUP2 PUSH2 0xADA ADD MSTORE PUSH2 0xCF9 ADD MSTORE PUSH2 0x1441 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A16AF7F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9C117F0F EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xBA9C6845 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xD96073CF EQ PUSH2 0x211 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2AF4EC36 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x326 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH2 0x4A6 PUSH2 0xCF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x836 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x911 PUSH1 0x0 SLOAD PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96E SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH2 0x9BA PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACF SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH2 0xC4F PUSH2 0xCF7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xCB6 JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC4 DUP3 PUSH2 0x9F8 JUMP JUMPDEST POP PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xCDA JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH2 0xCE8 DUP2 PUSH2 0x251 JUMP JUMPDEST PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xE77 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x100D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xEBA JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xED6 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF0E JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF2A JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF3F JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF51 JUMPI PUSH2 0xF50 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF83 JUMPI PUSH2 0xF82 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0x1008 DUP3 DUP4 DUP7 DUP2 PUSH2 0x1002 JUMPI PUSH2 0x1001 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1021 JUMPI DUP2 PUSH2 0x1023 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1056 DUP3 PUSH2 0x102B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1066 DUP2 PUSH2 0x104B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1081 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109F DUP2 PUSH2 0x108C JUMP JUMPDEST DUP2 EQ PUSH2 0x10AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BC DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E6 DUP5 DUP3 DUP6 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F8 DUP2 PUSH2 0x108C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1113 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH2 0x112F PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x113E DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x114F DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x116E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x117B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x105D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1191 DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11AD JUMPI PUSH2 0x11AC PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 DUP3 DUP6 ADD PUSH2 0x1182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120B PUSH1 0x15 DUP4 PUSH2 0x11C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x123A DUP2 PUSH2 0x11FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1256 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x1263 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x1270 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128D DUP2 PUSH2 0x1278 JUMP JUMPDEST DUP2 EQ PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12AA DUP2 PUSH2 0x1284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D4 DUP5 DUP3 DUP6 ADD PUSH2 0x129B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1346 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x1351 DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1377 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x1382 DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x139A JUMPI PUSH2 0x1399 PUSH2 0x130C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x13C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D4 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x13DF DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13ED DUP2 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x130C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x6B853C7CCADD9FF2A668668C5269F53B5C53DBA807D6ABDC2101D6 GAS SWAP15 LOG2 0xCA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:2708:2:-:0;;;573:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;659:7;650:16;;;;;;;;;;685:7;676:16;;;;;;;;;;715:11;702:24;;;;;;;;;;573:160;;;224:2708;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;224:2708:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get0_850": {
									"entryPoint": 593,
									"id": 850,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@get1_920": {
									"entryPoint": 2552,
									"id": 920,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@kLast_593": {
									"entryPoint": 1212,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ltrAddress_591": {
									"entryPoint": 3166,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_42": {
									"entryPoint": 4114,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price0_599": {
									"entryPoint": 3160,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price1_601": {
									"entryPoint": 1206,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@provideLiquidity_784": {
									"entryPoint": 1218,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@reserve0_595": {
									"entryPoint": 1194,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_597": {
									"entryPoint": 1200,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_466": {
									"entryPoint": 3685,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_958": {
									"entryPoint": 3238,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token0_587": {
									"entryPoint": 557,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_589": {
									"entryPoint": 3202,
									"id": 589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@update_669": {
									"entryPoint": 3319,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7110:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:3",
														"type": ""
													}
												],
												"src": "593:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "986:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:3",
														"type": ""
													}
												],
												"src": "920:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:3"
															},
															"nodeType": "YulIf",
															"src": "1056:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:3",
														"type": ""
													}
												],
												"src": "1003:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:3",
														"type": ""
													}
												],
												"src": "1131:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:32:3"
															},
															"nodeType": "YulIf",
															"src": "1352:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1481:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:3",
														"type": ""
													}
												],
												"src": "1276:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													}
												],
												"src": "1611:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:3",
														"type": ""
													}
												],
												"src": "1735:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2046:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2092:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2094:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2094:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2094:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2067:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2076:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2059:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2059:32:3"
															},
															"nodeType": "YulIf",
															"src": "2056:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2185:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2200:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2204:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2229:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2264:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2275:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2260:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2260:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2284:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2239:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2239:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2229:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2312:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2327:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2331:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2357:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2392:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2403:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2388:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2388:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2412:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2367:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2367:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2357:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2008:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2019:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2031:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2039:6:3",
														"type": ""
													}
												],
												"src": "1963:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2569:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2579:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2591:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2602:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2659:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2672:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2683:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2668:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2615:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2740:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2753:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2764:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2749:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2749:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2696:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2696:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2533:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2545:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2553:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2564:4:3",
														"type": ""
													}
												],
												"src": "2443:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2844:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2854:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2863:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2822:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2830:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2838:5:3",
														"type": ""
													}
												],
												"src": "2781:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3007:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3053:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3055:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3055:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3037:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3024:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3024:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:32:3"
															},
															"nodeType": "YulIf",
															"src": "3017:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3146:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3161:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3175:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3165:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3190:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3236:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3247:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3232:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3232:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3256:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3200:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3190:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2977:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2988:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3000:6:3",
														"type": ""
													}
												],
												"src": "2930:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3383:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3400:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3405:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3393:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3393:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3421:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3440:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3445:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3436:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3436:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3421:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3355:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3360:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3371:11:3",
														"type": ""
													}
												],
												"src": "3287:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3590:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3598:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:14:3"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3602:23:3",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3579:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3579:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3560:6:3",
														"type": ""
													}
												],
												"src": "3462:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3785:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3795:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3866:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3802:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3967:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nodeType": "YulIdentifier",
																	"src": "3878:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3878:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3878:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3980:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3991:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3996:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3987:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3980:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3773:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3781:3:3",
														"type": ""
													}
												],
												"src": "3639:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4182:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4192:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4204:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4215:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4200:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4200:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4192:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4239:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4250:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4235:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4235:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4258:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4264:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4254:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4254:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4228:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4228:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4284:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4292:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4284:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4162:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:3",
														"type": ""
													}
												],
												"src": "4011:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4590:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4600:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4612:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4623:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4608:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4608:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4600:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4680:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4636:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4636:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4761:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4774:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4785:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4770:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4717:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4717:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4717:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4843:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4799:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4799:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4546:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4558:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4566:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4585:4:3",
														"type": ""
													}
												],
												"src": "4436:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4926:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4936:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4961:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4954:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4954:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4936:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4908:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4918:7:3",
														"type": ""
													}
												],
												"src": "4884:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5020:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5074:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5083:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5086:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5076:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5076:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5076:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5065:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5050:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5050:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5040:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5040:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5033:40:3"
															},
															"nodeType": "YulIf",
															"src": "5030:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5013:5:3",
														"type": ""
													}
												],
												"src": "4980:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5162:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5172:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5187:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5181:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5172:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5227:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5203:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5203:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5140:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5148:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5156:5:3",
														"type": ""
													}
												],
												"src": "5102:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5319:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5365:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5367:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5367:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5367:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5340:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:32:3"
															},
															"nodeType": "YulIf",
															"src": "5329:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5458:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5473:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5477:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5502:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5545:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5556:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5541:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5541:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5565:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5512:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5502:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5289:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5300:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5312:6:3",
														"type": ""
													}
												],
												"src": "5245:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5624:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5641:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5634:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5738:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5741:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5731:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5731:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5731:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5762:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5755:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5755:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5596:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5810:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5827:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5830:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5820:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5820:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5924:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5927:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5917:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5917:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5917:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5951:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5941:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5941:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5782:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6010:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6020:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6043:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6025:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6025:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6020:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6054:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6077:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6059:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6054:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6101:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6103:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6103:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6103:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6098:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6091:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6091:9:3"
															},
															"nodeType": "YulIf",
															"src": "6088:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6133:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6145:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6138:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6133:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5999:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6002:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6008:1:3",
														"type": ""
													}
												],
												"src": "5968:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6204:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6214:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6237:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6219:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6214:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6248:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6271:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6253:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6253:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6248:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6282:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6294:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6297:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6282:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6324:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6326:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6326:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6326:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6315:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6321:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6312:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6312:11:3"
															},
															"nodeType": "YulIf",
															"src": "6309:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6190:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6193:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6199:4:3",
														"type": ""
													}
												],
												"src": "6159:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6485:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6495:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6507:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6518:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6503:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6503:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6495:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6575:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6588:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6599:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6584:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6584:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6531:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6656:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6669:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6680:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6665:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6665:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6612:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6612:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6449:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6461:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6469:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6480:4:3",
														"type": ""
													}
												],
												"src": "6359:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6745:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6755:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6778:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6760:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6755:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6789:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6794:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6823:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6846:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6849:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6827:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6860:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6889:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6871:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6860:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7078:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7080:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7080:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7080:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7011:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7004:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7004:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7034:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7041:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7050:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7037:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7037:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7031:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7031:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6984:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6984:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6964:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:113:3"
															},
															"nodeType": "YulIf",
															"src": "6961:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6728:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6731:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6737:7:3",
														"type": ""
													}
												],
												"src": "6697:410:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"587": [
									{
										"length": 32,
										"start": 559
									},
									{
										"length": 32,
										"start": 1025
									},
									{
										"length": 32,
										"start": 1221
									},
									{
										"length": 32,
										"start": 1664
									},
									{
										"length": 32,
										"start": 2140
									},
									{
										"length": 32,
										"start": 2557
									},
									{
										"length": 32,
										"start": 2778
									},
									{
										"length": 32,
										"start": 3321
									}
								],
								"589": [
									{
										"length": 32,
										"start": 596
									},
									{
										"length": 32,
										"start": 817
									},
									{
										"length": 32,
										"start": 1443
									},
									{
										"length": 32,
										"start": 1825
									},
									{
										"length": 32,
										"start": 1986
									},
									{
										"length": 32,
										"start": 2986
									},
									{
										"length": 32,
										"start": 3204
									},
									{
										"length": 32,
										"start": 3481
									}
								],
								"591": [
									{
										"length": 32,
										"start": 2325
									},
									{
										"length": 32,
										"start": 3168
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80637a16af7f116100715780637a16af7f1461016b5780639c117f0f14610187578063a0a986f1146101b7578063ba9c6845146101d5578063d21220a7146101f3578063d96073cf14610211576100b4565b80630dfe1681146100b95780632af4ec36146100d7578063443cb4bc146100f35780635a76f25e146101115780636caf25ce1461012f5780637464fc3d1461014d575b600080fd5b6100c161022d565b6040516100ce919061106c565b60405180910390f35b6100f160048036038101906100ec91906110c2565b610251565b005b6100fb6104aa565b60405161010891906110fe565b60405180910390f35b6101196104b0565b60405161012691906110fe565b60405180910390f35b6101376104b6565b60405161014491906110fe565b60405180910390f35b6101556104bc565b60405161016291906110fe565b60405180910390f35b61018560048036038101906101809190611119565b6104c2565b005b6101a1600480360381019061019c91906110c2565b6109f8565b6040516101ae91906110fe565b60405180910390f35b6101bf610c58565b6040516101cc91906110fe565b60405180910390f35b6101dd610c5e565b6040516101ea919061106c565b60405180910390f35b6101fb610c82565b604051610208919061106c565b60405180910390f35b61022b60048036038101906102269190611119565b610ca6565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102ad929190611159565b602060405180830381865afa1580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190611197565b101561032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032690611221565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161038c93929190611241565b6020604051808303816000875af11580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf91906112b0565b5060006002546000546103e2919061133b565b6001546103ef919061136c565b905080600154116103ff57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161045a9291906113a0565b6020604051808303816000875af1158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d91906112b0565b506104a6610cf7565b5050565b60015481565b60025481565b60045481565b60005481565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161051e929190611159565b602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190611197565b10156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790611221565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016105fc929190611159565b602060405180830381865afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190611197565b101561067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590611221565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106db93929190611241565b6020604051808303816000875af11580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e91906112b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161077c93929190611241565b6020604051808303816000875af115801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf91906112b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610819919061106c565b602060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085a9190611197565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108b3919061106c565b602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190611197565b6108fe91906113c9565b6000819055506000610911600054610e65565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161096e9291906113a0565b6020604051808303816000875af115801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b191906112b0565b506109ba610cf7565b7fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516109eb9291906113a0565b60405180910390a1505050565b6000817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610a56929190611159565b602060405180830381865afa158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a979190611197565b1015610ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acf90611221565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b3593929190611241565b6020604051808303816000875af1158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7891906112b0565b506000600154600054610b8b919061133b565b600254610b98919061136c565b90508060025411610ba857600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c039291906113a0565b6020604051808303816000875af1158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4691906112b0565b50610c4f610cf7565b80915050919050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082118015610cb65750600081145b15610cca57610cc4826109f8565b50610cf3565b600081118015610cda5750600082145b15610ced57610ce881610251565b610cf2565b600080fd5b5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d50919061106c565b602060405180830381865afa158015610d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d919190611197565b6001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610df0919061106c565b602060405180830381865afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e319190611197565b600281905550600154600254610e47919061133b565b600381905550600254600154610e5d919061133b565b600481905550565b6000808203610e77576000905061100d565b60006001905060008390506000608082901c1115610e9e57608081901c9050604082901b91505b6000604082901c1115610eba57604081901c9050602082901b91505b6000602082901c1115610ed657602081901c9050601082901b91505b6000601082901c1115610ef257601081901c9050600882901b91505b6000600882901c1115610f0e57600881901c9050600482901b91505b6000600482901c1115610f2a57600481901c9050600282901b91505b6000600282901c1115610f3f57600182901b91505b6001828581610f5157610f506112dd565b5b048301901c91506001828581610f6a57610f696112dd565b5b048301901c91506001828581610f8357610f826112dd565b5b048301901c91506001828581610f9c57610f9b6112dd565b5b048301901c91506001828581610fb557610fb46112dd565b5b048301901c91506001828581610fce57610fcd6112dd565b5b048301901c91506001828581610fe757610fe66112dd565b5b048301901c915061100882838681611002576110016112dd565b5b04611012565b925050505b919050565b60008183106110215781611023565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110568261102b565b9050919050565b6110668161104b565b82525050565b6000602082019050611081600083018461105d565b92915050565b600080fd5b6000819050919050565b61109f8161108c565b81146110aa57600080fd5b50565b6000813590506110bc81611096565b92915050565b6000602082840312156110d8576110d7611087565b5b60006110e6848285016110ad565b91505092915050565b6110f88161108c565b82525050565b600060208201905061111360008301846110ef565b92915050565b600080604083850312156111305761112f611087565b5b600061113e858286016110ad565b925050602061114f858286016110ad565b9150509250929050565b600060408201905061116e600083018561105d565b61117b602083018461105d565b9392505050565b60008151905061119181611096565b92915050565b6000602082840312156111ad576111ac611087565b5b60006111bb84828501611182565b91505092915050565b600082825260208201905092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b600061120b6015836111c4565b9150611216826111d5565b602082019050919050565b6000602082019050818103600083015261123a816111fe565b9050919050565b6000606082019050611256600083018661105d565b611263602083018561105d565b61127060408301846110ef565b949350505050565b60008115159050919050565b61128d81611278565b811461129857600080fd5b50565b6000815190506112aa81611284565b92915050565b6000602082840312156112c6576112c5611087565b5b60006112d48482850161129b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113468261108c565b91506113518361108c565b925082611361576113606112dd565b5b828204905092915050565b60006113778261108c565b91506113828361108c565b925082820390508181111561139a5761139961130c565b5b92915050565b60006040820190506113b5600083018561105d565b6113c260208301846110ef565b9392505050565b60006113d48261108c565b91506113df8361108c565b92508282026113ed8161108c565b915082820484148315176114045761140361130c565b5b509291505056fea26469706673582212207a6b853c7ccadd9ff2a668668c5269f53b5c53dba807d6abdc2101d65a9ea2ca64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A16AF7F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9C117F0F EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xBA9C6845 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xD96073CF EQ PUSH2 0x211 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2AF4EC36 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x326 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH2 0x4A6 PUSH2 0xCF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x836 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x911 PUSH1 0x0 SLOAD PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96E SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH2 0x9BA PUSH2 0xCF7 JUMP JUMPDEST PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP3 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST LT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACF SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST POP PUSH2 0xC4F PUSH2 0xCF7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xCB6 JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC4 DUP3 PUSH2 0x9F8 JUMP JUMPDEST POP PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xCDA JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH2 0xCE8 DUP2 PUSH2 0x251 JUMP JUMPDEST PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xE77 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x100D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xEBA JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xED6 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF0E JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF2A JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF3F JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF51 JUMPI PUSH2 0xF50 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF83 JUMPI PUSH2 0xF82 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0x1008 DUP3 DUP4 DUP7 DUP2 PUSH2 0x1002 JUMPI PUSH2 0x1001 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DIV PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1021 JUMPI DUP2 PUSH2 0x1023 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1056 DUP3 PUSH2 0x102B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1066 DUP2 PUSH2 0x104B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1081 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109F DUP2 PUSH2 0x108C JUMP JUMPDEST DUP2 EQ PUSH2 0x10AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BC DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E6 DUP5 DUP3 DUP6 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F8 DUP2 PUSH2 0x108C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1113 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH2 0x112F PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x113E DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x114F DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x116E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x117B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x105D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1191 DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11AD JUMPI PUSH2 0x11AC PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 DUP3 DUP6 ADD PUSH2 0x1182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120B PUSH1 0x15 DUP4 PUSH2 0x11C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x123A DUP2 PUSH2 0x11FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1256 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x1263 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x1270 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128D DUP2 PUSH2 0x1278 JUMP JUMPDEST DUP2 EQ PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12AA DUP2 PUSH2 0x1284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x1087 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D4 DUP5 DUP3 DUP6 ADD PUSH2 0x129B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1346 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x1351 DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1377 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x1382 DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x139A JUMPI PUSH2 0x1399 PUSH2 0x130C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x105D JUMP JUMPDEST PUSH2 0x13C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D4 DUP3 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x13DF DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13ED DUP2 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x130C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x6B853C7CCADD9FF2A668668C5269F53B5C53DBA807D6ABDC2101D6 GAS SWAP15 LOG2 0xCA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:2708:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;244:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1691:450;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;385:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;359:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;976:709;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2147:519;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;318:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2672:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;244:31;;;:::o;1691:450::-;1803:8;1755:6;1748:24;;;1773:10;1793:4;1748:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1740:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1854:6;1847:27;;;1875:10;1895:4;1902:8;1847:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1921:17;1961:8;;1953:5;;:16;;;;:::i;:::-;1941:8;;:29;;;;:::i;:::-;1921:49;;1996:9;1984:8;;:21;1980:136;;2021:8;;;1980:136;2066:6;2059:23;;;2083:10;2095:9;2059:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2126:8;:6;:8::i;:::-;1730:411;1691:450;:::o;385:23::-;;;;:::o;414:::-;;;;:::o;470:21::-;;;;:::o;359:20::-;;;;:::o;976:709::-;1120:8;1072:6;1065:24;;;1090:10;1110:4;1065:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1057:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1227:8;1179:6;1172:24;;;1197:10;1217:4;1172:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1164:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1278:6;1271:27;;;1299:10;1319:4;1326:8;1271:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1352:6;1345:27;;;1373:10;1393:4;1400:8;1345:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1476:6;1469:24;;;1502:4;1469:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1434:6;1427:24;;;1460:4;1427:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;;:::i;:::-;1419:5;:89;;;;1518:14;1535:16;1545:5;;1535:9;:16::i;:::-;1518:33;;1568:10;1561:27;;;1589:10;1601:6;1561:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1618:8;:6;:8::i;:::-;1641:37;1659:10;1671:6;1641:37;;;;;;;:::i;:::-;;;;;;;;1047:638;976:709;;:::o;2147:519::-;2195:7;2277:8;2229:6;2222:24;;;2247:10;2267:4;2222:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;2214:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2328:6;2321:27;;;2349:10;2369:4;2376:8;2321:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2395:17;2435:8;;2427:5;;:16;;;;:::i;:::-;2415:8;;:29;;;;:::i;:::-;2395:49;;2495:9;2483:8;;:21;2479:136;;2520:8;;;2479:136;2565:6;2558:23;;;2582:10;2594:9;2558:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2624:8;:6;:8::i;:::-;2649:9;2642:16;;;2147:519;;;:::o;443:21::-;;;;:::o;318:35::-;;;:::o;281:31::-;;;:::o;2672:258::-;2751:1;2741:7;:11;:27;;;;;2767:1;2756:7;:12;2741:27;2737:187;;;2784:13;2789:7;2784:4;:13::i;:::-;;2737:187;;;2828:1;2818:7;:11;:27;;;;;2844:1;2833:7;:12;2818:27;2814:110;;;2861:13;2866:7;2861:4;:13::i;:::-;2814:110;;;2905:8;;;2814:110;2737:187;2672:258;;:::o;739:229::-;793:6;786:24;;;819:4;786:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;775:8;:50;;;;853:6;846:24;;;879:4;846:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:8;:50;;;;915:8;;904;;:19;;;;:::i;:::-;895:6;:28;;;;953:8;;942;;:19;;;;:::i;:::-;933:6;:28;;;;739:229::o;6281:2206:0:-;6329:7;6357:1;6352;:6;6348:45;;6381:1;6374:8;;;;6348:45;7058:14;7075:1;7058:18;;7086:9;7098:1;7086:13;;7124:1;7118:3;7113:1;:8;;:12;7109:79;;;7147:3;7141:9;;;;;7175:2;7164:13;;;;;7109:79;7211:1;7206:2;7201:1;:7;;:11;7197:77;;;7234:2;7228:8;;;;;7261:2;7250:13;;;;;7197:77;7297:1;7292:2;7287:1;:7;;:11;7283:77;;;7320:2;7314:8;;;;;7347:2;7336:13;;;;;7283:77;7383:1;7378:2;7373:1;:7;;:11;7369:76;;;7406:2;7400:8;;;;;7433:1;7422:12;;;;;7369:76;7467:1;7463;7458;:6;;:10;7454:74;;;7490:1;7484:7;;;;;7516:1;7505:12;;;;;7454:74;7550:1;7546;7541;:6;;:10;7537:74;;;7573:1;7567:7;;;;;7599:1;7588:12;;;;;7537:74;7633:1;7629;7624;:6;;:10;7620:53;;;7661:1;7650:12;;;;;7620:53;8131:1;8120:6;8116:1;:10;;;;;:::i;:::-;;;8107:6;:19;8106:26;;8097:35;;8180:1;8169:6;8165:1;:10;;;;;:::i;:::-;;;8156:6;:19;8155:26;;8146:35;;8229:1;8218:6;8214:1;:10;;;;;:::i;:::-;;;8205:6;:19;8204:26;;8195:35;;8278:1;8267:6;8263:1;:10;;;;;:::i;:::-;;;8254:6;:19;8253:26;;8244:35;;8327:1;8316:6;8312:1;:10;;;;;:::i;:::-;;;8303:6;:19;8302:26;;8293:35;;8376:1;8365:6;8361:1;:10;;;;;:::i;:::-;;;8352:6;:19;8351:26;;8342:35;;8425:1;8414:6;8410:1;:10;;;;;:::i;:::-;;;8401:6;:19;8400:26;;8391:35;;8447:23;8451:6;8463;8459:1;:10;;;;;:::i;:::-;;;8447:3;:23::i;:::-;8440:30;;;;6281:2206;;;;:::o;589:104::-;647:7;677:1;673;:5;:13;;685:1;673:13;;;681:1;673:13;666:20;;589:104;;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:474::-;2031:6;2039;2088:2;2076:9;2067:7;2063:23;2059:32;2056:119;;;2094:79;;:::i;:::-;2056:119;2214:1;2239:53;2284:7;2275:6;2264:9;2260:22;2239:53;:::i;:::-;2229:63;;2185:117;2341:2;2367:53;2412:7;2403:6;2392:9;2388:22;2367:53;:::i;:::-;2357:63;;2312:118;1963:474;;;;;:::o;2443:332::-;2564:4;2602:2;2591:9;2587:18;2579:26;;2615:71;2683:1;2672:9;2668:17;2659:6;2615:71;:::i;:::-;2696:72;2764:2;2753:9;2749:18;2740:6;2696:72;:::i;:::-;2443:332;;;;;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:351::-;3000:6;3049:2;3037:9;3028:7;3024:23;3020:32;3017:119;;;3055:79;;:::i;:::-;3017:119;3175:1;3200:64;3256:7;3247:6;3236:9;3232:22;3200:64;:::i;:::-;3190:74;;3146:128;2930:351;;;;:::o;3287:169::-;3371:11;3405:6;3400:3;3393:19;3445:4;3440:3;3436:14;3421:29;;3287:169;;;;:::o;3462:171::-;3602:23;3598:1;3590:6;3586:14;3579:47;3462:171;:::o;3639:366::-;3781:3;3802:67;3866:2;3861:3;3802:67;:::i;:::-;3795:74;;3878:93;3967:3;3878:93;:::i;:::-;3996:2;3991:3;3987:12;3980:19;;3639:366;;;:::o;4011:419::-;4177:4;4215:2;4204:9;4200:18;4192:26;;4264:9;4258:4;4254:20;4250:1;4239:9;4235:17;4228:47;4292:131;4418:4;4292:131;:::i;:::-;4284:139;;4011:419;;;:::o;4436:442::-;4585:4;4623:2;4612:9;4608:18;4600:26;;4636:71;4704:1;4693:9;4689:17;4680:6;4636:71;:::i;:::-;4717:72;4785:2;4774:9;4770:18;4761:6;4717:72;:::i;:::-;4799;4867:2;4856:9;4852:18;4843:6;4799:72;:::i;:::-;4436:442;;;;;;:::o;4884:90::-;4918:7;4961:5;4954:13;4947:21;4936:32;;4884:90;;;:::o;4980:116::-;5050:21;5065:5;5050:21;:::i;:::-;5043:5;5040:32;5030:60;;5086:1;5083;5076:12;5030:60;4980:116;:::o;5102:137::-;5156:5;5187:6;5181:13;5172:22;;5203:30;5227:5;5203:30;:::i;:::-;5102:137;;;;:::o;5245:345::-;5312:6;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:61;5565:7;5556:6;5545:9;5541:22;5512:61;:::i;:::-;5502:71;;5458:125;5245:345;;;;:::o;5596:180::-;5644:77;5641:1;5634:88;5741:4;5738:1;5731:15;5765:4;5762:1;5755:15;5782:180;5830:77;5827:1;5820:88;5927:4;5924:1;5917:15;5951:4;5948:1;5941:15;5968:185;6008:1;6025:20;6043:1;6025:20;:::i;:::-;6020:25;;6059:20;6077:1;6059:20;:::i;:::-;6054:25;;6098:1;6088:35;;6103:18;;:::i;:::-;6088:35;6145:1;6142;6138:9;6133:14;;5968:185;;;;:::o;6159:194::-;6199:4;6219:20;6237:1;6219:20;:::i;:::-;6214:25;;6253:20;6271:1;6253:20;:::i;:::-;6248:25;;6297:1;6294;6290:9;6282:17;;6321:1;6315:4;6312:11;6309:37;;;6326:18;;:::i;:::-;6309:37;6159:194;;;;:::o;6359:332::-;6480:4;6518:2;6507:9;6503:18;6495:26;;6531:71;6599:1;6588:9;6584:17;6575:6;6531:71;:::i;:::-;6612:72;6680:2;6669:9;6665:18;6656:6;6612:72;:::i;:::-;6359:332;;;;;:::o;6697:410::-;6737:7;6760:20;6778:1;6760:20;:::i;:::-;6755:25;;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6849:1;6846;6842:9;6871:30;6889:11;6871:30;:::i;:::-;6860:41;;7050:1;7041:7;7037:15;7034:1;7031:22;7011:1;7004:9;6984:83;6961:139;;7080:18;;:::i;:::-;6961:139;6745:362;6697:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1037000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"get0(uint256)": "infinite",
								"get1(uint256)": "infinite",
								"kLast()": "2540",
								"ltrAddress()": "infinite",
								"price0()": "2473",
								"price1()": "2518",
								"provideLiquidity(uint256,uint256)": "infinite",
								"reserve0()": "2474",
								"reserve1()": "2496",
								"swap(uint256,uint256)": "infinite",
								"token0()": "infinite",
								"token1()": "infinite"
							},
							"internal": {
								"update()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 573,
									"end": 733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 659,
									"end": 666,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 650,
									"end": 666,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 650,
									"end": 666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 650,
									"end": 666,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 685,
									"end": 692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 692,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 676,
									"end": 692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 692,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 715,
									"end": 726,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "591"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "589"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "587"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2932,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a6b853c7ccadd9ff2a668668c5269f53b5c53dba807d6abdc2101d65a9ea2ca64736f6c63430008110033",
									".code": [
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "7A16AF7F"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "7A16AF7F"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "9C117F0F"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "A0A986F1"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "BA9C6845"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "D21220A7"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "D96073CF"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "DFE1681"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "2AF4EC36"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "443CB4BC"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "5A76F25E"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "6CAF25CE"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "7464FC3D"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2932,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 244,
											"end": 275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 244,
											"end": 275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1691,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1691,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 385,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 470,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 359,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 976,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2147,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2147,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2147,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 443,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 443,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 318,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 318,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 281,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 281,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2672,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1811,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1748,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1748,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1748,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1740,
											"end": 1837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1847,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1874,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1875,
											"end": 1885,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1899,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1910,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1847,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1847,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1961,
											"end": 1969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1953,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1949,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1941,
											"end": 1949,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1941,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1984,
											"end": 1992,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1980,
											"end": 2116,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2029,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1980,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2104,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2059,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2059,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2126,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 2141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1065,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1065,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1128,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1057,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1197,
											"end": 1207,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1172,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1172,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1235,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1235,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1164,
											"end": 1261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1271,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1323,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1334,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1271,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1271,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1373,
											"end": 1383,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1345,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1345,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1469,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1469,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1469,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1460,
											"end": 1464,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1427,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1427,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1427,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1535,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "591"
										},
										{
											"begin": 1561,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1589,
											"end": 1599,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1561,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1561,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1618,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1618,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1659,
											"end": 1669,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1641,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2222,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2222,
											"end": 2246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2247,
											"end": 2257,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2222,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2222,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2222,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2285,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2285,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2214,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2214,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2321,
											"end": 2348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2348,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2349,
											"end": 2359,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2373,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2384,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2321,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2321,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2443,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2432,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2427,
											"end": 2443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2427,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2443,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2427,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2415,
											"end": 2423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2415,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2483,
											"end": 2491,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2479,
											"end": 2615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2615,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2479,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 2558,
											"end": 2581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2581,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2582,
											"end": 2592,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2558,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2558,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2624,
											"end": 2632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "591"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2752,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2768,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2789,
											"end": 2796,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2784,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2797,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2784,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2829,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2845,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2861,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2866,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2861,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2861,
											"end": 2874,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2861,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2814,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2737,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 739,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 793,
											"end": 799,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 786,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 786,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 819,
											"end": 823,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 786,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 786,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 775,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 775,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 775,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 775,
											"end": 825,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 775,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 859,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 846,
											"end": 870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 870,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 879,
											"end": 883,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 846,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 846,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 835,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 835,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 835,
											"end": 885,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 835,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 915,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 915,
											"end": 923,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 904,
											"end": 912,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 904,
											"end": 912,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 904,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 904,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 904,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 904,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 904,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 901,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 923,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 895,
											"end": 923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 961,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 950,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 942,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 961,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 933,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8116,
											"end": 8126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8165,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8214,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8263,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8312,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8361,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8410,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8459,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8447,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 975,
											"end": 991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 975,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 920,
											"end": 997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2085,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2074,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2086,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2091,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2094,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2239,
											"end": 2292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2292,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2367,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2420,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2775,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2443,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2615,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2764,
											"end": 2766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2746,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2696,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2775,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2775,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2924,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2781,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2876,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2885,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2918,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2885,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3281,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2930,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3047,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3052,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3055,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3055,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3017,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 3256,
											"end": 3263,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3245,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3200,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3264,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 3200,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3264,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3456,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3287,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3403,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3412,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3633,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3462,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3625,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 4005,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3639,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3866,
											"end": 3868,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3802,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3869,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3802,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 3967,
											"end": 3970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3878,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3971,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 3878,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3996,
											"end": 3998,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 3994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 3999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 3999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 4005,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 4005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 4005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 4005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4430,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4011,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4264,
											"end": 4273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4274,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4248,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4252,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4228,
											"end": 4275,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4418,
											"end": 4422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4292,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4423,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4292,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 4626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4636,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4706,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4686,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4636,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4636,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4636,
											"end": 4707,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4636,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4717,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4785,
											"end": 4787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4774,
											"end": 4783,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4717,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4717,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4717,
											"end": 4789,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4717,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4867,
											"end": 4869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4799,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4871,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4799,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4967,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5096,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4980,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5065,
											"end": 5070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5050,
											"end": 5071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5040,
											"end": 5072,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5030,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5030,
											"end": 5090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5086,
											"end": 5087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5088,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5030,
											"end": 5090,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5030,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5239,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5102,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5156,
											"end": 5161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5203,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5239,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5590,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5245,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5336,
											"end": 5359,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5364,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5367,
											"end": 5446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5565,
											"end": 5572,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5554,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5512,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5512,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5512,
											"end": 5573,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5512,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5573,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5458,
											"end": 5583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5590,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5776,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5596,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5721,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5722,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5745,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5762,
											"end": 5763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5782,
											"end": 5962,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5782,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5907,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5927,
											"end": 5931,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5924,
											"end": 5925,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5917,
											"end": 5932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5948,
											"end": 5949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5968,
											"end": 6153,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5968,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 6009,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6025,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6020,
											"end": 6045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6020,
											"end": 6045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6059,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6059,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6088,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6088,
											"end": 6123,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6103,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6088,
											"end": 6123,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6088,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6138,
											"end": 6147,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6133,
											"end": 6147,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6133,
											"end": 6147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5968,
											"end": 6153,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5968,
											"end": 6153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5968,
											"end": 6153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5968,
											"end": 6153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5968,
											"end": 6153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6353,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 6159,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6199,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6219,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6271,
											"end": 6272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6253,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6273,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6253,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6248,
											"end": 6273,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6248,
											"end": 6273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6299,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6323,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6326,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6353,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6353,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6691,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6359,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6599,
											"end": 6600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6597,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6575,
											"end": 6581,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6531,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6602,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6531,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6680,
											"end": 6682,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6665,
											"end": 6683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6656,
											"end": 6662,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6612,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6684,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6612,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6691,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 7107,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6697,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6760,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6794,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6849,
											"end": 6850,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6842,
											"end": 6851,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6871,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6889,
											"end": 6900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6871,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6871,
											"end": 6901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6871,
											"end": 6901,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6871,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6860,
											"end": 6901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6860,
											"end": 6901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7041,
											"end": 7048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7052,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7034,
											"end": 7035,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7004,
											"end": 7013,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6984,
											"end": 7067,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7080,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6745,
											"end": 7107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 7107,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 7107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 7107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 7107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 7107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"get0(uint256)": "2af4ec36",
							"get1(uint256)": "9c117f0f",
							"kLast()": "7464fc3d",
							"ltrAddress()": "ba9c6845",
							"price0()": "a0a986f1",
							"price1()": "6caf25ce",
							"provideLiquidity(uint256,uint256)": "7a16af7f",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(uint256,uint256)": "d96073cf",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ltrAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"get0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"}],\"name\":\"get1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltrAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_token0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_token1\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0xdc633c72b054fa5954f62c3bf555cef9d2ca2060b0e1b714a3727e407d4d67cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3f8f97cbf803c3d14924bbda0bc00c789191327997952eaf255df6eac8f83c8\",\"dweb:/ipfs/QmZ7ts2PazQvWyzadav2WU1ZiFYGTm1rcznh694DKZhBWr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 593,
								"contract": "contracts/Pool.sol:Pool",
								"label": "kLast",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 595,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve0",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 597,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve1",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 599,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price0",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 601,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5960:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nameLocations": [
															"5817:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8732:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nameLocations": [
															"8612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 515,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 524,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 581,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 581,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 581,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 581,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 581,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 581,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2660:1"
				},
				"id": 1
			},
			"contracts/Pool.sol": {
				"ast": {
					"absolutePath": "contracts/Pool.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						],
						"Math": [
							503
						],
						"Pool": [
							959
						]
					},
					"id": 960,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 960,
							"sourceUnit": 582,
							"src": "146:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 960,
							"sourceUnit": 504,
							"src": "169:53:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Pool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 959,
							"linearizedBaseContracts": [
								959
							],
							"name": "Pool",
							"nameLocation": "233:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 587,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "269:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "244:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 586,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 589,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "306:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "281:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "281:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba9c6845",
									"id": 591,
									"mutability": "immutable",
									"name": "ltrAddress",
									"nameLocation": "343:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "318:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7464fc3d",
									"id": 593,
									"mutability": "mutable",
									"name": "kLast",
									"nameLocation": "374:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "359:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 595,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "400:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "385:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 597,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "429:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "414:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 596,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "414:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0a986f1",
									"id": 599,
									"mutability": "mutable",
									"name": "price0",
									"nameLocation": "458:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "443:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6caf25ce",
									"id": 601,
									"mutability": "mutable",
									"name": "price1",
									"nameLocation": "485:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "470:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6",
									"id": 607,
									"name": "liquidityProvided",
									"nameLocation": "504:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "530:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "522:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "558:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "550:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:45:2"
									},
									"src": "498:69:2"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "640:93:2",
										"statements": [
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 616,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "650:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 617,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "659:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "650:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "650:16:2"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "676:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "685:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "676:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "676:16:2"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 624,
														"name": "ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "702:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 625,
														"name": "_ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "715:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "702:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "702:24:2"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_ltrAddress",
												"nameLocation": "627:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "619:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:55:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:0:2"
									},
									"scope": 959,
									"src": "573:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "765:203:2",
										"statements": [
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "775:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 639,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "819:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$959",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$959",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "811:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 637,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "811:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "811:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 634,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "793:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 633,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "786:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "786:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "801:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "786:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "786:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "775:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "775:50:2"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "835:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 651,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "879:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$959",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$959",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "871:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "871:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "871:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 646,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "853:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 645,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "846:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "846:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "861:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "846:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "846:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "835:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "835:50:2"
											},
											{
												"expression": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "price0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "895:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 657,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "904:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 658,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "915:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "904:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "895:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "895:28:2"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 662,
														"name": "price1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "933:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 663,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "942:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 664,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "953:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "942:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "933:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "933:28:2"
											}
										]
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "748:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:0:2"
									},
									"scope": 959,
									"src": "739:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "1047:638:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 681,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1090:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1094:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1090:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 685,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1110:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1102:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1102:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1102:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 678,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "1072:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 677,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1065:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1065:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1080:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1065:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1065:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 688,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1120:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1065:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1130:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1057:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "1057:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 698,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1197:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1201:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1197:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 702,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1217:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1209:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1209:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1209:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 695,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1179:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 694,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1172:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1172:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1187:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1172:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1172:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 705,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1227:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1172:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1237:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1164:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1164:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 714,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1299:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1303:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1299:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 718,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1319:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1311:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1311:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1311:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1326:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 711,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1278:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 710,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1271:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1271:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1286:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1271:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1271:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "1271:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1373:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1377:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1373:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 731,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1393:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1385:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1385:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1385:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1400:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 724,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1352:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 723,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1345:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1345:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1360:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1345:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1345:64:2"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1419:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 743,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1460:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$959",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$959",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1452:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1452:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1452:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 738,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "1434:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 737,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1427:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1427:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1442:9:2",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1427:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1427:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 752,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1502:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$959",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$959",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1494:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 750,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1494:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1494:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 747,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "1476:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 746,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1469:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1469:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1484:9:2",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1469:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1469:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1427:81:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1419:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1419:89:2"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "1526:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "1518:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1518:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1545:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 760,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1535:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$503_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1540:4:2",
														"memberName": "sqrt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "1535:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1518:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1589:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1593:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1589:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1601:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 766,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1568:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 765,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1561:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1561:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1580:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1561:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1561:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "1561:47:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 774,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1618:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1618:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "1618:8:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 778,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1659:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1663:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1659:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1671:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1641:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "EmitStatement",
												"src": "1636:42:2"
											}
										]
									},
									"functionSelector": "7a16af7f",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "985:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "1010:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1002:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:36:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:0:2"
									},
									"scope": 959,
									"src": "976:709:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "1730:411:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 794,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1773:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1777:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1773:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 798,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1793:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1785:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 796,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1785:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1785:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 791,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1755:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 790,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1748:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1748:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1763:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1748:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1748:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 801,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "1803:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1748:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1740:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1740:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1875:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1879:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1875:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 814,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1895:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1887:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1887:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1887:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "1902:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 807,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1854:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 806,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1847:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1847:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1862:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1847:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1847:64:2"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "1929:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "1921:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1941:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "1953:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 823,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "1961:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1953:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 825,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1941:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1921:49:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1984:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 829,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1996:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1984:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "2045:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 839,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2083:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2087:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2083:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 841,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2095:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 836,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2066:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 835,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2059:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2059:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2074:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2059:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2059:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "2059:46:2"
														}
													]
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "1980:136:2",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "2007:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 831,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2021:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2021:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 833,
															"nodeType": "ExpressionStatement",
															"src": "2021:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 846,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2126:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "2126:8:2"
											}
										]
									},
									"functionSelector": "2af4ec36",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get0",
									"nameLocation": "1700:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1713:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1705:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:18:2"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:0:2"
									},
									"scope": 959,
									"src": "1691:450:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "2204:462:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 862,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2247:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2251:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2247:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 866,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2267:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$959",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2259:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 864,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2259:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2259:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 859,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2229:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 858,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2222:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2222:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2237:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "2222:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2222:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 869,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "2277:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2222:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2287:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2214:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "2214:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 878,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2349:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2353:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2349:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 882,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2369:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$959",
																		"typeString": "contract Pool"
																	}
																],
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2361:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 880,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2361:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2361:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "2376:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 875,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2328:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 874,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2321:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2336:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2321:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2321:64:2"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "2403:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 919,
														"src": "2395:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2395:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2415:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "2427:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 891,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2435:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2427:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 893,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2426:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2415:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2395:49:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2483:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 897,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "2495:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2483:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 912,
													"nodeType": "Block",
													"src": "2544:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 907,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2582:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2586:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2582:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 909,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "2594:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 904,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "2565:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 903,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2558:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2558:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2573:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2558:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2558:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 911,
															"nodeType": "ExpressionStatement",
															"src": "2558:46:2"
														}
													]
												},
												"id": 913,
												"nodeType": "IfStatement",
												"src": "2479:136:2",
												"trueBody": {
													"id": 902,
													"nodeType": "Block",
													"src": "2506:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 899,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2520:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2520:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 901,
															"nodeType": "ExpressionStatement",
															"src": "2520:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 914,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2624:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "2624:8:2"
											},
											{
												"expression": {
													"id": 917,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 888,
													"src": "2649:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 856,
												"id": 918,
												"nodeType": "Return",
												"src": "2642:16:2"
											}
										]
									},
									"functionSelector": "9c117f0f",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get1",
									"nameLocation": "2156:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2169:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "2161:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:18:2"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "2195:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:2"
									},
									"scope": 959,
									"src": "2147:519:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "2727:203:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 927,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "2741:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2751:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2741:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 930,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "2756:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2767:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2756:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2741:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "2818:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2828:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2818:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "2833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2844:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2833:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2818:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 954,
														"nodeType": "Block",
														"src": "2891:33:2",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 951,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2905:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2905:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 953,
																"nodeType": "ExpressionStatement",
																"src": "2905:8:2"
															}
														]
													},
													"id": 955,
													"nodeType": "IfStatement",
													"src": "2814:110:2",
													"trueBody": {
														"id": 950,
														"nodeType": "Block",
														"src": "2847:38:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 947,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 924,
																			"src": "2866:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 946,
																		"name": "get0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "2861:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2861:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 949,
																"nodeType": "ExpressionStatement",
																"src": "2861:13:2"
															}
														]
													}
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "2737:187:2",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "2770:38:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "2789:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 934,
																	"name": "get1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "2784:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) returns (uint256)"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2784:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 937,
															"nodeType": "ExpressionStatement",
															"src": "2784:13:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d96073cf",
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2681:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "2694:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2686:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "2711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:34:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:0:2"
									},
									"scope": 959,
									"src": "2672:258:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 960,
							"src": "224:2708:2",
							"usedErrors": []
						}
					],
					"src": "121:3341:2"
				},
				"id": 2
			}
		}
	}
}