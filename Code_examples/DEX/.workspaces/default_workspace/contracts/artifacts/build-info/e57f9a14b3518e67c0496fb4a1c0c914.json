{
	"id": "e57f9a14b3518e67c0496fb4a1c0c914",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityPool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\ncontract LiquidityPool {\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    IERC20 public token;\n\n\n    function provideLiquidity(uint256 _amount) external payable {\n\n    }\n}\n\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityPool.sol\":241:455  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityPool.sol\":241:455  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xeb521a4c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":385:453  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/LiquidityPool.sol\":358:377  IERC20 public token */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":385:453  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_7:\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":358:377  IERC20 public token */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_15:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_17\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":228:347   */\n    tag_20:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_23\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_15\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:644   */\n    tag_24:\n        /* \"#utility.yul\":587:637   */\n      tag_26\n        /* \"#utility.yul\":631:636   */\n      dup2\n        /* \"#utility.yul\":587:637   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":582:585   */\n      dup3\n        /* \"#utility.yul\":575:638   */\n      mstore\n        /* \"#utility.yul\":487:644   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:898   */\n    tag_12:\n        /* \"#utility.yul\":756:760   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x20\n        /* \"#utility.yul\":783:792   */\n      dup3\n        /* \"#utility.yul\":779:797   */\n      add\n        /* \"#utility.yul\":771:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:891   */\n      tag_29\n        /* \"#utility.yul\":888:889   */\n      0x00\n        /* \"#utility.yul\":877:886   */\n      dup4\n        /* \"#utility.yul\":873:890   */\n      add\n        /* \"#utility.yul\":864:870   */\n      dup5\n        /* \"#utility.yul\":807:891   */\n      tag_24\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":650:898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":985:1111   */\n    tag_32:\n        /* \"#utility.yul\":1022:1029   */\n      0x00\n        /* \"#utility.yul\":1062:1104   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1055:1060   */\n      dup3\n        /* \"#utility.yul\":1051:1105   */\n      and\n        /* \"#utility.yul\":1040:1105   */\n      swap1\n      pop\n        /* \"#utility.yul\":985:1111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1194   */\n    tag_34:\n        /* \"#utility.yul\":1154:1161   */\n      0x00\n        /* \"#utility.yul\":1183:1188   */\n      dup2\n        /* \"#utility.yul\":1172:1188   */\n      swap1\n      pop\n        /* \"#utility.yul\":1117:1194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1200:1339   */\n    tag_27:\n        /* \"#utility.yul\":1263:1272   */\n      0x00\n        /* \"#utility.yul\":1296:1333   */\n      tag_37\n        /* \"#utility.yul\":1327:1332   */\n      dup3\n        /* \"#utility.yul\":1296:1333   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1283:1333   */\n      swap1\n      pop\n        /* \"#utility.yul\":1200:1339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1345:1471   */\n    tag_38:\n        /* \"#utility.yul\":1395:1404   */\n      0x00\n        /* \"#utility.yul\":1428:1465   */\n      tag_40\n        /* \"#utility.yul\":1459:1464   */\n      dup3\n        /* \"#utility.yul\":1428:1465   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1415:1465   */\n      swap1\n      pop\n        /* \"#utility.yul\":1345:1471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1477:1590   */\n    tag_41:\n        /* \"#utility.yul\":1527:1536   */\n      0x00\n        /* \"#utility.yul\":1560:1584   */\n      tag_43\n        /* \"#utility.yul\":1578:1583   */\n      dup3\n        /* \"#utility.yul\":1560:1584   */\n      tag_32\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1547:1584   */\n      swap1\n      pop\n        /* \"#utility.yul\":1477:1590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1719:1836   */\n    tag_22:\n        /* \"#utility.yul\":1828:1829   */\n      0x00\n        /* \"#utility.yul\":1825:1826   */\n      dup1\n        /* \"#utility.yul\":1818:1830   */\n      revert\n        /* \"#utility.yul\":1842:1964   */\n    tag_18:\n        /* \"#utility.yul\":1915:1939   */\n      tag_48\n        /* \"#utility.yul\":1933:1938   */\n      dup2\n        /* \"#utility.yul\":1915:1939   */\n      tag_34\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1908:1913   */\n      dup2\n        /* \"#utility.yul\":1905:1940   */\n      eq\n        /* \"#utility.yul\":1895:1958   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1954:1955   */\n      0x00\n        /* \"#utility.yul\":1951:1952   */\n      dup1\n        /* \"#utility.yul\":1944:1956   */\n      revert\n        /* \"#utility.yul\":1895:1958   */\n    tag_49:\n        /* \"#utility.yul\":1842:1964   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203cfa5d9131b05727143ae61f66296312116ce0f2a951bdcbefede28df92d304b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101ba806100206000396000f3fe6080604052600436106100295760003560e01c8063eb521a4c1461002e578063fc0c546a1461004a575b600080fd5b610048600480360381019061004391906100b1565b610075565b005b34801561005657600080fd5b5061005f610078565b60405161006c91906100ed565b60405180910390f35b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506100ab8161016d565b92915050565b6000602082840312156100c7576100c6610168565b5b60006100d58482850161009c565b91505092915050565b6100e781610132565b82525050565b600060208201905061010260008301846100de565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061013d82610144565b9050919050565b600061014f82610156565b9050919050565b600061016182610108565b9050919050565b600080fd5b61017681610128565b811461018157600080fd5b5056fea26469706673582212203cfa5d9131b05727143ae61f66296312116ce0f2a951bdcbefede28df92d304b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAB DUP2 PUSH2 0x16D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7 JUMPI PUSH2 0xC6 PUSH2 0x168 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5 DUP5 DUP3 DUP6 ADD PUSH2 0x9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7 DUP2 PUSH2 0x132 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D DUP3 PUSH2 0x144 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F DUP3 PUSH2 0x156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161 DUP3 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176 DUP2 PUSH2 0x128 JUMP JUMPDEST DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY STATICCALL 0x5D SWAP2 BALANCE 0xB0 JUMPI 0x27 EQ GASPRICE 0xE6 0x1F PUSH7 0x296312116CE0F2 0xA9 MLOAD 0xBD 0xCB 0xEF 0xED 0xE2 DUP14 0xF9 0x2D ADDRESS 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:214:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@provideLiquidity_89": {
									"entryPoint": 117,
									"id": 89,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_83": {
									"entryPoint": 120,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1967:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "565:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "582:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "631:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "587:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "575:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "553:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "560:3:2",
														"type": ""
													}
												],
												"src": "487:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "761:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "771:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "783:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "779:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "779:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "771:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "864:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "877:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "888:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "873:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "873:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "807:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "807:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "733:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "756:4:2",
														"type": ""
													}
												],
												"src": "650:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "970:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "964:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "954:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "937:6:2",
														"type": ""
													}
												],
												"src": "904:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1030:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1040:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1055:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1062:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1051:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1040:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1012:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1022:7:2",
														"type": ""
													}
												],
												"src": "985:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1162:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1172:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1183:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1172:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1144:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1154:7:2",
														"type": ""
													}
												],
												"src": "1117:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1283:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1327:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1296:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1283:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1253:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1263:9:2",
														"type": ""
													}
												],
												"src": "1200:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1405:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1415:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1459:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1428:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1415:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1385:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1395:9:2",
														"type": ""
													}
												],
												"src": "1345:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1537:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1547:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1578:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1560:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1547:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1517:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1527:9:2",
														"type": ""
													}
												],
												"src": "1477:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1685:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1596:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1818:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1719:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1942:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1951:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1954:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1944:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1944:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1944:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1908:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1933:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1915:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1915:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1905:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:43:2"
															},
															"nodeType": "YulIf",
															"src": "1895:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1878:5:2",
														"type": ""
													}
												],
												"src": "1842:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c8063eb521a4c1461002e578063fc0c546a1461004a575b600080fd5b610048600480360381019061004391906100b1565b610075565b005b34801561005657600080fd5b5061005f610078565b60405161006c91906100ed565b60405180910390f35b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506100ab8161016d565b92915050565b6000602082840312156100c7576100c6610168565b5b60006100d58482850161009c565b91505092915050565b6100e781610132565b82525050565b600060208201905061010260008301846100de565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061013d82610144565b9050919050565b600061014f82610156565b9050919050565b600061016182610108565b9050919050565b600080fd5b61017681610128565b811461018157600080fd5b5056fea26469706673582212203cfa5d9131b05727143ae61f66296312116ce0f2a951bdcbefede28df92d304b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAB DUP2 PUSH2 0x16D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7 JUMPI PUSH2 0xC6 PUSH2 0x168 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD5 DUP5 DUP3 DUP6 ADD PUSH2 0x9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7 DUP2 PUSH2 0x132 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D DUP3 PUSH2 0x144 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F DUP3 PUSH2 0x156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161 DUP3 PUSH2 0x108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176 DUP2 PUSH2 0x128 JUMP JUMPDEST DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY STATICCALL 0x5D SWAP2 BALANCE 0xB0 JUMPI 0x27 EQ GASPRICE 0xE6 0x1F PUSH7 0x296312116CE0F2 0xA9 MLOAD 0xBD 0xCB 0xEF 0xED 0xE2 DUP14 0xF9 0x2D ADDRESS 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:214:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;385:68;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;358:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:68;;:::o;358:19::-;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:157::-;587:50;631:5;587:50;:::i;:::-;582:3;575:63;487:157;;:::o;650:248::-;756:4;794:2;783:9;779:18;771:26;;807:84;888:1;877:9;873:17;864:6;807:84;:::i;:::-;650:248;;;;:::o;985:126::-;1022:7;1062:42;1055:5;1051:54;1040:65;;985:126;;;:::o;1117:77::-;1154:7;1183:5;1172:16;;1117:77;;;:::o;1200:139::-;1263:9;1296:37;1327:5;1296:37;:::i;:::-;1283:50;;1200:139;;;:::o;1345:126::-;1395:9;1428:37;1459:5;1428:37;:::i;:::-;1415:50;;1345:126;;;:::o;1477:113::-;1527:9;1560:24;1578:5;1560:24;:::i;:::-;1547:37;;1477:113;;;:::o;1719:117::-;1828:1;1825;1818:12;1842:122;1915:24;1933:5;1915:24;:::i;:::-;1908:5;1905:35;1895:63;;1954:1;1951;1944:12;1895:63;1842:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "88400",
								"executionCost": "135",
								"totalCost": "88535"
							},
							"external": {
								"provideLiquidity(uint256)": "360",
								"token()": "2597"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 241,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 455,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cfa5d9131b05727143ae61f66296312116ce0f2a951bdcbefede28df92d304b64736f6c63430008070033",
									".code": [
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "EB521A4C"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 385,
											"end": 453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 644,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 587,
											"end": 637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 637,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 587,
											"end": 637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 582,
											"end": 585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 575,
											"end": 638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 644,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 650,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 756,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 792,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 779,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 771,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 771,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 888,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 864,
											"end": 870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 807,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 807,
											"end": 891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 891,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 807,
											"end": 891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 650,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 898,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 985,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 985,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1111,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1117,
											"end": 1194,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1117,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1200,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1200,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1327,
											"end": 1332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1296,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1296,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1339,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1345,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1345,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1471,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1477,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1477,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1578,
											"end": 1583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1590,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1719,
											"end": 1836,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1719,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1964,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1842,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1915,
											"end": 1939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 1939,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1915,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1940,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1895,
											"end": 1958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1895,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1964,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"provideLiquidity(uint256)": "eb521a4c",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0x18399e79c1319d77d23a80356e1fc74a4b09eaeaa8161dc6d38bb5b677a106f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fc31befb9ec55c4de858e7eba0b443c9e50d708dc37aa08b90e058632a8755\",\"dweb:/ipfs/QmSuZ3KadCU2UENy71wgFrurFSCRfoiEB98adJMRME6M95\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2660:0"
				},
				"id": 0
			},
			"contracts/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LiquidityPool": [
							90
						]
					},
					"id": 91,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "192:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 91,
							"sourceUnit": 78,
							"src": "217:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "LiquidityPool",
							"nameLocation": "250:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 83,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "372:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "358:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "358:6:1"
										},
										"referencedDeclaration": 77,
										"src": "358:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "445:8:1",
										"statements": []
									},
									"functionSelector": "eb521a4c",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "394:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "419:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "411:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:17:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:0:1"
									},
									"scope": 90,
									"src": "385:68:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 91,
							"src": "241:214:1",
							"usedErrors": []
						}
					],
					"src": "192:265:1"
				},
				"id": 1
			}
		}
	}
}