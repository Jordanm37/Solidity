{
	"id": "25bfd9d4df462d000ca31e7cf2083cb2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityPool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//   *** Improvements ***\n\n/*\n\n1. ERC20 -> ERC20 pair\n2. Single swap function\n3. We would want to have a way of tracking the price.\n4. We could determine the initial prices based on the initial liquidity provided.\n5. LP shares will be pegged to the the constant product Function.\n\n\n*/\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ncontract LiquidityPool {\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    address public reserveToken;\n    address constant ltrAddress = 0x39DB207Dff3411F4fab0483D419306873Cbc13d9;\n    uint256 constant MINIMUMETH = 10000000000000000;\n    uint256 public kLast;\n\n    constructor(address _tokenAddress){\n        reserveToken = _tokenAddress;\n    }\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    function provideLiquidity(uint256 _amount) external payable {\n        require(_amount >= MINIMUMETH, \"Liquidity provided should be greater than 1 ETH\");\n        // IERC20(ltrAddress).approve(address(this), 1000000000000000000000);\n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount);\n        kLast = _amount * address(this).balance;\n        IERC20(ltrAddress).transfer(msg.sender, Math.sqrt(kLast));\n        emit liquidityProvided(msg.sender, _amount);\n    }\n\n    function reedemShares(uint256 _sharesAmount) public {\n        require(_sharesAmount > 0, \"Invalid amount of shares\");\n        require(IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount, \"Please approve the contract to deduct ltr tokens from your wallet\");\n\n        IERC20(ltrAddress).transferFrom(msg.sender, address(this), _sharesAmount);\n        IERC20(reserveToken).transfer(msg.sender, _sharesAmount);\n        (bool success, ) = payable(msg.sender).call{value: _sharesAmount}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    function getEth(uint256 _DAIAmount) public {\n        require(IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount, \"Contract not approved\");\n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _DAIAmount);\n        uint256 totalTokens = IERC20(reserveToken).balanceOf(address(this));\n        uint256 ethOut = address(this).balance - kLast/totalTokens;\n        (bool success, ) = payable(msg.sender).call{value: ethOut}(\"\");\n        require(success, \"Transfer Failed\");\n    }\n\n    function getDAI(uint256 _ethAmount) public payable {\n        require(msg.value == _ethAmount, \"Invalid amount\");\n        require(msg.value > 0, \"The eth amount supplied must be greater than 0\");\n        uint256 totalDAISupply = IERC20(reserveToken).balanceOf(address(this));\n        uint256 totalEthSupply = address(this).balance;\n        uint256 DAIOut = totalDAISupply - kLast/totalEthSupply;\n        IERC20(reserveToken).transfer(msg.sender, DAIOut);\n    }\n\n    function transferTokens(address to, uint256 _amount) external {\n        IERC20(ltrAddress).transfer(to, _amount);\n    }\n\n    // function swap(uint256 daiAmount) public payable{\n    //     // When called, we will expect to receieve some tokens\n    //     // We should be able to determine the price of the receieved in relation to the other asset in pool\n    //     // Based on that price, we should determine the amount of tokens to be sent out for the received assets\n    //     if (msg.value > 0) {\n    //     uint256 tokenValue = kLast / msg.value;\n    //     IERC20(reserveToken).transfer(msg.sender, tokenValue);\n    //     } \n    //     else {\n    //         uint256 ethValue = kLast / daiAmount;\n    //         (bool success, ) = payable(msg.sender).call{value: ethValue}(\"\");\n    //         require(success, \"Transfer failed\");\n    //     }\n    // }\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/LiquidityPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ethAmount",
									"type": "uint256"
								}
							],
							"name": "getDAI",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_DAIAmount",
									"type": "uint256"
								}
							],
							"name": "getEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sharesAmount",
									"type": "uint256"
								}
							],
							"name": "reedemShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityPool.sol\":581:3941  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LiquidityPool.sol\":889:968  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LiquidityPool.sol\":948:961  _tokenAddress */\n  dup1\n    /* \"contracts/LiquidityPool.sol\":933:945  reserveToken */\n  0x00\n  dup1\n    /* \"contracts/LiquidityPool.sol\":933:961  reserveToken = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LiquidityPool.sol\":889:968  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/LiquidityPool.sol\":581:3941  contract LiquidityPool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LiquidityPool.sol\":581:3941  contract LiquidityPool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityPool.sol\":581:3941  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbec3fa17\n      gt\n      tag_9\n      jumpi\n      dup1\n      0xbec3fa17\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xeb521a4c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf4325d67\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff9b3758\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x1aa5c70e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8e3073a6\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":2617:3076  function getDAI(uint256 _ethAmount) public payable {... */\n    tag_2:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/LiquidityPool.sol\":862:882  uint256 public kLast */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":2102:2611  function getEth(uint256 _DAIAmount) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/LiquidityPool.sol\":3082:3201  function transferTokens(address to, uint256 _amount) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/LiquidityPool.sol\":1049:1533  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/LiquidityPool.sol\":698:725  address public reserveToken */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":1539:2096  function reedemShares(uint256 _sharesAmount) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/LiquidityPool.sol\":2617:3076  function getDAI(uint256 _ethAmount) public payable {... */\n    tag_13:\n        /* \"contracts/LiquidityPool.sol\":2699:2709  _ethAmount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2686:2695  msg.value */\n      callvalue\n        /* \"contracts/LiquidityPool.sol\":2686:2709  msg.value == _ethAmount */\n      eq\n        /* \"contracts/LiquidityPool.sol\":2678:2728  require(msg.value == _ethAmount, \"Invalid amount\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/LiquidityPool.sol\":2758:2759  0 */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2746:2755  msg.value */\n      callvalue\n        /* \"contracts/LiquidityPool.sol\":2746:2759  msg.value > 0 */\n      gt\n        /* \"contracts/LiquidityPool.sol\":2738:2810  require(msg.value > 0, \"The eth amount supplied must be greater than 0\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"contracts/LiquidityPool.sol\":2820:2842  uint256 totalDAISupply */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2852:2864  reserveToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2845:2875  IERC20(reserveToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LiquidityPool.sol\":2884:2888  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2845:2890  IERC20(reserveToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"contracts/LiquidityPool.sol\":2820:2890  uint256 totalDAISupply = IERC20(reserveToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2900:2922  uint256 totalEthSupply */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2925:2946  address(this).balance */\n      selfbalance\n        /* \"contracts/LiquidityPool.sol\":2900:2946  uint256 totalEthSupply = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2956:2970  uint256 DAIOut */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2996:3010  totalEthSupply */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":2990:2995  kLast */\n      sload(0x01)\n        /* \"contracts/LiquidityPool.sol\":2990:3010  kLast/totalEthSupply */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/LiquidityPool.sol\":2973:2987  totalDAISupply */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":2973:3010  totalDAISupply - kLast/totalEthSupply */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/LiquidityPool.sol\":2956:3010  uint256 DAIOut = totalDAISupply - kLast/totalEthSupply */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":3027:3039  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":3020:3049  IERC20(reserveToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":3050:3060  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":3062:3068  DAIOut */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":3020:3069  IERC20(reserveToken).transfer(msg.sender, DAIOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2668:3076  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityPool.sol\":2617:3076  function getDAI(uint256 _ethAmount) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":862:882  uint256 public kLast */\n    tag_16:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":2102:2611  function getEth(uint256 _DAIAmount) public {... */\n    tag_22:\n        /* \"contracts/LiquidityPool.sol\":2224:2234  _DAIAmount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2170:2182  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2163:2193  IERC20(reserveToken).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/LiquidityPool.sol\":2194:2204  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":2214:2218  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2163:2220  IERC20(reserveToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_67:\n        /* \"contracts/LiquidityPool.sol\":2163:2234  IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount */\n      lt\n      iszero\n        /* \"contracts/LiquidityPool.sol\":2155:2260  require(IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount, \"Contract not approved\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/LiquidityPool.sol\":2277:2289  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2270:2303  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":2304:2314  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":2324:2328  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2331:2341  _DAIAmount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":2270:2342  IERC20(reserveToken).transferFrom(msg.sender, address(this), _DAIAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_75:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2352:2371  uint256 totalTokens */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2381:2393  reserveToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2374:2404  IERC20(reserveToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LiquidityPool.sol\":2413:2417  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2374:2419  IERC20(reserveToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_79:\n        /* \"contracts/LiquidityPool.sol\":2352:2419  uint256 totalTokens = IERC20(reserveToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2429:2443  uint256 ethOut */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2476:2487  totalTokens */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":2470:2475  kLast */\n      sload(0x01)\n        /* \"contracts/LiquidityPool.sol\":2470:2487  kLast/totalTokens */\n      tag_80\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_80:\n        /* \"contracts/LiquidityPool.sol\":2446:2467  address(this).balance */\n      selfbalance\n        /* \"contracts/LiquidityPool.sol\":2446:2487  address(this).balance - kLast/totalTokens */\n      tag_81\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_81:\n        /* \"contracts/LiquidityPool.sol\":2429:2487  uint256 ethOut = address(this).balance - kLast/totalTokens */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2498:2510  bool success */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2524:2534  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":2516:2540  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2548:2554  ethOut */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":2516:2559  payable(msg.sender).call{value: ethOut}(\"\") */\n      mload(0x40)\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_86\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_85)\n    tag_86:\n      0x60\n      swap2\n      pop\n    tag_85:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2497:2559  (bool success, ) = payable(msg.sender).call{value: ethOut}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2577:2584  success */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2569:2604  require(success, \"Transfer Failed\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/LiquidityPool.sol\":2145:2611  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityPool.sol\":2102:2611  function getEth(uint256 _DAIAmount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":3082:3201  function transferTokens(address to, uint256 _amount) external {... */\n    tag_27:\n        /* \"contracts/LiquidityPool.sol\":761:803  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":3154:3181  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":3182:3184  to */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":3186:3193  _amount */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":3154:3194  IERC20(ltrAddress).transfer(to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_94:\n      pop\n        /* \"contracts/LiquidityPool.sol\":3082:3201  function transferTokens(address to, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":1049:1533  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_30:\n        /* \"contracts/LiquidityPool.sol\":839:856  10000000000000000 */\n      0x2386f26fc10000\n        /* \"contracts/LiquidityPool.sol\":1127:1134  _amount */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":1127:1148  _amount >= MINIMUMETH */\n      lt\n      iszero\n        /* \"contracts/LiquidityPool.sol\":1119:1200  require(_amount >= MINIMUMETH, \"Liquidity provided should be greater than 1 ETH\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/LiquidityPool.sol\":1295:1307  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":1288:1321  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":1322:1332  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1342:1346  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":1349:1356  _amount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":1288:1357  IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_102:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1385:1406  address(this).balance */\n      selfbalance\n        /* \"contracts/LiquidityPool.sol\":1375:1382  _amount */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":1375:1406  _amount * address(this).balance */\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/LiquidityPool.sol\":1367:1372  kLast */\n      0x01\n        /* \"contracts/LiquidityPool.sol\":1367:1406  kLast = _amount * address(this).balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityPool.sol\":761:803  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":1416:1443  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":1444:1454  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1456:1472  Math.sqrt(kLast) */\n      tag_105\n        /* \"contracts/LiquidityPool.sol\":1466:1471  kLast */\n      sload(0x01)\n        /* \"contracts/LiquidityPool.sol\":1456:1465  Math.sqrt */\n      tag_106\n        /* \"contracts/LiquidityPool.sol\":1456:1472  Math.sqrt(kLast) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/LiquidityPool.sol\":1416:1473  IERC20(ltrAddress).transfer(msg.sender, Math.sqrt(kLast)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_110:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1488:1526  liquidityProvided(msg.sender, _amount) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/LiquidityPool.sol\":1506:1516  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1518:1525  _amount */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":1488:1526  liquidityProvided(msg.sender, _amount) */\n      mload(0x40)\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityPool.sol\":1049:1533  function provideLiquidity(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":698:725  address public reserveToken */\n    tag_33:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":1539:2096  function reedemShares(uint256 _sharesAmount) public {... */\n    tag_39:\n        /* \"contracts/LiquidityPool.sol\":1625:1626  0 */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":1609:1622  _sharesAmount */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":1609:1626  _sharesAmount > 0 */\n      gt\n        /* \"contracts/LiquidityPool.sol\":1601:1655  require(_sharesAmount > 0, \"Invalid amount of shares\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/LiquidityPool.sol\":1732:1745  _sharesAmount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":761:803  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":1673:1701  IERC20(ltrAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/LiquidityPool.sol\":1702:1712  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1722:1726  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":1673:1728  IERC20(ltrAddress).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_116:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_119:\n        /* \"contracts/LiquidityPool.sol\":1673:1745  IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount */\n      lt\n      iszero\n        /* \"contracts/LiquidityPool.sol\":1665:1815  require(IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount, \"Please approve the contract to deduct ltr tokens from your wallet\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/LiquidityPool.sol\":761:803  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":1826:1857  IERC20(ltrAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":1858:1868  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1878:1882  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":1885:1898  _sharesAmount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":1826:1899  IERC20(ltrAddress).transferFrom(msg.sender, address(this), _sharesAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_126:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1916:1928  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":1909:1938  IERC20(reserveToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":1939:1949  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1951:1964  _sharesAmount */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":1909:1965  IERC20(reserveToken).transfer(msg.sender, _sharesAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_130:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1976:1988  bool success */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2002:2012  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1994:2018  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2026:2039  _sharesAmount */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":1994:2044  payable(msg.sender).call{value: _sharesAmount}(\"\") */\n      mload(0x40)\n      tag_131\n      swap1\n      tag_83\n      jump\t// in\n    tag_131:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_134\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_133)\n    tag_134:\n      0x60\n      swap2\n      pop\n    tag_133:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1975:2044  (bool success, ) = payable(msg.sender).call{value: _sharesAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2062:2069  success */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2054:2089  require(success, \"Transfer failed\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/LiquidityPool.sol\":1591:2096  {... */\n      pop\n        /* \"contracts/LiquidityPool.sol\":1539:2096  function reedemShares(uint256 _sharesAmount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6336  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6357:6358  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6353  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6358  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6374:6382  return 0 */\n      swap1\n      pop\n      jump(tag_138)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7072  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7075:7076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7076  uint256 result = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7095  uint256 x */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7098:7099  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7099  uint256 x = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7124:7125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7118:7121  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7114  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7121  x >> 128 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7125  x >> 128 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7147:7150  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7141:7150  x >>= 128 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7175:7177  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7164:7177  result <<= 64 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7211:7212  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7206:7208  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7202  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7208  x >> 64 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7212  x >> 64 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7234:7236  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7228:7236  x >>= 64 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7261:7263  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7250:7263  result <<= 32 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7297:7298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7292:7294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7288  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7294  x >> 32 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7298  x >> 32 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7320:7322  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7314:7322  x >>= 32 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7347:7349  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7336:7349  result <<= 16 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7383:7384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7378:7380  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7374  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7380  x >> 16 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7384  x >> 16 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7406:7408  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7400:7408  x >>= 16 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7433:7434  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7422:7434  result <<= 8 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7467:7468  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7463:7464  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7459  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7464  x >> 8 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7468  x >> 8 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7490:7491  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7484:7491  x >>= 8 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7516:7517  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7505:7517  result <<= 4 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7550:7551  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7546:7547  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7542  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7547  x >> 4 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7551  x >> 4 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7573:7574  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7567:7574  x >>= 4 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7599:7600  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7588:7600  result <<= 2 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7633:7634  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7629:7630  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7625  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7630  x >> 2 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7634  x >> 2 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7661:7662  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7650:7662  result <<= 1 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8131:8132  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8120:8126  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8117  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8126  a / result */\n      dup2\n      tag_147\n      jumpi\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n    tag_147:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8113  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8126  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8106:8132  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8097:8132  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8180:8181  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8169:8175  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8166  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8175  a / result */\n      dup2\n      tag_150\n      jumpi\n      tag_151\n      tag_149\n      jump\t// in\n    tag_151:\n    tag_150:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8162  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8175  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8155:8181  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8146:8181  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8229:8230  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8218:8224  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8215  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8224  a / result */\n      dup2\n      tag_152\n      jumpi\n      tag_153\n      tag_149\n      jump\t// in\n    tag_153:\n    tag_152:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8211  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8224  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8204:8230  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8195:8230  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8278:8279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8267:8273  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8264  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8273  a / result */\n      dup2\n      tag_154\n      jumpi\n      tag_155\n      tag_149\n      jump\t// in\n    tag_155:\n    tag_154:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8260  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8273  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8253:8279  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8244:8279  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8327:8328  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8316:8322  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8313  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8322  a / result */\n      dup2\n      tag_156\n      jumpi\n      tag_157\n      tag_149\n      jump\t// in\n    tag_157:\n    tag_156:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8309  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8322  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8302:8328  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8293:8328  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8376:8377  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8365:8371  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8362  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8371  a / result */\n      dup2\n      tag_158\n      jumpi\n      tag_159\n      tag_149\n      jump\t// in\n    tag_159:\n    tag_158:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8358  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8371  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8351:8377  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8342:8377  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8425:8426  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8414:8420  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8411  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8420  a / result */\n      dup2\n      tag_160\n      jumpi\n      tag_161\n      tag_149\n      jump\t// in\n    tag_161:\n    tag_160:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8407  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8420  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8400:8426  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8391:8426  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      tag_162\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8451:8457  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8463:8469  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8460  a */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8469  a / result */\n      dup2\n      tag_163\n      jumpi\n      tag_164\n      tag_149\n      jump\t// in\n    tag_164:\n    tag_163:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8450  min */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8440:8470  return min(result, a / result) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_138:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":647:654  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":677:678  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:674  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:678  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":685:686  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      jump(tag_168)\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":681:682  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":666:686  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_170:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_172:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_173:\n        /* \"#utility.yul\":490:514   */\n      tag_212\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_172\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_213:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_174:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_215\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_173\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_12:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_218\n      tag_170\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":766:885   */\n    tag_217:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_219\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_174\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_175:\n        /* \"#utility.yul\":1112:1136   */\n      tag_221\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_172\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_18:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_223\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_175\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_176:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_177:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_226\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_176\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_178:\n        /* \"#utility.yul\":1684:1708   */\n      tag_228\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_177\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_229:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_179:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_231\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_178\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_26:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      dup1\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_234\n      tag_170\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1977:2096   */\n    tag_233:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_235\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_179\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_236\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_174\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_180:\n        /* \"#utility.yul\":2451:2475   */\n      tag_238\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_177\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_35:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_240\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_180\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2885   */\n    tag_181:\n        /* \"#utility.yul\":2800:2811   */\n      0x00\n        /* \"#utility.yul\":2834:2840   */\n      dup3\n        /* \"#utility.yul\":2829:2832   */\n      dup3\n        /* \"#utility.yul\":2822:2841   */\n      mstore\n        /* \"#utility.yul\":2874:2878   */\n      0x20\n        /* \"#utility.yul\":2869:2872   */\n      dup3\n        /* \"#utility.yul\":2865:2879   */\n      add\n        /* \"#utility.yul\":2850:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2716:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3055   */\n    tag_182:\n        /* \"#utility.yul\":3031:3047   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":3027:3028   */\n      0x00\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3015:3029   */\n      add\n        /* \"#utility.yul\":3008:3048   */\n      mstore\n        /* \"#utility.yul\":2891:3055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3061:3427   */\n    tag_183:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3224:3291   */\n      tag_244\n        /* \"#utility.yul\":3288:3290   */\n      0x0e\n        /* \"#utility.yul\":3283:3286   */\n      dup4\n        /* \"#utility.yul\":3224:3291   */\n      tag_181\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3217:3291   */\n      swap2\n      pop\n        /* \"#utility.yul\":3300:3393   */\n      tag_245\n        /* \"#utility.yul\":3389:3392   */\n      dup3\n        /* \"#utility.yul\":3300:3393   */\n      tag_182\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3418:3420   */\n      0x20\n        /* \"#utility.yul\":3413:3416   */\n      dup3\n        /* \"#utility.yul\":3409:3421   */\n      add\n        /* \"#utility.yul\":3402:3421   */\n      swap1\n      pop\n        /* \"#utility.yul\":3061:3427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3433:3852   */\n    tag_43:\n        /* \"#utility.yul\":3599:3603   */\n      0x00\n        /* \"#utility.yul\":3637:3639   */\n      0x20\n        /* \"#utility.yul\":3626:3635   */\n      dup3\n        /* \"#utility.yul\":3622:3640   */\n      add\n        /* \"#utility.yul\":3614:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3686:3695   */\n      dup2\n        /* \"#utility.yul\":3680:3684   */\n      dup2\n        /* \"#utility.yul\":3676:3696   */\n      sub\n        /* \"#utility.yul\":3672:3673   */\n      0x00\n        /* \"#utility.yul\":3661:3670   */\n      dup4\n        /* \"#utility.yul\":3657:3674   */\n      add\n        /* \"#utility.yul\":3650:3697   */\n      mstore\n        /* \"#utility.yul\":3714:3845   */\n      tag_247\n        /* \"#utility.yul\":3840:3844   */\n      dup2\n        /* \"#utility.yul\":3714:3845   */\n      tag_183\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3706:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3433:3852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3858:4091   */\n    tag_184:\n        /* \"#utility.yul\":3998:4032   */\n      0x5468652065746820616d6f756e7420737570706c696564206d75737420626520\n        /* \"#utility.yul\":3994:3995   */\n      0x00\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3982:3996   */\n      add\n        /* \"#utility.yul\":3975:4033   */\n      mstore\n        /* \"#utility.yul\":4067:4083   */\n      0x67726561746572207468616e2030000000000000000000000000000000000000\n        /* \"#utility.yul\":4062:4064   */\n      0x20\n        /* \"#utility.yul\":4054:4060   */\n      dup3\n        /* \"#utility.yul\":4050:4065   */\n      add\n        /* \"#utility.yul\":4043:4084   */\n      mstore\n        /* \"#utility.yul\":3858:4091   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4097:4463   */\n    tag_185:\n        /* \"#utility.yul\":4239:4242   */\n      0x00\n        /* \"#utility.yul\":4260:4327   */\n      tag_250\n        /* \"#utility.yul\":4324:4326   */\n      0x2e\n        /* \"#utility.yul\":4319:4322   */\n      dup4\n        /* \"#utility.yul\":4260:4327   */\n      tag_181\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4253:4327   */\n      swap2\n      pop\n        /* \"#utility.yul\":4336:4429   */\n      tag_251\n        /* \"#utility.yul\":4425:4428   */\n      dup3\n        /* \"#utility.yul\":4336:4429   */\n      tag_184\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4454:4456   */\n      0x40\n        /* \"#utility.yul\":4449:4452   */\n      dup3\n        /* \"#utility.yul\":4445:4457   */\n      add\n        /* \"#utility.yul\":4438:4457   */\n      swap1\n      pop\n        /* \"#utility.yul\":4097:4463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4469:4888   */\n    tag_46:\n        /* \"#utility.yul\":4635:4639   */\n      0x00\n        /* \"#utility.yul\":4673:4675   */\n      0x20\n        /* \"#utility.yul\":4662:4671   */\n      dup3\n        /* \"#utility.yul\":4658:4676   */\n      add\n        /* \"#utility.yul\":4650:4676   */\n      swap1\n      pop\n        /* \"#utility.yul\":4722:4731   */\n      dup2\n        /* \"#utility.yul\":4716:4720   */\n      dup2\n        /* \"#utility.yul\":4712:4732   */\n      sub\n        /* \"#utility.yul\":4708:4709   */\n      0x00\n        /* \"#utility.yul\":4697:4706   */\n      dup4\n        /* \"#utility.yul\":4693:4710   */\n      add\n        /* \"#utility.yul\":4686:4733   */\n      mstore\n        /* \"#utility.yul\":4750:4881   */\n      tag_253\n        /* \"#utility.yul\":4876:4880   */\n      dup2\n        /* \"#utility.yul\":4750:4881   */\n      tag_185\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4742:4881   */\n      swap1\n      pop\n        /* \"#utility.yul\":4469:4888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4894:5037   */\n    tag_186:\n        /* \"#utility.yul\":4951:4956   */\n      0x00\n        /* \"#utility.yul\":4982:4988   */\n      dup2\n        /* \"#utility.yul\":4976:4989   */\n      mload\n        /* \"#utility.yul\":4967:4989   */\n      swap1\n      pop\n        /* \"#utility.yul\":4998:5031   */\n      tag_255\n        /* \"#utility.yul\":5025:5030   */\n      dup2\n        /* \"#utility.yul\":4998:5031   */\n      tag_173\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4894:5037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5043:5394   */\n    tag_51:\n        /* \"#utility.yul\":5113:5119   */\n      0x00\n        /* \"#utility.yul\":5162:5164   */\n      0x20\n        /* \"#utility.yul\":5150:5159   */\n      dup3\n        /* \"#utility.yul\":5141:5148   */\n      dup5\n        /* \"#utility.yul\":5137:5160   */\n      sub\n        /* \"#utility.yul\":5133:5165   */\n      slt\n        /* \"#utility.yul\":5130:5249   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":5168:5247   */\n      tag_258\n      tag_170\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5130:5249   */\n    tag_257:\n        /* \"#utility.yul\":5288:5289   */\n      0x00\n        /* \"#utility.yul\":5313:5377   */\n      tag_259\n        /* \"#utility.yul\":5369:5376   */\n      dup5\n        /* \"#utility.yul\":5360:5366   */\n      dup3\n        /* \"#utility.yul\":5349:5358   */\n      dup6\n        /* \"#utility.yul\":5345:5367   */\n      add\n        /* \"#utility.yul\":5313:5377   */\n      tag_186\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5303:5377   */\n      swap2\n      pop\n        /* \"#utility.yul\":5259:5387   */\n      pop\n        /* \"#utility.yul\":5043:5394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5400:5580   */\n    tag_149:\n        /* \"#utility.yul\":5448:5525   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5445:5446   */\n      0x00\n        /* \"#utility.yul\":5438:5526   */\n      mstore\n        /* \"#utility.yul\":5545:5549   */\n      0x12\n        /* \"#utility.yul\":5542:5543   */\n      0x04\n        /* \"#utility.yul\":5535:5550   */\n      mstore\n        /* \"#utility.yul\":5569:5573   */\n      0x24\n        /* \"#utility.yul\":5566:5567   */\n      0x00\n        /* \"#utility.yul\":5559:5574   */\n      revert\n        /* \"#utility.yul\":5586:5766   */\n    tag_187:\n        /* \"#utility.yul\":5634:5711   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5631:5632   */\n      0x00\n        /* \"#utility.yul\":5624:5712   */\n      mstore\n        /* \"#utility.yul\":5731:5735   */\n      0x11\n        /* \"#utility.yul\":5728:5729   */\n      0x04\n        /* \"#utility.yul\":5721:5736   */\n      mstore\n        /* \"#utility.yul\":5755:5759   */\n      0x24\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5745:5760   */\n      revert\n        /* \"#utility.yul\":5772:5957   */\n    tag_53:\n        /* \"#utility.yul\":5812:5813   */\n      0x00\n        /* \"#utility.yul\":5829:5849   */\n      tag_263\n        /* \"#utility.yul\":5847:5848   */\n      dup3\n        /* \"#utility.yul\":5829:5849   */\n      tag_172\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5824:5849   */\n      swap2\n      pop\n        /* \"#utility.yul\":5863:5883   */\n      tag_264\n        /* \"#utility.yul\":5881:5882   */\n      dup4\n        /* \"#utility.yul\":5863:5883   */\n      tag_172\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5858:5883   */\n      swap3\n      pop\n        /* \"#utility.yul\":5902:5903   */\n      dup3\n        /* \"#utility.yul\":5892:5927   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":5907:5925   */\n      tag_266\n      tag_149\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5892:5927   */\n    tag_265:\n        /* \"#utility.yul\":5949:5950   */\n      dup3\n        /* \"#utility.yul\":5946:5947   */\n      dup3\n        /* \"#utility.yul\":5942:5951   */\n      div\n        /* \"#utility.yul\":5937:5951   */\n      swap1\n      pop\n        /* \"#utility.yul\":5772:5957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5963:6157   */\n    tag_55:\n        /* \"#utility.yul\":6003:6007   */\n      0x00\n        /* \"#utility.yul\":6023:6043   */\n      tag_268\n        /* \"#utility.yul\":6041:6042   */\n      dup3\n        /* \"#utility.yul\":6023:6043   */\n      tag_172\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6018:6043   */\n      swap2\n      pop\n        /* \"#utility.yul\":6057:6077   */\n      tag_269\n        /* \"#utility.yul\":6075:6076   */\n      dup4\n        /* \"#utility.yul\":6057:6077   */\n      tag_172\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6052:6077   */\n      swap3\n      pop\n        /* \"#utility.yul\":6101:6102   */\n      dup3\n        /* \"#utility.yul\":6098:6099   */\n      dup3\n        /* \"#utility.yul\":6094:6103   */\n      sub\n        /* \"#utility.yul\":6086:6103   */\n      swap1\n      pop\n        /* \"#utility.yul\":6125:6126   */\n      dup2\n        /* \"#utility.yul\":6119:6123   */\n      dup2\n        /* \"#utility.yul\":6116:6127   */\n      gt\n        /* \"#utility.yul\":6113:6150   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":6130:6148   */\n      tag_271\n      tag_187\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6113:6150   */\n    tag_270:\n        /* \"#utility.yul\":5963:6157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6163:6495   */\n    tag_57:\n        /* \"#utility.yul\":6284:6288   */\n      0x00\n        /* \"#utility.yul\":6322:6324   */\n      0x40\n        /* \"#utility.yul\":6311:6320   */\n      dup3\n        /* \"#utility.yul\":6307:6325   */\n      add\n        /* \"#utility.yul\":6299:6325   */\n      swap1\n      pop\n        /* \"#utility.yul\":6335:6406   */\n      tag_273\n        /* \"#utility.yul\":6403:6404   */\n      0x00\n        /* \"#utility.yul\":6392:6401   */\n      dup4\n        /* \"#utility.yul\":6388:6405   */\n      add\n        /* \"#utility.yul\":6379:6385   */\n      dup6\n        /* \"#utility.yul\":6335:6406   */\n      tag_180\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6416:6488   */\n      tag_274\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6473:6482   */\n      dup4\n        /* \"#utility.yul\":6469:6487   */\n      add\n        /* \"#utility.yul\":6460:6466   */\n      dup5\n        /* \"#utility.yul\":6416:6488   */\n      tag_175\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6163:6495   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6501:6591   */\n    tag_188:\n        /* \"#utility.yul\":6535:6542   */\n      0x00\n        /* \"#utility.yul\":6578:6583   */\n      dup2\n        /* \"#utility.yul\":6571:6584   */\n      iszero\n        /* \"#utility.yul\":6564:6585   */\n      iszero\n        /* \"#utility.yul\":6553:6585   */\n      swap1\n      pop\n        /* \"#utility.yul\":6501:6591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6597:6713   */\n    tag_189:\n        /* \"#utility.yul\":6667:6688   */\n      tag_277\n        /* \"#utility.yul\":6682:6687   */\n      dup2\n        /* \"#utility.yul\":6667:6688   */\n      tag_188\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6660:6665   */\n      dup2\n        /* \"#utility.yul\":6657:6689   */\n      eq\n        /* \"#utility.yul\":6647:6707   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":6703:6704   */\n      0x00\n        /* \"#utility.yul\":6700:6701   */\n      dup1\n        /* \"#utility.yul\":6693:6705   */\n      revert\n        /* \"#utility.yul\":6647:6707   */\n    tag_278:\n        /* \"#utility.yul\":6597:6713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:6856   */\n    tag_190:\n        /* \"#utility.yul\":6773:6778   */\n      0x00\n        /* \"#utility.yul\":6804:6810   */\n      dup2\n        /* \"#utility.yul\":6798:6811   */\n      mload\n        /* \"#utility.yul\":6789:6811   */\n      swap1\n      pop\n        /* \"#utility.yul\":6820:6850   */\n      tag_280\n        /* \"#utility.yul\":6844:6849   */\n      dup2\n        /* \"#utility.yul\":6820:6850   */\n      tag_189\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6719:6856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6862:7207   */\n    tag_61:\n        /* \"#utility.yul\":6929:6935   */\n      0x00\n        /* \"#utility.yul\":6978:6980   */\n      0x20\n        /* \"#utility.yul\":6966:6975   */\n      dup3\n        /* \"#utility.yul\":6957:6964   */\n      dup5\n        /* \"#utility.yul\":6953:6976   */\n      sub\n        /* \"#utility.yul\":6949:6981   */\n      slt\n        /* \"#utility.yul\":6946:7065   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6984:7063   */\n      tag_283\n      tag_170\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6946:7065   */\n    tag_282:\n        /* \"#utility.yul\":7104:7105   */\n      0x00\n        /* \"#utility.yul\":7129:7190   */\n      tag_284\n        /* \"#utility.yul\":7182:7189   */\n      dup5\n        /* \"#utility.yul\":7173:7179   */\n      dup3\n        /* \"#utility.yul\":7162:7171   */\n      dup6\n        /* \"#utility.yul\":7158:7180   */\n      add\n        /* \"#utility.yul\":7129:7190   */\n      tag_190\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7119:7190   */\n      swap2\n      pop\n        /* \"#utility.yul\":7075:7200   */\n      pop\n        /* \"#utility.yul\":6862:7207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7213:7545   */\n    tag_64:\n        /* \"#utility.yul\":7334:7338   */\n      0x00\n        /* \"#utility.yul\":7372:7374   */\n      0x40\n        /* \"#utility.yul\":7361:7370   */\n      dup3\n        /* \"#utility.yul\":7357:7375   */\n      add\n        /* \"#utility.yul\":7349:7375   */\n      swap1\n      pop\n        /* \"#utility.yul\":7385:7456   */\n      tag_286\n        /* \"#utility.yul\":7453:7454   */\n      0x00\n        /* \"#utility.yul\":7442:7451   */\n      dup4\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7429:7435   */\n      dup6\n        /* \"#utility.yul\":7385:7456   */\n      tag_180\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7466:7538   */\n      tag_287\n        /* \"#utility.yul\":7534:7536   */\n      0x20\n        /* \"#utility.yul\":7523:7532   */\n      dup4\n        /* \"#utility.yul\":7519:7537   */\n      add\n        /* \"#utility.yul\":7510:7516   */\n      dup5\n        /* \"#utility.yul\":7466:7538   */\n      tag_180\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7213:7545   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7551:7722   */\n    tag_191:\n        /* \"#utility.yul\":7691:7714   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":7687:7688   */\n      0x00\n        /* \"#utility.yul\":7679:7685   */\n      dup3\n        /* \"#utility.yul\":7675:7689   */\n      add\n        /* \"#utility.yul\":7668:7715   */\n      mstore\n        /* \"#utility.yul\":7551:7722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:8094   */\n    tag_192:\n        /* \"#utility.yul\":7870:7873   */\n      0x00\n        /* \"#utility.yul\":7891:7958   */\n      tag_290\n        /* \"#utility.yul\":7955:7957   */\n      0x15\n        /* \"#utility.yul\":7950:7953   */\n      dup4\n        /* \"#utility.yul\":7891:7958   */\n      tag_181\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7884:7958   */\n      swap2\n      pop\n        /* \"#utility.yul\":7967:8060   */\n      tag_291\n        /* \"#utility.yul\":8056:8059   */\n      dup3\n        /* \"#utility.yul\":7967:8060   */\n      tag_191\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8085:8087   */\n      0x20\n        /* \"#utility.yul\":8080:8083   */\n      dup3\n        /* \"#utility.yul\":8076:8088   */\n      add\n        /* \"#utility.yul\":8069:8088   */\n      swap1\n      pop\n        /* \"#utility.yul\":7728:8094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8100:8519   */\n    tag_70:\n        /* \"#utility.yul\":8266:8270   */\n      0x00\n        /* \"#utility.yul\":8304:8306   */\n      0x20\n        /* \"#utility.yul\":8293:8302   */\n      dup3\n        /* \"#utility.yul\":8289:8307   */\n      add\n        /* \"#utility.yul\":8281:8307   */\n      swap1\n      pop\n        /* \"#utility.yul\":8353:8362   */\n      dup2\n        /* \"#utility.yul\":8347:8351   */\n      dup2\n        /* \"#utility.yul\":8343:8363   */\n      sub\n        /* \"#utility.yul\":8339:8340   */\n      0x00\n        /* \"#utility.yul\":8328:8337   */\n      dup4\n        /* \"#utility.yul\":8324:8341   */\n      add\n        /* \"#utility.yul\":8317:8364   */\n      mstore\n        /* \"#utility.yul\":8381:8512   */\n      tag_293\n        /* \"#utility.yul\":8507:8511   */\n      dup2\n        /* \"#utility.yul\":8381:8512   */\n      tag_192\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8373:8512   */\n      swap1\n      pop\n        /* \"#utility.yul\":8100:8519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8525:8967   */\n    tag_72:\n        /* \"#utility.yul\":8674:8678   */\n      0x00\n        /* \"#utility.yul\":8712:8714   */\n      0x60\n        /* \"#utility.yul\":8701:8710   */\n      dup3\n        /* \"#utility.yul\":8697:8715   */\n      add\n        /* \"#utility.yul\":8689:8715   */\n      swap1\n      pop\n        /* \"#utility.yul\":8725:8796   */\n      tag_295\n        /* \"#utility.yul\":8793:8794   */\n      0x00\n        /* \"#utility.yul\":8782:8791   */\n      dup4\n        /* \"#utility.yul\":8778:8795   */\n      add\n        /* \"#utility.yul\":8769:8775   */\n      dup7\n        /* \"#utility.yul\":8725:8796   */\n      tag_180\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8806:8878   */\n      tag_296\n        /* \"#utility.yul\":8874:8876   */\n      0x20\n        /* \"#utility.yul\":8863:8872   */\n      dup4\n        /* \"#utility.yul\":8859:8877   */\n      add\n        /* \"#utility.yul\":8850:8856   */\n      dup6\n        /* \"#utility.yul\":8806:8878   */\n      tag_180\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8888:8960   */\n      tag_297\n        /* \"#utility.yul\":8956:8958   */\n      0x40\n        /* \"#utility.yul\":8945:8954   */\n      dup4\n        /* \"#utility.yul\":8941:8959   */\n      add\n        /* \"#utility.yul\":8932:8938   */\n      dup5\n        /* \"#utility.yul\":8888:8960   */\n      tag_175\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8525:8967   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8973:9120   */\n    tag_193:\n        /* \"#utility.yul\":9074:9085   */\n      0x00\n        /* \"#utility.yul\":9111:9114   */\n      dup2\n        /* \"#utility.yul\":9096:9114   */\n      swap1\n      pop\n        /* \"#utility.yul\":8973:9120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9126:9240   */\n    tag_194:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9246:9644   */\n    tag_195:\n        /* \"#utility.yul\":9405:9408   */\n      0x00\n        /* \"#utility.yul\":9426:9509   */\n      tag_301\n        /* \"#utility.yul\":9507:9508   */\n      0x00\n        /* \"#utility.yul\":9502:9505   */\n      dup4\n        /* \"#utility.yul\":9426:9509   */\n      tag_193\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9419:9509   */\n      swap2\n      pop\n        /* \"#utility.yul\":9518:9611   */\n      tag_302\n        /* \"#utility.yul\":9607:9610   */\n      dup3\n        /* \"#utility.yul\":9518:9611   */\n      tag_194\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9636:9637   */\n      0x00\n        /* \"#utility.yul\":9631:9634   */\n      dup3\n        /* \"#utility.yul\":9627:9638   */\n      add\n        /* \"#utility.yul\":9620:9638   */\n      swap1\n      pop\n        /* \"#utility.yul\":9246:9644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9650:10029   */\n    tag_83:\n        /* \"#utility.yul\":9834:9837   */\n      0x00\n        /* \"#utility.yul\":9856:10003   */\n      tag_304\n        /* \"#utility.yul\":9999:10002   */\n      dup3\n        /* \"#utility.yul\":9856:10003   */\n      tag_195\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9849:10003   */\n      swap2\n      pop\n        /* \"#utility.yul\":10020:10023   */\n      dup2\n        /* \"#utility.yul\":10013:10023   */\n      swap1\n      pop\n        /* \"#utility.yul\":9650:10029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10035:10200   */\n    tag_196:\n        /* \"#utility.yul\":10175:10192   */\n      0x5472616e73666572204661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":10171:10172   */\n      0x00\n        /* \"#utility.yul\":10163:10169   */\n      dup3\n        /* \"#utility.yul\":10159:10173   */\n      add\n        /* \"#utility.yul\":10152:10193   */\n      mstore\n        /* \"#utility.yul\":10035:10200   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10206:10572   */\n    tag_197:\n        /* \"#utility.yul\":10348:10351   */\n      0x00\n        /* \"#utility.yul\":10369:10436   */\n      tag_307\n        /* \"#utility.yul\":10433:10435   */\n      0x0f\n        /* \"#utility.yul\":10428:10431   */\n      dup4\n        /* \"#utility.yul\":10369:10436   */\n      tag_181\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10362:10436   */\n      swap2\n      pop\n        /* \"#utility.yul\":10445:10538   */\n      tag_308\n        /* \"#utility.yul\":10534:10537   */\n      dup3\n        /* \"#utility.yul\":10445:10538   */\n      tag_196\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10563:10565   */\n      0x20\n        /* \"#utility.yul\":10558:10561   */\n      dup3\n        /* \"#utility.yul\":10554:10566   */\n      add\n        /* \"#utility.yul\":10547:10566   */\n      swap1\n      pop\n        /* \"#utility.yul\":10206:10572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10578:10997   */\n    tag_89:\n        /* \"#utility.yul\":10744:10748   */\n      0x00\n        /* \"#utility.yul\":10782:10784   */\n      0x20\n        /* \"#utility.yul\":10771:10780   */\n      dup3\n        /* \"#utility.yul\":10767:10785   */\n      add\n        /* \"#utility.yul\":10759:10785   */\n      swap1\n      pop\n        /* \"#utility.yul\":10831:10840   */\n      dup2\n        /* \"#utility.yul\":10825:10829   */\n      dup2\n        /* \"#utility.yul\":10821:10841   */\n      sub\n        /* \"#utility.yul\":10817:10818   */\n      0x00\n        /* \"#utility.yul\":10806:10815   */\n      dup4\n        /* \"#utility.yul\":10802:10819   */\n      add\n        /* \"#utility.yul\":10795:10842   */\n      mstore\n        /* \"#utility.yul\":10859:10990   */\n      tag_310\n        /* \"#utility.yul\":10985:10989   */\n      dup2\n        /* \"#utility.yul\":10859:10990   */\n      tag_197\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10851:10990   */\n      swap1\n      pop\n        /* \"#utility.yul\":10578:10997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11003:11237   */\n    tag_198:\n        /* \"#utility.yul\":11143:11177   */\n      0x4c69717569646974792070726f76696465642073686f756c6420626520677265\n        /* \"#utility.yul\":11139:11140   */\n      0x00\n        /* \"#utility.yul\":11131:11137   */\n      dup3\n        /* \"#utility.yul\":11127:11141   */\n      add\n        /* \"#utility.yul\":11120:11178   */\n      mstore\n        /* \"#utility.yul\":11212:11229   */\n      0x61746572207468616e2031204554480000000000000000000000000000000000\n        /* \"#utility.yul\":11207:11209   */\n      0x20\n        /* \"#utility.yul\":11199:11205   */\n      dup3\n        /* \"#utility.yul\":11195:11210   */\n      add\n        /* \"#utility.yul\":11188:11230   */\n      mstore\n        /* \"#utility.yul\":11003:11237   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11243:11609   */\n    tag_199:\n        /* \"#utility.yul\":11385:11388   */\n      0x00\n        /* \"#utility.yul\":11406:11473   */\n      tag_313\n        /* \"#utility.yul\":11470:11472   */\n      0x2f\n        /* \"#utility.yul\":11465:11468   */\n      dup4\n        /* \"#utility.yul\":11406:11473   */\n      tag_181\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11399:11473   */\n      swap2\n      pop\n        /* \"#utility.yul\":11482:11575   */\n      tag_314\n        /* \"#utility.yul\":11571:11574   */\n      dup3\n        /* \"#utility.yul\":11482:11575   */\n      tag_198\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11600:11602   */\n      0x40\n        /* \"#utility.yul\":11595:11598   */\n      dup3\n        /* \"#utility.yul\":11591:11603   */\n      add\n        /* \"#utility.yul\":11584:11603   */\n      swap1\n      pop\n        /* \"#utility.yul\":11243:11609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11615:12034   */\n    tag_98:\n        /* \"#utility.yul\":11781:11785   */\n      0x00\n        /* \"#utility.yul\":11819:11821   */\n      0x20\n        /* \"#utility.yul\":11808:11817   */\n      dup3\n        /* \"#utility.yul\":11804:11822   */\n      add\n        /* \"#utility.yul\":11796:11822   */\n      swap1\n      pop\n        /* \"#utility.yul\":11868:11877   */\n      dup2\n        /* \"#utility.yul\":11862:11866   */\n      dup2\n        /* \"#utility.yul\":11858:11878   */\n      sub\n        /* \"#utility.yul\":11854:11855   */\n      0x00\n        /* \"#utility.yul\":11843:11852   */\n      dup4\n        /* \"#utility.yul\":11839:11856   */\n      add\n        /* \"#utility.yul\":11832:11879   */\n      mstore\n        /* \"#utility.yul\":11896:12027   */\n      tag_316\n        /* \"#utility.yul\":12022:12026   */\n      dup2\n        /* \"#utility.yul\":11896:12027   */\n      tag_199\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11888:12027   */\n      swap1\n      pop\n        /* \"#utility.yul\":11615:12034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12040:12450   */\n    tag_104:\n        /* \"#utility.yul\":12080:12087   */\n      0x00\n        /* \"#utility.yul\":12103:12123   */\n      tag_318\n        /* \"#utility.yul\":12121:12122   */\n      dup3\n        /* \"#utility.yul\":12103:12123   */\n      tag_172\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12098:12123   */\n      swap2\n      pop\n        /* \"#utility.yul\":12137:12157   */\n      tag_319\n        /* \"#utility.yul\":12155:12156   */\n      dup4\n        /* \"#utility.yul\":12137:12157   */\n      tag_172\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12132:12157   */\n      swap3\n      pop\n        /* \"#utility.yul\":12192:12193   */\n      dup3\n        /* \"#utility.yul\":12189:12190   */\n      dup3\n        /* \"#utility.yul\":12185:12194   */\n      mul\n        /* \"#utility.yul\":12214:12244   */\n      tag_320\n        /* \"#utility.yul\":12232:12243   */\n      dup2\n        /* \"#utility.yul\":12214:12244   */\n      tag_172\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12203:12244   */\n      swap2\n      pop\n        /* \"#utility.yul\":12393:12394   */\n      dup3\n        /* \"#utility.yul\":12384:12391   */\n      dup3\n        /* \"#utility.yul\":12380:12395   */\n      div\n        /* \"#utility.yul\":12377:12378   */\n      dup5\n        /* \"#utility.yul\":12374:12396   */\n      eq\n        /* \"#utility.yul\":12354:12355   */\n      dup4\n        /* \"#utility.yul\":12347:12356   */\n      iszero\n        /* \"#utility.yul\":12327:12410   */\n      or\n        /* \"#utility.yul\":12304:12443   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":12423:12441   */\n      tag_322\n      tag_187\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12304:12443   */\n    tag_321:\n        /* \"#utility.yul\":12088:12450   */\n      pop\n        /* \"#utility.yul\":12040:12450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12456:12630   */\n    tag_200:\n        /* \"#utility.yul\":12596:12622   */\n      0x496e76616c696420616d6f756e74206f66207368617265730000000000000000\n        /* \"#utility.yul\":12592:12593   */\n      0x00\n        /* \"#utility.yul\":12584:12590   */\n      dup3\n        /* \"#utility.yul\":12580:12594   */\n      add\n        /* \"#utility.yul\":12573:12623   */\n      mstore\n        /* \"#utility.yul\":12456:12630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12636:13002   */\n    tag_201:\n        /* \"#utility.yul\":12778:12781   */\n      0x00\n        /* \"#utility.yul\":12799:12866   */\n      tag_325\n        /* \"#utility.yul\":12863:12865   */\n      0x18\n        /* \"#utility.yul\":12858:12861   */\n      dup4\n        /* \"#utility.yul\":12799:12866   */\n      tag_181\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12792:12866   */\n      swap2\n      pop\n        /* \"#utility.yul\":12875:12968   */\n      tag_326\n        /* \"#utility.yul\":12964:12967   */\n      dup3\n        /* \"#utility.yul\":12875:12968   */\n      tag_200\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12993:12995   */\n      0x20\n        /* \"#utility.yul\":12988:12991   */\n      dup3\n        /* \"#utility.yul\":12984:12996   */\n      add\n        /* \"#utility.yul\":12977:12996   */\n      swap1\n      pop\n        /* \"#utility.yul\":12636:13002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13008:13427   */\n    tag_115:\n        /* \"#utility.yul\":13174:13178   */\n      0x00\n        /* \"#utility.yul\":13212:13214   */\n      0x20\n        /* \"#utility.yul\":13201:13210   */\n      dup3\n        /* \"#utility.yul\":13197:13215   */\n      add\n        /* \"#utility.yul\":13189:13215   */\n      swap1\n      pop\n        /* \"#utility.yul\":13261:13270   */\n      dup2\n        /* \"#utility.yul\":13255:13259   */\n      dup2\n        /* \"#utility.yul\":13251:13271   */\n      sub\n        /* \"#utility.yul\":13247:13248   */\n      0x00\n        /* \"#utility.yul\":13236:13245   */\n      dup4\n        /* \"#utility.yul\":13232:13249   */\n      add\n        /* \"#utility.yul\":13225:13272   */\n      mstore\n        /* \"#utility.yul\":13289:13420   */\n      tag_328\n        /* \"#utility.yul\":13415:13419   */\n      dup2\n        /* \"#utility.yul\":13289:13420   */\n      tag_201\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":13281:13420   */\n      swap1\n      pop\n        /* \"#utility.yul\":13008:13427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13433:13722   */\n    tag_202:\n        /* \"#utility.yul\":13573:13607   */\n      0x506c6561736520617070726f76652074686520636f6e747261637420746f2064\n        /* \"#utility.yul\":13569:13570   */\n      0x00\n        /* \"#utility.yul\":13561:13567   */\n      dup3\n        /* \"#utility.yul\":13557:13571   */\n      add\n        /* \"#utility.yul\":13550:13608   */\n      mstore\n        /* \"#utility.yul\":13642:13676   */\n      0x6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c65\n        /* \"#utility.yul\":13637:13639   */\n      0x20\n        /* \"#utility.yul\":13629:13635   */\n      dup3\n        /* \"#utility.yul\":13625:13640   */\n      add\n        /* \"#utility.yul\":13618:13677   */\n      mstore\n        /* \"#utility.yul\":13711:13714   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13706:13708   */\n      0x40\n        /* \"#utility.yul\":13698:13704   */\n      dup3\n        /* \"#utility.yul\":13694:13709   */\n      add\n        /* \"#utility.yul\":13687:13715   */\n      mstore\n        /* \"#utility.yul\":13433:13722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13728:14094   */\n    tag_203:\n        /* \"#utility.yul\":13870:13873   */\n      0x00\n        /* \"#utility.yul\":13891:13958   */\n      tag_331\n        /* \"#utility.yul\":13955:13957   */\n      0x41\n        /* \"#utility.yul\":13950:13953   */\n      dup4\n        /* \"#utility.yul\":13891:13958   */\n      tag_181\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13884:13958   */\n      swap2\n      pop\n        /* \"#utility.yul\":13967:14060   */\n      tag_332\n        /* \"#utility.yul\":14056:14059   */\n      dup3\n        /* \"#utility.yul\":13967:14060   */\n      tag_202\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":14085:14087   */\n      0x60\n        /* \"#utility.yul\":14080:14083   */\n      dup3\n        /* \"#utility.yul\":14076:14088   */\n      add\n        /* \"#utility.yul\":14069:14088   */\n      swap1\n      pop\n        /* \"#utility.yul\":13728:14094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14100:14519   */\n    tag_122:\n        /* \"#utility.yul\":14266:14270   */\n      0x00\n        /* \"#utility.yul\":14304:14306   */\n      0x20\n        /* \"#utility.yul\":14293:14302   */\n      dup3\n        /* \"#utility.yul\":14289:14307   */\n      add\n        /* \"#utility.yul\":14281:14307   */\n      swap1\n      pop\n        /* \"#utility.yul\":14353:14362   */\n      dup2\n        /* \"#utility.yul\":14347:14351   */\n      dup2\n        /* \"#utility.yul\":14343:14363   */\n      sub\n        /* \"#utility.yul\":14339:14340   */\n      0x00\n        /* \"#utility.yul\":14328:14337   */\n      dup4\n        /* \"#utility.yul\":14324:14341   */\n      add\n        /* \"#utility.yul\":14317:14364   */\n      mstore\n        /* \"#utility.yul\":14381:14512   */\n      tag_334\n        /* \"#utility.yul\":14507:14511   */\n      dup2\n        /* \"#utility.yul\":14381:14512   */\n      tag_203\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":14373:14512   */\n      swap1\n      pop\n        /* \"#utility.yul\":14100:14519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14525:14690   */\n    tag_204:\n        /* \"#utility.yul\":14665:14682   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":14661:14662   */\n      0x00\n        /* \"#utility.yul\":14653:14659   */\n      dup3\n        /* \"#utility.yul\":14649:14663   */\n      add\n        /* \"#utility.yul\":14642:14683   */\n      mstore\n        /* \"#utility.yul\":14525:14690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14696:15062   */\n    tag_205:\n        /* \"#utility.yul\":14838:14841   */\n      0x00\n        /* \"#utility.yul\":14859:14926   */\n      tag_337\n        /* \"#utility.yul\":14923:14925   */\n      0x0f\n        /* \"#utility.yul\":14918:14921   */\n      dup4\n        /* \"#utility.yul\":14859:14926   */\n      tag_181\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":14852:14926   */\n      swap2\n      pop\n        /* \"#utility.yul\":14935:15028   */\n      tag_338\n        /* \"#utility.yul\":15024:15027   */\n      dup3\n        /* \"#utility.yul\":14935:15028   */\n      tag_204\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":15053:15055   */\n      0x20\n        /* \"#utility.yul\":15048:15051   */\n      dup3\n        /* \"#utility.yul\":15044:15056   */\n      add\n        /* \"#utility.yul\":15037:15056   */\n      swap1\n      pop\n        /* \"#utility.yul\":14696:15062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15068:15487   */\n    tag_137:\n        /* \"#utility.yul\":15234:15238   */\n      0x00\n        /* \"#utility.yul\":15272:15274   */\n      0x20\n        /* \"#utility.yul\":15261:15270   */\n      dup3\n        /* \"#utility.yul\":15257:15275   */\n      add\n        /* \"#utility.yul\":15249:15275   */\n      swap1\n      pop\n        /* \"#utility.yul\":15321:15330   */\n      dup2\n        /* \"#utility.yul\":15315:15319   */\n      dup2\n        /* \"#utility.yul\":15311:15331   */\n      sub\n        /* \"#utility.yul\":15307:15308   */\n      0x00\n        /* \"#utility.yul\":15296:15305   */\n      dup4\n        /* \"#utility.yul\":15292:15309   */\n      add\n        /* \"#utility.yul\":15285:15332   */\n      mstore\n        /* \"#utility.yul\":15349:15480   */\n      tag_340\n        /* \"#utility.yul\":15475:15479   */\n      dup2\n        /* \"#utility.yul\":15349:15480   */\n      tag_205\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":15341:15480   */\n      swap1\n      pop\n        /* \"#utility.yul\":15068:15487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ffc6312b5dadb84e6badcadf73e0880ee89517abd26107191ec3d6ce94f1c1cd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_605": {
									"entryPoint": null,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620016ea380380620016ea8339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b6115c0806200012a6000396000f3fe6080604052600436106100705760003560e01c8063bec3fa171161004e578063bec3fa17146100e5578063eb521a4c1461010e578063f4325d671461012a578063ff9b37581461015557610070565b80631aa5c70e146100755780637464fc3d146100915780638e3073a6146100bc575b600080fd5b61008f600480360381019061008a9190610de7565b61017e565b005b34801561009d57600080fd5b506100a6610369565b6040516100b39190610e23565b60405180910390f35b3480156100c857600080fd5b506100e360048036038101906100de9190610de7565b61036f565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610e9c565b61065c565b005b61012860048036038101906101239190610de7565b6106f3565b005b34801561013657600080fd5b5061013f6108c9565b60405161014c9190610eeb565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610de7565b6108ed565b005b8034146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610f63565b60405180910390fd5b60003411610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa90610ff5565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161025f9190610eeb565b602060405180830381865afa15801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a0919061102a565b905060004790506000816001546102b791906110b5565b836102c291906110e6565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161031f92919061111a565b6020604051808303816000875af115801561033e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610362919061117b565b5050505050565b60015481565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016103cb9291906111a8565b602060405180830381865afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c919061102a565b101561044d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104449061121d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104aa9392919061123d565b6020604051808303816000875af11580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed919061117b565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161054a9190610eeb565b602060405180830381865afa158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b919061102a565b905060008160015461059d91906110b5565b476105a891906110e6565b905060003373ffffffffffffffffffffffffffffffffffffffff16826040516105d0906112a5565b60006040518083038185875af1925050503d806000811461060d576040519150601f19603f3d011682016040523d82523d6000602084013e610612565b606091505b5050905080610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d90611306565b60405180910390fd5b50505050565b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106ab92919061111a565b6020604051808303816000875af11580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee919061117b565b505050565b662386f26fc1000081101561073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490611398565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161079a9392919061123d565b6020604051808303816000875af11580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd919061117b565b5047816107ea91906113b8565b6001819055507339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361082c600154610be6565b6040518363ffffffff1660e01b815260040161084992919061111a565b6020604051808303816000875af1158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c919061117b565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516108be92919061111a565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092790611446565b60405180910390fd5b807339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109809291906111a8565b602060405180830381865afa15801561099d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c1919061102a565b1015610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f9906114fe565b60405180910390fd5b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a539392919061123d565b6020604051808303816000875af1158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a96919061117b565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610af292919061111a565b6020604051808303816000875af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b35919061117b565b5060003373ffffffffffffffffffffffffffffffffffffffff1682604051610b5c906112a5565b60006040518083038185875af1925050503d8060008114610b99576040519150601f19603f3d011682016040523d82523d6000602084013e610b9e565b606091505b5050905080610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd99061156a565b60405180910390fd5b5050565b6000808203610bf85760009050610d8e565b60006001905060008390506000608082901c1115610c1f57608081901c9050604082901b91505b6000604082901c1115610c3b57604081901c9050602082901b91505b6000602082901c1115610c5757602081901c9050601082901b91505b6000601082901c1115610c7357601081901c9050600882901b91505b6000600882901c1115610c8f57600881901c9050600482901b91505b6000600482901c1115610cab57600481901c9050600282901b91505b6000600282901c1115610cc057600182901b91505b6001828581610cd257610cd1611057565b5b048301901c91506001828581610ceb57610cea611057565b5b048301901c91506001828581610d0457610d03611057565b5b048301901c91506001828581610d1d57610d1c611057565b5b048301901c91506001828581610d3657610d35611057565b5b048301901c91506001828581610d4f57610d4e611057565b5b048301901c91506001828581610d6857610d67611057565b5b048301901c9150610d8982838681610d8357610d82611057565b5b04610d93565b925050505b919050565b6000818310610da25781610da4565b825b905092915050565b600080fd5b6000819050919050565b610dc481610db1565b8114610dcf57600080fd5b50565b600081359050610de181610dbb565b92915050565b600060208284031215610dfd57610dfc610dac565b5b6000610e0b84828501610dd2565b91505092915050565b610e1d81610db1565b82525050565b6000602082019050610e386000830184610e14565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6982610e3e565b9050919050565b610e7981610e5e565b8114610e8457600080fd5b50565b600081359050610e9681610e70565b92915050565b60008060408385031215610eb357610eb2610dac565b5b6000610ec185828601610e87565b9250506020610ed285828601610dd2565b9150509250929050565b610ee581610e5e565b82525050565b6000602082019050610f006000830184610edc565b92915050565b600082825260208201905092915050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000610f4d600e83610f06565b9150610f5882610f17565b602082019050919050565b60006020820190508181036000830152610f7c81610f40565b9050919050565b7f5468652065746820616d6f756e7420737570706c696564206d7573742062652060008201527f67726561746572207468616e2030000000000000000000000000000000000000602082015250565b6000610fdf602e83610f06565b9150610fea82610f83565b604082019050919050565b6000602082019050818103600083015261100e81610fd2565b9050919050565b60008151905061102481610dbb565b92915050565b6000602082840312156110405761103f610dac565b5b600061104e84828501611015565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110c082610db1565b91506110cb83610db1565b9250826110db576110da611057565b5b828204905092915050565b60006110f182610db1565b91506110fc83610db1565b925082820390508181111561111457611113611086565b5b92915050565b600060408201905061112f6000830185610edc565b61113c6020830184610e14565b9392505050565b60008115159050919050565b61115881611143565b811461116357600080fd5b50565b6000815190506111758161114f565b92915050565b60006020828403121561119157611190610dac565b5b600061119f84828501611166565b91505092915050565b60006040820190506111bd6000830185610edc565b6111ca6020830184610edc565b9392505050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6000611207601583610f06565b9150611212826111d1565b602082019050919050565b60006020820190508181036000830152611236816111fa565b9050919050565b60006060820190506112526000830186610edc565b61125f6020830185610edc565b61126c6040830184610e14565b949350505050565b600081905092915050565b50565b600061128f600083611274565b915061129a8261127f565b600082019050919050565b60006112b082611282565b9150819050919050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b60006112f0600f83610f06565b91506112fb826112ba565b602082019050919050565b6000602082019050818103600083015261131f816112e3565b9050919050565b7f4c69717569646974792070726f76696465642073686f756c642062652067726560008201527f61746572207468616e2031204554480000000000000000000000000000000000602082015250565b6000611382602f83610f06565b915061138d82611326565b604082019050919050565b600060208201905081810360008301526113b181611375565b9050919050565b60006113c382610db1565b91506113ce83610db1565b92508282026113dc81610db1565b915082820484148315176113f3576113f2611086565b5b5092915050565b7f496e76616c696420616d6f756e74206f66207368617265730000000000000000600082015250565b6000611430601883610f06565b915061143b826113fa565b602082019050919050565b6000602082019050818103600083015261145f81611423565b9050919050565b7f506c6561736520617070726f76652074686520636f6e747261637420746f206460008201527f6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6560208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b60006114e8604183610f06565b91506114f382611466565b606082019050919050565b60006020820190508181036000830152611517816114db565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611554600f83610f06565b915061155f8261151e565b602082019050919050565b6000602082019050818103600083015261158381611547565b905091905056fea2646970667358221220ffc6312b5dadb84e6badcadf73e0880ee89517abd26107191ec3d6ce94f1c1cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16EA CODESIZE SUB DUP1 PUSH3 0x16EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB0 DUP3 PUSH3 0x83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0xA3 JUMP JUMPDEST DUP2 EQ PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE2 DUP2 PUSH3 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x111 DUP5 DUP3 DUP6 ADD PUSH3 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15C0 DUP1 PUSH3 0x12A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEC3FA17 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xFF9B3758 EQ PUSH2 0x155 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x1AA5C70E EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8E3073A6 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST STOP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST DUP4 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP3 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST LT ISZERO PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x444 SWAP1 PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST SELFBALANCE PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x612 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP SELFBALANCE DUP2 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x82C PUSH1 0x1 SLOAD PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x849 SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BE SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x927 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP3 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST LT ISZERO PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF2 SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD9 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xBF8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC1F JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC3B JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC57 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC73 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC8F JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCEB JUMPI PUSH2 0xCEA PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xD89 DUP3 DUP4 DUP7 DUP2 PUSH2 0xD83 JUMPI PUSH2 0xD82 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV PUSH2 0xD93 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xDA2 JUMPI DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xDB1 JUMP JUMPDEST DUP2 EQ PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE1 DUP2 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xDFC PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE0B DUP5 DUP3 DUP6 ADD PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1D DUP2 PUSH2 0xDB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE69 DUP3 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE79 DUP2 PUSH2 0xE5E JUMP JUMPDEST DUP2 EQ PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE96 DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB2 PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP6 DUP3 DUP7 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED2 DUP6 DUP3 DUP7 ADD PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0xE5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF00 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4D PUSH1 0xE DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0xF58 DUP3 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7C DUP2 PUSH2 0xF40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652065746820616D6F756E7420737570706C696564206D75737420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDF PUSH1 0x2E DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0xFEA DUP3 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100E DUP2 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1024 DUP2 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1040 JUMPI PUSH2 0x103F PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104E DUP5 DUP3 DUP6 ADD PUSH2 0x1015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C0 DUP3 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CB DUP4 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10DB JUMPI PUSH2 0x10DA PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F1 DUP3 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FC DUP4 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x1086 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x112F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x113C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1158 DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP2 EQ PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1175 DUP2 PUSH2 0x114F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119F DUP5 DUP3 DUP6 ADD PUSH2 0x1166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x11CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 PUSH1 0x15 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1212 DUP3 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1252 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x125F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x126C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128F PUSH1 0x0 DUP4 PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP PUSH2 0x129A DUP3 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x1282 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F0 PUSH1 0xF DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FB DUP3 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131F DUP2 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C69717569646974792070726F76696465642073686F756C6420626520677265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2031204554480000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 PUSH1 0x2F DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B1 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C3 DUP3 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x13CE DUP4 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13DC DUP2 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x1086 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74206F66207368617265730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1430 PUSH1 0x18 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x143B DUP3 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145F DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520617070726F76652074686520636F6E747261637420746F2064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E8 PUSH1 0x41 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F3 DUP3 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1517 DUP2 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 PUSH1 0xF DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x155F DUP3 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1583 DUP2 PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC6 BALANCE 0x2B 0x5D 0xAD 0xB8 0x4E PUSH12 0xADCADF73E0880EE89517ABD2 PUSH2 0x719 0x1E 0xC3 0xD6 0xCE SWAP5 CALL 0xC1 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "581:3360:2:-:0;;;889:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;948:13;933:12;;:28;;;;;;;;;;;;;;;;;;889:79;581:3360;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;581:3360:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getDAI_872": {
									"entryPoint": 382,
									"id": 872,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getEth_813": {
									"entryPoint": 879,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@kLast_595": {
									"entryPoint": 873,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_42": {
									"entryPoint": 3475,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@provideLiquidity_665": {
									"entryPoint": 1779,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reedemShares_735": {
									"entryPoint": 2285,
									"id": 735,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reserveToken_587": {
									"entryPoint": 2249,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_466": {
									"entryPoint": 3046,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferTokens_888": {
									"entryPoint": 1628,
									"id": 888,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c": {
									"entryPoint": 5114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b": {
									"entryPoint": 5222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15490:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:32:3"
															},
															"nodeType": "YulIf",
															"src": "1977:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2106:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2150:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2233:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1929:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1940:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1952:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1960:6:3",
														"type": ""
													}
												],
												"src": "1884:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2429:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2417:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2424:3:3",
														"type": ""
													}
												],
												"src": "2364:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2581:4:3",
														"type": ""
													}
												],
												"src": "2488:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2829:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2834:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2850:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2869:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2874:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2850:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2784:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2789:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2800:11:3",
														"type": ""
													}
												],
												"src": "2716:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2997:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:14:3"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3031:16:3",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2989:6:3",
														"type": ""
													}
												],
												"src": "2891:164:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3217:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3283:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3288:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3224:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3217:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3389:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "3300:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3300:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3402:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3413:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3418:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:3",
														"type": ""
													}
												],
												"src": "3061:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3604:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3614:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3626:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3614:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3661:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3672:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3657:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3680:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3676:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3676:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3650:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3650:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3706:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3840:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3706:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3584:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3599:4:3",
														"type": ""
													}
												],
												"src": "3433:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:127:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3986:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3994:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3982:14:3"
																	},
																	{
																		"hexValue": "5468652065746820616d6f756e7420737570706c696564206d75737420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3998:34:3",
																		"type": "",
																		"value": "The eth amount supplied must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3975:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3975:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4054:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4062:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4050:15:3"
																	},
																	{
																		"hexValue": "67726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4067:16:3",
																		"type": "",
																		"value": "greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4043:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4043:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3956:6:3",
														"type": ""
													}
												],
												"src": "3858:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4243:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4253:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4319:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4324:2:3",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4260:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4425:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
																	"nodeType": "YulIdentifier",
																	"src": "4336:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4438:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4449:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4454:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4445:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4231:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4239:3:3",
														"type": ""
													}
												],
												"src": "4097:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4640:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4650:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4662:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4673:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4658:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4650:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4708:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4693:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4693:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4716:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4722:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4712:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4712:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4686:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4742:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4876:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4750:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4742:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4620:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4635:4:3",
														"type": ""
													}
												],
												"src": "4469:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4967:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4982:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4976:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4967:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5025:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4998:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4998:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4935:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4943:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4951:5:3",
														"type": ""
													}
												],
												"src": "4894:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5166:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5168:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5168:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5168:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5141:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5150:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5137:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5137:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5162:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5133:32:3"
															},
															"nodeType": "YulIf",
															"src": "5130:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5259:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5274:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5288:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5278:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5303:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5349:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5360:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5345:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5345:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5369:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5313:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5313:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5303:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5090:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5101:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5113:6:3",
														"type": ""
													}
												],
												"src": "5043:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5428:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5445:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5448:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5438:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5438:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5438:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5545:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5535:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5535:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5535:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5569:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5559:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5559:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5400:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5614:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5631:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5634:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5728:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5731:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5721:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5721:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5586:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5814:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5824:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5847:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5829:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5829:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5824:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5858:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5881:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5863:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5858:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5905:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5907:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5907:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5907:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5902:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5895:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5895:9:3"
															},
															"nodeType": "YulIf",
															"src": "5892:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5937:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5946:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5949:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5942:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5937:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5803:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5806:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5812:1:3",
														"type": ""
													}
												],
												"src": "5772:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6008:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6018:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6041:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6023:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6018:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6052:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6075:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6057:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6052:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6086:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6098:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6101:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6094:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6094:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6086:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6128:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6130:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6119:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6125:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6116:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:11:3"
															},
															"nodeType": "YulIf",
															"src": "6113:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5994:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5997:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6003:4:3",
														"type": ""
													}
												],
												"src": "5963:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6289:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6299:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6311:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6299:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6392:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6403:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6388:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6335:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6335:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6335:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6460:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6473:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6484:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6469:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6469:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6416:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6416:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6253:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6265:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6273:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6284:4:3",
														"type": ""
													}
												],
												"src": "6163:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6553:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6578:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6571:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6571:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6564:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6553:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6525:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6535:7:3",
														"type": ""
													}
												],
												"src": "6501:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6637:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6691:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6700:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6703:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6693:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6693:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6660:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6682:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6667:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6667:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6657:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:40:3"
															},
															"nodeType": "YulIf",
															"src": "6647:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6630:5:3",
														"type": ""
													}
												],
												"src": "6597:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6804:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6798:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6789:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6844:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6820:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6820:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6757:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6765:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6773:5:3",
														"type": ""
													}
												],
												"src": "6719:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6982:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6984:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6984:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6984:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6957:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6966:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6953:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6953:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6978:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:32:3"
															},
															"nodeType": "YulIf",
															"src": "6946:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "7075:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7090:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7094:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7119:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7162:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7173:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7158:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7158:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7182:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7129:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7119:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6906:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6917:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6929:6:3",
														"type": ""
													}
												],
												"src": "6862:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7339:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7349:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7361:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7372:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7357:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7349:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7429:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7442:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7453:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7385:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7385:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7385:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7510:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7523:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7534:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7519:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7519:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7466:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7466:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7466:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7303:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7315:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7323:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7334:4:3",
														"type": ""
													}
												],
												"src": "7213:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7657:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7679:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7687:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7675:14:3"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7691:23:3",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7668:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7668:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7668:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7649:6:3",
														"type": ""
													}
												],
												"src": "7551:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7874:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7884:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7950:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7955:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7891:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8056:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nodeType": "YulIdentifier",
																	"src": "7967:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7967:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8069:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8080:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8085:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8069:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7862:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7870:3:3",
														"type": ""
													}
												],
												"src": "7728:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8271:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8281:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8293:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8304:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8289:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8281:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8328:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8339:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8324:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8324:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8347:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8353:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8317:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8317:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8373:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8507:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8381:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8381:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8373:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8251:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8266:4:3",
														"type": ""
													}
												],
												"src": "8100:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8679:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8689:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8701:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8712:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8697:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8697:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8689:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8769:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8782:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8793:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8778:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8778:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8725:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8725:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8850:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8863:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8874:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8859:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8859:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8806:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8806:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8806:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8932:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8945:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8956:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8941:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8888:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8888:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8888:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8635:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8647:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8655:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8663:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8674:4:3",
														"type": ""
													}
												],
												"src": "8525:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9086:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9096:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9111:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9096:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9058:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9063:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9074:11:3",
														"type": ""
													}
												],
												"src": "8973:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9232:8:3",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9224:6:3",
														"type": ""
													}
												],
												"src": "9126:114:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9409:235:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9419:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9502:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9426:75:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:83:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9419:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9607:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "9518:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9518:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9620:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9631:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9636:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9627:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9627:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9620:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9397:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9405:3:3",
														"type": ""
													}
												],
												"src": "9246:398:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9838:191:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9849:154:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9999:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9856:141:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:147:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9849:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10013:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10020:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9825:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9834:3:3",
														"type": ""
													}
												],
												"src": "9650:379:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10141:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10163:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10171:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10159:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10159:14:3"
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10175:17:3",
																		"type": "",
																		"value": "Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10152:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10152:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10152:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10133:6:3",
														"type": ""
													}
												],
												"src": "10035:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10352:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10362:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10428:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10433:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10369:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10369:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10534:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																	"nodeType": "YulIdentifier",
																	"src": "10445:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10445:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10445:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10547:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10558:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10563:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10554:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10554:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10340:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10348:3:3",
														"type": ""
													}
												],
												"src": "10206:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10749:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10759:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10771:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10782:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10759:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10806:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10817:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10802:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10802:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10825:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10821:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10821:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10795:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10795:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10795:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10851:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10985:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10859:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10851:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10729:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10744:4:3",
														"type": ""
													}
												],
												"src": "10578:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11109:128:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11131:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11139:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11127:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11127:14:3"
																	},
																	{
																		"hexValue": "4c69717569646974792070726f76696465642073686f756c6420626520677265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11143:34:3",
																		"type": "",
																		"value": "Liquidity provided should be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11120:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11120:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11120:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11199:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11207:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11195:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11195:15:3"
																	},
																	{
																		"hexValue": "61746572207468616e203120455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11212:17:3",
																		"type": "",
																		"value": "ater than 1 ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11188:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11188:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11188:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11101:6:3",
														"type": ""
													}
												],
												"src": "11003:234:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11389:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11399:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11465:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11470:2:3",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11406:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11406:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11399:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11571:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
																	"nodeType": "YulIdentifier",
																	"src": "11482:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11482:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11482:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11584:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11595:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11600:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11591:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11591:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11584:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11377:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11385:3:3",
														"type": ""
													}
												],
												"src": "11243:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11786:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11796:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11808:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11819:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11804:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11804:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11796:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11843:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11854:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11839:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11839:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11862:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11868:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11858:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11858:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11832:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11832:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11832:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11888:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12022:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11896:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11896:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11888:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11766:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11781:4:3",
														"type": ""
													}
												],
												"src": "11615:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12088:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12098:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12121:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12103:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12103:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12098:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12132:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12155:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12137:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12137:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12132:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12166:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12189:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12192:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12185:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12185:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12170:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12203:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12232:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12214:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12214:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12203:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12421:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12423:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12423:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12423:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12354:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12347:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12347:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12377:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12384:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12393:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12380:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12380:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12374:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12374:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12327:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12327:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12307:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12307:113:3"
															},
															"nodeType": "YulIf",
															"src": "12304:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12071:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12074:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12080:7:3",
														"type": ""
													}
												],
												"src": "12040:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12562:68:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12584:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12592:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12580:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12580:14:3"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74206f6620736861726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12596:26:3",
																		"type": "",
																		"value": "Invalid amount of shares"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12573:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12573:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12573:50:3"
														}
													]
												},
												"name": "store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12554:6:3",
														"type": ""
													}
												],
												"src": "12456:174:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12782:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12792:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12858:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12863:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12799:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12799:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12792:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12964:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																	"nodeType": "YulIdentifier",
																	"src": "12875:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12875:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12875:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12977:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12988:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12993:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12984:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12984:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12977:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12770:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12778:3:3",
														"type": ""
													}
												],
												"src": "12636:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13179:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13189:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13201:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13212:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13197:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13197:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13189:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13236:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13247:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13232:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13232:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13255:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13261:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13251:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13251:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13225:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13225:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13225:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13281:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13415:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13289:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13289:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13281:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13159:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13174:4:3",
														"type": ""
													}
												],
												"src": "13008:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13539:183:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13561:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13569:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13557:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13557:14:3"
																	},
																	{
																		"hexValue": "506c6561736520617070726f76652074686520636f6e747261637420746f2064",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13573:34:3",
																		"type": "",
																		"value": "Please approve the contract to d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13550:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13550:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13550:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13629:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13637:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13625:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13625:15:3"
																	},
																	{
																		"hexValue": "6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13642:34:3",
																		"type": "",
																		"value": "educt ltr tokens from your walle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13618:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13618:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13618:59:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13698:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13706:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13694:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13694:15:3"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13711:3:3",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13687:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13687:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13687:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13531:6:3",
														"type": ""
													}
												],
												"src": "13433:289:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13874:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13884:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13950:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13955:2:3",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13891:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13891:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13884:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14056:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																	"nodeType": "YulIdentifier",
																	"src": "13967:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13967:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13967:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14069:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14080:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14085:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14076:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14076:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14069:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13862:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13870:3:3",
														"type": ""
													}
												],
												"src": "13728:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14271:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14281:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14293:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14304:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14289:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14289:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14281:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14328:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14339:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14324:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14324:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14347:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14353:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14343:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14343:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14317:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14317:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14317:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14373:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14507:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14381:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14381:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14373:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14251:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14266:4:3",
														"type": ""
													}
												],
												"src": "14100:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14631:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14653:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14661:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14649:14:3"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14665:17:3",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14642:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14642:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14642:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14623:6:3",
														"type": ""
													}
												],
												"src": "14525:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14842:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14852:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14918:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14923:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14859:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14859:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14852:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15024:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "14935:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14935:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14935:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15037:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15048:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15053:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15044:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15044:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15037:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14830:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14838:3:3",
														"type": ""
													}
												],
												"src": "14696:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15239:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15249:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15261:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15272:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15257:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15257:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15249:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15296:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15307:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15292:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15292:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15315:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15321:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15311:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15311:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15285:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15285:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15285:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15341:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15475:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15349:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15349:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15341:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15219:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15234:4:3",
														"type": ""
													}
												],
												"src": "15068:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"The eth amount supplied must be \")\n\n        mstore(add(memPtr, 32), \"greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity provided should be gre\")\n\n        mstore(add(memPtr, 32), \"ater than 1 ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount of shares\")\n\n    }\n\n    function abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please approve the contract to d\")\n\n        mstore(add(memPtr, 32), \"educt ltr tokens from your walle\")\n\n        mstore(add(memPtr, 64), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 65)\n        store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c8063bec3fa171161004e578063bec3fa17146100e5578063eb521a4c1461010e578063f4325d671461012a578063ff9b37581461015557610070565b80631aa5c70e146100755780637464fc3d146100915780638e3073a6146100bc575b600080fd5b61008f600480360381019061008a9190610de7565b61017e565b005b34801561009d57600080fd5b506100a6610369565b6040516100b39190610e23565b60405180910390f35b3480156100c857600080fd5b506100e360048036038101906100de9190610de7565b61036f565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610e9c565b61065c565b005b61012860048036038101906101239190610de7565b6106f3565b005b34801561013657600080fd5b5061013f6108c9565b60405161014c9190610eeb565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610de7565b6108ed565b005b8034146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610f63565b60405180910390fd5b60003411610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa90610ff5565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161025f9190610eeb565b602060405180830381865afa15801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a0919061102a565b905060004790506000816001546102b791906110b5565b836102c291906110e6565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161031f92919061111a565b6020604051808303816000875af115801561033e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610362919061117b565b5050505050565b60015481565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016103cb9291906111a8565b602060405180830381865afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c919061102a565b101561044d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104449061121d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104aa9392919061123d565b6020604051808303816000875af11580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed919061117b565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161054a9190610eeb565b602060405180830381865afa158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b919061102a565b905060008160015461059d91906110b5565b476105a891906110e6565b905060003373ffffffffffffffffffffffffffffffffffffffff16826040516105d0906112a5565b60006040518083038185875af1925050503d806000811461060d576040519150601f19603f3d011682016040523d82523d6000602084013e610612565b606091505b5050905080610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d90611306565b60405180910390fd5b50505050565b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106ab92919061111a565b6020604051808303816000875af11580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee919061117b565b505050565b662386f26fc1000081101561073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490611398565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161079a9392919061123d565b6020604051808303816000875af11580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd919061117b565b5047816107ea91906113b8565b6001819055507339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361082c600154610be6565b6040518363ffffffff1660e01b815260040161084992919061111a565b6020604051808303816000875af1158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c919061117b565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516108be92919061111a565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092790611446565b60405180910390fd5b807339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109809291906111a8565b602060405180830381865afa15801561099d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c1919061102a565b1015610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f9906114fe565b60405180910390fd5b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a539392919061123d565b6020604051808303816000875af1158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a96919061117b565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610af292919061111a565b6020604051808303816000875af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b35919061117b565b5060003373ffffffffffffffffffffffffffffffffffffffff1682604051610b5c906112a5565b60006040518083038185875af1925050503d8060008114610b99576040519150601f19603f3d011682016040523d82523d6000602084013e610b9e565b606091505b5050905080610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd99061156a565b60405180910390fd5b5050565b6000808203610bf85760009050610d8e565b60006001905060008390506000608082901c1115610c1f57608081901c9050604082901b91505b6000604082901c1115610c3b57604081901c9050602082901b91505b6000602082901c1115610c5757602081901c9050601082901b91505b6000601082901c1115610c7357601081901c9050600882901b91505b6000600882901c1115610c8f57600881901c9050600482901b91505b6000600482901c1115610cab57600481901c9050600282901b91505b6000600282901c1115610cc057600182901b91505b6001828581610cd257610cd1611057565b5b048301901c91506001828581610ceb57610cea611057565b5b048301901c91506001828581610d0457610d03611057565b5b048301901c91506001828581610d1d57610d1c611057565b5b048301901c91506001828581610d3657610d35611057565b5b048301901c91506001828581610d4f57610d4e611057565b5b048301901c91506001828581610d6857610d67611057565b5b048301901c9150610d8982838681610d8357610d82611057565b5b04610d93565b925050505b919050565b6000818310610da25781610da4565b825b905092915050565b600080fd5b6000819050919050565b610dc481610db1565b8114610dcf57600080fd5b50565b600081359050610de181610dbb565b92915050565b600060208284031215610dfd57610dfc610dac565b5b6000610e0b84828501610dd2565b91505092915050565b610e1d81610db1565b82525050565b6000602082019050610e386000830184610e14565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6982610e3e565b9050919050565b610e7981610e5e565b8114610e8457600080fd5b50565b600081359050610e9681610e70565b92915050565b60008060408385031215610eb357610eb2610dac565b5b6000610ec185828601610e87565b9250506020610ed285828601610dd2565b9150509250929050565b610ee581610e5e565b82525050565b6000602082019050610f006000830184610edc565b92915050565b600082825260208201905092915050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000610f4d600e83610f06565b9150610f5882610f17565b602082019050919050565b60006020820190508181036000830152610f7c81610f40565b9050919050565b7f5468652065746820616d6f756e7420737570706c696564206d7573742062652060008201527f67726561746572207468616e2030000000000000000000000000000000000000602082015250565b6000610fdf602e83610f06565b9150610fea82610f83565b604082019050919050565b6000602082019050818103600083015261100e81610fd2565b9050919050565b60008151905061102481610dbb565b92915050565b6000602082840312156110405761103f610dac565b5b600061104e84828501611015565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110c082610db1565b91506110cb83610db1565b9250826110db576110da611057565b5b828204905092915050565b60006110f182610db1565b91506110fc83610db1565b925082820390508181111561111457611113611086565b5b92915050565b600060408201905061112f6000830185610edc565b61113c6020830184610e14565b9392505050565b60008115159050919050565b61115881611143565b811461116357600080fd5b50565b6000815190506111758161114f565b92915050565b60006020828403121561119157611190610dac565b5b600061119f84828501611166565b91505092915050565b60006040820190506111bd6000830185610edc565b6111ca6020830184610edc565b9392505050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6000611207601583610f06565b9150611212826111d1565b602082019050919050565b60006020820190508181036000830152611236816111fa565b9050919050565b60006060820190506112526000830186610edc565b61125f6020830185610edc565b61126c6040830184610e14565b949350505050565b600081905092915050565b50565b600061128f600083611274565b915061129a8261127f565b600082019050919050565b60006112b082611282565b9150819050919050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b60006112f0600f83610f06565b91506112fb826112ba565b602082019050919050565b6000602082019050818103600083015261131f816112e3565b9050919050565b7f4c69717569646974792070726f76696465642073686f756c642062652067726560008201527f61746572207468616e2031204554480000000000000000000000000000000000602082015250565b6000611382602f83610f06565b915061138d82611326565b604082019050919050565b600060208201905081810360008301526113b181611375565b9050919050565b60006113c382610db1565b91506113ce83610db1565b92508282026113dc81610db1565b915082820484148315176113f3576113f2611086565b5b5092915050565b7f496e76616c696420616d6f756e74206f66207368617265730000000000000000600082015250565b6000611430601883610f06565b915061143b826113fa565b602082019050919050565b6000602082019050818103600083015261145f81611423565b9050919050565b7f506c6561736520617070726f76652074686520636f6e747261637420746f206460008201527f6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6560208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b60006114e8604183610f06565b91506114f382611466565b606082019050919050565b60006020820190508181036000830152611517816114db565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611554600f83610f06565b915061155f8261151e565b602082019050919050565b6000602082019050818103600083015261158381611547565b905091905056fea2646970667358221220ffc6312b5dadb84e6badcadf73e0880ee89517abd26107191ec3d6ce94f1c1cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEC3FA17 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xFF9B3758 EQ PUSH2 0x155 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x1AA5C70E EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8E3073A6 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST STOP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST DUP4 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CB SWAP3 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST LT ISZERO PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x444 SWAP1 PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST SELFBALANCE PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x612 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP SELFBALANCE DUP2 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x82C PUSH1 0x1 SLOAD PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x849 SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BE SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x927 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP3 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST LT ISZERO PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF2 SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD9 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xBF8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC1F JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC3B JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC57 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC73 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC8F JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCEB JUMPI PUSH2 0xCEA PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xD89 DUP3 DUP4 DUP7 DUP2 PUSH2 0xD83 JUMPI PUSH2 0xD82 PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DIV PUSH2 0xD93 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xDA2 JUMPI DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xDB1 JUMP JUMPDEST DUP2 EQ PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE1 DUP2 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xDFC PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE0B DUP5 DUP3 DUP6 ADD PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1D DUP2 PUSH2 0xDB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE69 DUP3 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE79 DUP2 PUSH2 0xE5E JUMP JUMPDEST DUP2 EQ PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE96 DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB2 PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC1 DUP6 DUP3 DUP7 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED2 DUP6 DUP3 DUP7 ADD PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0xE5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF00 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4D PUSH1 0xE DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0xF58 DUP3 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7C DUP2 PUSH2 0xF40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652065746820616D6F756E7420737570706C696564206D75737420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDF PUSH1 0x2E DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0xFEA DUP3 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100E DUP2 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1024 DUP2 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1040 JUMPI PUSH2 0x103F PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104E DUP5 DUP3 DUP6 ADD PUSH2 0x1015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C0 DUP3 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CB DUP4 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10DB JUMPI PUSH2 0x10DA PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F1 DUP3 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FC DUP4 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x1086 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x112F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x113C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1158 DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP2 EQ PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1175 DUP2 PUSH2 0x114F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0xDAC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119F DUP5 DUP3 DUP6 ADD PUSH2 0x1166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x11CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 PUSH1 0x15 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1212 DUP3 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1252 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x125F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0x126C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128F PUSH1 0x0 DUP4 PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP PUSH2 0x129A DUP3 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 DUP3 PUSH2 0x1282 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F0 PUSH1 0xF DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FB DUP3 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131F DUP2 PUSH2 0x12E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C69717569646974792070726F76696465642073686F756C6420626520677265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2031204554480000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 PUSH1 0x2F DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B1 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C3 DUP3 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x13CE DUP4 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13DC DUP2 PUSH2 0xDB1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x13F3 JUMPI PUSH2 0x13F2 PUSH2 0x1086 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74206F66207368617265730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1430 PUSH1 0x18 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x143B DUP3 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145F DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520617070726F76652074686520636F6E747261637420746F2064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E8 PUSH1 0x41 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F3 DUP3 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1517 DUP2 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 PUSH1 0xF DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP2 POP PUSH2 0x155F DUP3 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1583 DUP2 PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC6 BALANCE 0x2B 0x5D 0xAD 0xB8 0x4E PUSH12 0xADCADF73E0880EE89517ABD2 PUSH2 0x719 0x1E 0xC3 0xD6 0xCE SWAP5 CALL 0xC1 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "581:3360:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2617:459;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;862:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:509;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3082:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1049:484;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;698:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1539:557;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2617:459;2699:10;2686:9;:23;2678:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2758:1;2746:9;:13;2738:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2820:22;2852:12;;;;;;;;;;;2845:30;;;2884:4;2845:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2820:70;;2900:22;2925:21;2900:46;;2956:14;2996;2990:5;;:20;;;;:::i;:::-;2973:14;:37;;;;:::i;:::-;2956:54;;3027:12;;;;;;;;;;3020:29;;;3050:10;3062:6;3020:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2668:408;;;2617:459;:::o;862:20::-;;;;:::o;2102:509::-;2224:10;2170:12;;;;;;;;;;2163:30;;;2194:10;2214:4;2163:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:71;;2155:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;2277:12;;;;;;;;;;2270:33;;;2304:10;2324:4;2331:10;2270:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2352:19;2381:12;;;;;;;;;;;2374:30;;;2413:4;2374:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2352:67;;2429:14;2476:11;2470:5;;:17;;;;:::i;:::-;2446:21;:41;;;;:::i;:::-;2429:58;;2498:12;2524:10;2516:24;;2548:6;2516:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:62;;;2577:7;2569:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2145:466;;;2102:509;:::o;3082:119::-;761:42;3154:27;;;3182:2;3186:7;3154:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3082:119;;:::o;1049:484::-;839:17;1127:7;:21;;1119:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1295:12;;;;;;;;;;1288:33;;;1322:10;1342:4;1349:7;1288:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1385:21;1375:7;:31;;;;:::i;:::-;1367:5;:39;;;;761:42;1416:27;;;1444:10;1456:16;1466:5;;1456:9;:16::i;:::-;1416:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1488:38;1506:10;1518:7;1488:38;;;;;;;:::i;:::-;;;;;;;;1049:484;:::o;698:27::-;;;;;;;;;;;;:::o;1539:557::-;1625:1;1609:13;:17;1601:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:13;761:42;1673:28;;;1702:10;1722:4;1673:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;1665:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;761:42;1826:31;;;1858:10;1878:4;1885:13;1826:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1916:12;;;;;;;;;;1909:29;;;1939:10;1951:13;1909:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1976:12;2002:10;1994:24;;2026:13;1994:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:69;;;2062:7;2054:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1591:505;1539:557;:::o;6281:2206:0:-;6329:7;6357:1;6352;:6;6348:45;;6381:1;6374:8;;;;6348:45;7058:14;7075:1;7058:18;;7086:9;7098:1;7086:13;;7124:1;7118:3;7113:1;:8;;:12;7109:79;;;7147:3;7141:9;;;;;7175:2;7164:13;;;;;7109:79;7211:1;7206:2;7201:1;:7;;:11;7197:77;;;7234:2;7228:8;;;;;7261:2;7250:13;;;;;7197:77;7297:1;7292:2;7287:1;:7;;:11;7283:77;;;7320:2;7314:8;;;;;7347:2;7336:13;;;;;7283:77;7383:1;7378:2;7373:1;:7;;:11;7369:76;;;7406:2;7400:8;;;;;7433:1;7422:12;;;;;7369:76;7467:1;7463;7458;:6;;:10;7454:74;;;7490:1;7484:7;;;;;7516:1;7505:12;;;;;7454:74;7550:1;7546;7541;:6;;:10;7537:74;;;7573:1;7567:7;;;;;7599:1;7588:12;;;;;7537:74;7633:1;7629;7624;:6;;:10;7620:53;;;7661:1;7650:12;;;;;7620:53;8131:1;8120:6;8116:1;:10;;;;;:::i;:::-;;;8107:6;:19;8106:26;;8097:35;;8180:1;8169:6;8165:1;:10;;;;;:::i;:::-;;;8156:6;:19;8155:26;;8146:35;;8229:1;8218:6;8214:1;:10;;;;;:::i;:::-;;;8205:6;:19;8204:26;;8195:35;;8278:1;8267:6;8263:1;:10;;;;;:::i;:::-;;;8254:6;:19;8253:26;;8244:35;;8327:1;8316:6;8312:1;:10;;;;;:::i;:::-;;;8303:6;:19;8302:26;;8293:35;;8376:1;8365:6;8361:1;:10;;;;;:::i;:::-;;;8352:6;:19;8351:26;;8342:35;;8425:1;8414:6;8410:1;:10;;;;;:::i;:::-;;;8401:6;:19;8400:26;;8391:35;;8447:23;8451:6;8463;8459:1;:10;;;;;:::i;:::-;;;8447:3;:23::i;:::-;8440:30;;;;6281:2206;;;;:::o;589:104::-;647:7;677:1;673;:5;:13;;685:1;673:13;;;681:1;673:13;666:20;;589:104;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:169::-;2800:11;2834:6;2829:3;2822:19;2874:4;2869:3;2865:14;2850:29;;2716:169;;;;:::o;2891:164::-;3031:16;3027:1;3019:6;3015:14;3008:40;2891:164;:::o;3061:366::-;3203:3;3224:67;3288:2;3283:3;3224:67;:::i;:::-;3217:74;;3300:93;3389:3;3300:93;:::i;:::-;3418:2;3413:3;3409:12;3402:19;;3061:366;;;:::o;3433:419::-;3599:4;3637:2;3626:9;3622:18;3614:26;;3686:9;3680:4;3676:20;3672:1;3661:9;3657:17;3650:47;3714:131;3840:4;3714:131;:::i;:::-;3706:139;;3433:419;;;:::o;3858:233::-;3998:34;3994:1;3986:6;3982:14;3975:58;4067:16;4062:2;4054:6;4050:15;4043:41;3858:233;:::o;4097:366::-;4239:3;4260:67;4324:2;4319:3;4260:67;:::i;:::-;4253:74;;4336:93;4425:3;4336:93;:::i;:::-;4454:2;4449:3;4445:12;4438:19;;4097:366;;;:::o;4469:419::-;4635:4;4673:2;4662:9;4658:18;4650:26;;4722:9;4716:4;4712:20;4708:1;4697:9;4693:17;4686:47;4750:131;4876:4;4750:131;:::i;:::-;4742:139;;4469:419;;;:::o;4894:143::-;4951:5;4982:6;4976:13;4967:22;;4998:33;5025:5;4998:33;:::i;:::-;4894:143;;;;:::o;5043:351::-;5113:6;5162:2;5150:9;5141:7;5137:23;5133:32;5130:119;;;5168:79;;:::i;:::-;5130:119;5288:1;5313:64;5369:7;5360:6;5349:9;5345:22;5313:64;:::i;:::-;5303:74;;5259:128;5043:351;;;;:::o;5400:180::-;5448:77;5445:1;5438:88;5545:4;5542:1;5535:15;5569:4;5566:1;5559:15;5586:180;5634:77;5631:1;5624:88;5731:4;5728:1;5721:15;5755:4;5752:1;5745:15;5772:185;5812:1;5829:20;5847:1;5829:20;:::i;:::-;5824:25;;5863:20;5881:1;5863:20;:::i;:::-;5858:25;;5902:1;5892:35;;5907:18;;:::i;:::-;5892:35;5949:1;5946;5942:9;5937:14;;5772:185;;;;:::o;5963:194::-;6003:4;6023:20;6041:1;6023:20;:::i;:::-;6018:25;;6057:20;6075:1;6057:20;:::i;:::-;6052:25;;6101:1;6098;6094:9;6086:17;;6125:1;6119:4;6116:11;6113:37;;;6130:18;;:::i;:::-;6113:37;5963:194;;;;:::o;6163:332::-;6284:4;6322:2;6311:9;6307:18;6299:26;;6335:71;6403:1;6392:9;6388:17;6379:6;6335:71;:::i;:::-;6416:72;6484:2;6473:9;6469:18;6460:6;6416:72;:::i;:::-;6163:332;;;;;:::o;6501:90::-;6535:7;6578:5;6571:13;6564:21;6553:32;;6501:90;;;:::o;6597:116::-;6667:21;6682:5;6667:21;:::i;:::-;6660:5;6657:32;6647:60;;6703:1;6700;6693:12;6647:60;6597:116;:::o;6719:137::-;6773:5;6804:6;6798:13;6789:22;;6820:30;6844:5;6820:30;:::i;:::-;6719:137;;;;:::o;6862:345::-;6929:6;6978:2;6966:9;6957:7;6953:23;6949:32;6946:119;;;6984:79;;:::i;:::-;6946:119;7104:1;7129:61;7182:7;7173:6;7162:9;7158:22;7129:61;:::i;:::-;7119:71;;7075:125;6862:345;;;;:::o;7213:332::-;7334:4;7372:2;7361:9;7357:18;7349:26;;7385:71;7453:1;7442:9;7438:17;7429:6;7385:71;:::i;:::-;7466:72;7534:2;7523:9;7519:18;7510:6;7466:72;:::i;:::-;7213:332;;;;;:::o;7551:171::-;7691:23;7687:1;7679:6;7675:14;7668:47;7551:171;:::o;7728:366::-;7870:3;7891:67;7955:2;7950:3;7891:67;:::i;:::-;7884:74;;7967:93;8056:3;7967:93;:::i;:::-;8085:2;8080:3;8076:12;8069:19;;7728:366;;;:::o;8100:419::-;8266:4;8304:2;8293:9;8289:18;8281:26;;8353:9;8347:4;8343:20;8339:1;8328:9;8324:17;8317:47;8381:131;8507:4;8381:131;:::i;:::-;8373:139;;8100:419;;;:::o;8525:442::-;8674:4;8712:2;8701:9;8697:18;8689:26;;8725:71;8793:1;8782:9;8778:17;8769:6;8725:71;:::i;:::-;8806:72;8874:2;8863:9;8859:18;8850:6;8806:72;:::i;:::-;8888;8956:2;8945:9;8941:18;8932:6;8888:72;:::i;:::-;8525:442;;;;;;:::o;8973:147::-;9074:11;9111:3;9096:18;;8973:147;;;;:::o;9126:114::-;;:::o;9246:398::-;9405:3;9426:83;9507:1;9502:3;9426:83;:::i;:::-;9419:90;;9518:93;9607:3;9518:93;:::i;:::-;9636:1;9631:3;9627:11;9620:18;;9246:398;;;:::o;9650:379::-;9834:3;9856:147;9999:3;9856:147;:::i;:::-;9849:154;;10020:3;10013:10;;9650:379;;;:::o;10035:165::-;10175:17;10171:1;10163:6;10159:14;10152:41;10035:165;:::o;10206:366::-;10348:3;10369:67;10433:2;10428:3;10369:67;:::i;:::-;10362:74;;10445:93;10534:3;10445:93;:::i;:::-;10563:2;10558:3;10554:12;10547:19;;10206:366;;;:::o;10578:419::-;10744:4;10782:2;10771:9;10767:18;10759:26;;10831:9;10825:4;10821:20;10817:1;10806:9;10802:17;10795:47;10859:131;10985:4;10859:131;:::i;:::-;10851:139;;10578:419;;;:::o;11003:234::-;11143:34;11139:1;11131:6;11127:14;11120:58;11212:17;11207:2;11199:6;11195:15;11188:42;11003:234;:::o;11243:366::-;11385:3;11406:67;11470:2;11465:3;11406:67;:::i;:::-;11399:74;;11482:93;11571:3;11482:93;:::i;:::-;11600:2;11595:3;11591:12;11584:19;;11243:366;;;:::o;11615:419::-;11781:4;11819:2;11808:9;11804:18;11796:26;;11868:9;11862:4;11858:20;11854:1;11843:9;11839:17;11832:47;11896:131;12022:4;11896:131;:::i;:::-;11888:139;;11615:419;;;:::o;12040:410::-;12080:7;12103:20;12121:1;12103:20;:::i;:::-;12098:25;;12137:20;12155:1;12137:20;:::i;:::-;12132:25;;12192:1;12189;12185:9;12214:30;12232:11;12214:30;:::i;:::-;12203:41;;12393:1;12384:7;12380:15;12377:1;12374:22;12354:1;12347:9;12327:83;12304:139;;12423:18;;:::i;:::-;12304:139;12088:362;12040:410;;;;:::o;12456:174::-;12596:26;12592:1;12584:6;12580:14;12573:50;12456:174;:::o;12636:366::-;12778:3;12799:67;12863:2;12858:3;12799:67;:::i;:::-;12792:74;;12875:93;12964:3;12875:93;:::i;:::-;12993:2;12988:3;12984:12;12977:19;;12636:366;;;:::o;13008:419::-;13174:4;13212:2;13201:9;13197:18;13189:26;;13261:9;13255:4;13251:20;13247:1;13236:9;13232:17;13225:47;13289:131;13415:4;13289:131;:::i;:::-;13281:139;;13008:419;;;:::o;13433:289::-;13573:34;13569:1;13561:6;13557:14;13550:58;13642:34;13637:2;13629:6;13625:15;13618:59;13711:3;13706:2;13698:6;13694:15;13687:28;13433:289;:::o;13728:366::-;13870:3;13891:67;13955:2;13950:3;13891:67;:::i;:::-;13884:74;;13967:93;14056:3;13967:93;:::i;:::-;14085:2;14080:3;14076:12;14069:19;;13728:366;;;:::o;14100:419::-;14266:4;14304:2;14293:9;14289:18;14281:26;;14353:9;14347:4;14343:20;14339:1;14328:9;14324:17;14317:47;14381:131;14507:4;14381:131;:::i;:::-;14373:139;;14100:419;;;:::o;14525:165::-;14665:17;14661:1;14653:6;14649:14;14642:41;14525:165;:::o;14696:366::-;14838:3;14859:67;14923:2;14918:3;14859:67;:::i;:::-;14852:74;;14935:93;15024:3;14935:93;:::i;:::-;15053:2;15048:3;15044:12;15037:19;;14696:366;;;:::o;15068:419::-;15234:4;15272:2;15261:9;15257:18;15249:26;;15321:9;15315:4;15311:20;15307:1;15296:9;15292:17;15285:47;15349:131;15475:4;15349:131;:::i;:::-;15341:139;;15068:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1113600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getDAI(uint256)": "infinite",
								"getEth(uint256)": "infinite",
								"kLast()": "2452",
								"provideLiquidity(uint256)": "infinite",
								"reedemShares(uint256)": "infinite",
								"reserveToken()": "2555",
								"transferTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 581,
									"end": 3941,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 889,
									"end": 968,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 889,
									"end": 968,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 889,
									"end": 968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 889,
									"end": 968,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 889,
									"end": 968,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 968,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 889,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 948,
									"end": 961,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 933,
									"end": 961,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 933,
									"end": 961,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 933,
									"end": 961,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 933,
									"end": 961,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 889,
									"end": 968,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 3941,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffc6312b5dadb84e6badcadf73e0880ee89517abd26107191ec3d6ce94f1c1cd64736f6c63430008110033",
									".code": [
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "BEC3FA17"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "BEC3FA17"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "EB521A4C"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "F4325D67"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "FF9B3758"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "1AA5C70E"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "7464FC3D"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "8E3073A6"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 3941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2617,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2617,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 862,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 862,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2102,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2102,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3082,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3082,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1049,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1049,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 698,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 698,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1539,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1539,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2709,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2678,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2678,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2759,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2738,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2845,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2845,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2845,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 2970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 2995,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2990,
											"end": 2995,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2990,
											"end": 3010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2990,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3010,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2990,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2987,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2973,
											"end": 3010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2973,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 3010,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2973,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3050,
											"end": 3060,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3068,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3020,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3020,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 3076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 3076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 3076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 3076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2194,
											"end": 2204,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2163,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2163,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2163,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2155,
											"end": 2260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2155,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2304,
											"end": 2314,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2270,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2270,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2404,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2404,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2404,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2413,
											"end": 2417,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2374,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2374,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2374,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2470,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2467,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2446,
											"end": 2487,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2446,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2446,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2534,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2516,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2569,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 761,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3181,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3154,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3154,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3154,
											"end": 3194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 839,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1127,
											"end": 1134,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1148,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1148,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1119,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1119,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1288,
											"end": 1321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1346,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1356,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1288,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1288,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1406,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1375,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 1406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1406,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 761,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1416,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1416,
											"end": 1443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1443,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1454,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1456,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1472,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1456,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1416,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1416,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1506,
											"end": 1516,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1488,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1526,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1601,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1601,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 761,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1673,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1701,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1673,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1673,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1673,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1745,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1745,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1665,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1665,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 761,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1858,
											"end": 1868,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1882,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1898,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1826,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1826,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1939,
											"end": 1949,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1909,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1909,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2012,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2018,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2018,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2039,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1994,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2054,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 2096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8116,
											"end": 8126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8165,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8214,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8263,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8312,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8361,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8410,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8459,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8447,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2878,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3055,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2891,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3008,
											"end": 3048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3224,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3300,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3420,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3696,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3714,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4091,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3858,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4032,
											"name": "PUSH",
											"source": 3,
											"value": "5468652065746820616D6F756E7420737570706C696564206D75737420626520"
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3982,
											"end": 3996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 4033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "67726561746572207468616E2030000000000000000000000000000000000000"
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4084,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4463,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4097,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4239,
											"end": 4242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 3,
											"value": "2E"
										},
										{
											"begin": 4319,
											"end": 4322,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4260,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4260,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4260,
											"end": 4327,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4260,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4327,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4425,
											"end": 4428,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4336,
											"end": 4429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4429,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4336,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4888,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4469,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4662,
											"end": 4671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4716,
											"end": 4720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4712,
											"end": 4732,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4693,
											"end": 4710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4876,
											"end": 4880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4750,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4881,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4750,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4888,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4888,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5037,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4894,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4951,
											"end": 4956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 4989,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5025,
											"end": 5030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4998,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5031,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 4998,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5037,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5037,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5394,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5043,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5159,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5141,
											"end": 5148,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5160,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5133,
											"end": 5165,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5249,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5130,
											"end": 5249,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5168,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5168,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5247,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5168,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5249,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5130,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5369,
											"end": 5376,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5313,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5313,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5394,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5580,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5400,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5525,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5445,
											"end": 5446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5438,
											"end": 5526,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5549,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5573,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5574,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5586,
											"end": 5766,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5586,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5634,
											"end": 5711,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5631,
											"end": 5632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5624,
											"end": 5712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5728,
											"end": 5729,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5721,
											"end": 5736,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5772,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5812,
											"end": 5813,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5829,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5829,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5881,
											"end": 5882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5863,
											"end": 5883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 5883,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5863,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5883,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5892,
											"end": 5927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5907,
											"end": 5925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5927,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5892,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5949,
											"end": 5950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5946,
											"end": 5947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5937,
											"end": 5951,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5937,
											"end": 5951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6157,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5963,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6003,
											"end": 6007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6041,
											"end": 6042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6023,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6023,
											"end": 6043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6023,
											"end": 6043,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6023,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6043,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6075,
											"end": 6076,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6057,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6077,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6125,
											"end": 6126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6119,
											"end": 6123,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6116,
											"end": 6127,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6150,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6113,
											"end": 6150,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6130,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6150,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6113,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6157,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6284,
											"end": 6288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6403,
											"end": 6404,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6388,
											"end": 6405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6335,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6416,
											"end": 6488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6416,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6163,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6535,
											"end": 6542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6584,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6564,
											"end": 6585,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6713,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6597,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6682,
											"end": 6687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6667,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6660,
											"end": 6665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6689,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6704,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6705,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6647,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6773,
											"end": 6778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6798,
											"end": 6811,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6844,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6820,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6966,
											"end": 6975,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 6964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6953,
											"end": 6976,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6981,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6984,
											"end": 7063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7182,
											"end": 7189,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7171,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7129,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7129,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7190,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7075,
											"end": 7200,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7213,
											"end": 7545,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7213,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7334,
											"end": 7338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7374,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7349,
											"end": 7375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7349,
											"end": 7375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7385,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7453,
											"end": 7454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7442,
											"end": 7451,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7385,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7385,
											"end": 7456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7385,
											"end": 7456,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7385,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7510,
											"end": 7516,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7466,
											"end": 7538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7538,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7466,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7213,
											"end": 7545,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7213,
											"end": 7545,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7213,
											"end": 7545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7213,
											"end": 7545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7213,
											"end": 7545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7213,
											"end": 7545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7722,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7551,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7714,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 7687,
											"end": 7688,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7675,
											"end": 7689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7668,
											"end": 7715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7870,
											"end": 7873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 7955,
											"end": 7957,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7950,
											"end": 7953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7891,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7958,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7958,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 8056,
											"end": 8059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7967,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8076,
											"end": 8088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8266,
											"end": 8270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8304,
											"end": 8306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8289,
											"end": 8307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8353,
											"end": 8362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8343,
											"end": 8363,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8337,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8324,
											"end": 8341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8364,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8507,
											"end": 8511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 8381,
											"end": 8512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8714,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8701,
											"end": 8710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8697,
											"end": 8715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8689,
											"end": 8715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8689,
											"end": 8715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8725,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8793,
											"end": 8794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8791,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8769,
											"end": 8775,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8725,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8725,
											"end": 8796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8725,
											"end": 8796,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8725,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8806,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8874,
											"end": 8876,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8863,
											"end": 8872,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8850,
											"end": 8856,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8806,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8806,
											"end": 8878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8806,
											"end": 8878,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8806,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8888,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8956,
											"end": 8958,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 8954,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8941,
											"end": 8959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8932,
											"end": 8938,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8888,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 8888,
											"end": 8960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8888,
											"end": 8960,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8888,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 9120,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8973,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9074,
											"end": 9085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9111,
											"end": 9114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 9120,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 9120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 9120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 9120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 9120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9240,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9126,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9644,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9246,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9507,
											"end": 9508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9502,
											"end": 9505,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9426,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 9426,
											"end": 9509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9426,
											"end": 9509,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9426,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9419,
											"end": 9509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9419,
											"end": 9509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9607,
											"end": 9610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9518,
											"end": 9611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9611,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9518,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9634,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9627,
											"end": 9638,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9644,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9650,
											"end": 10029,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 9650,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9856,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9856,
											"end": 10003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9856,
											"end": 10003,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9856,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9849,
											"end": 10003,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9849,
											"end": 10003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10020,
											"end": 10023,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9650,
											"end": 10029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9650,
											"end": 10029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9650,
											"end": 10029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9650,
											"end": 10029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10035,
											"end": 10200,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 10035,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10175,
											"end": 10192,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E73666572204661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 10171,
											"end": 10172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10152,
											"end": 10193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10035,
											"end": 10200,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10035,
											"end": 10200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10572,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 10206,
											"end": 10572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10348,
											"end": 10351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10369,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 10428,
											"end": 10431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10369,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 10369,
											"end": 10436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10369,
											"end": 10436,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10369,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10362,
											"end": 10436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10362,
											"end": 10436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10534,
											"end": 10537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 10445,
											"end": 10538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10538,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10445,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10558,
											"end": 10561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10554,
											"end": 10566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10547,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10547,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10997,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10578,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10744,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10784,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10771,
											"end": 10780,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10759,
											"end": 10785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10759,
											"end": 10785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10831,
											"end": 10840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 10829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10821,
											"end": 10841,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10817,
											"end": 10818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 10819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10795,
											"end": 10842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10985,
											"end": 10989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 10859,
											"end": 10990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10990,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10859,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10851,
											"end": 10990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10851,
											"end": 10990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11003,
											"end": 11237,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 11003,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11143,
											"end": 11177,
											"name": "PUSH",
											"source": 3,
											"value": "4C69717569646974792070726F76696465642073686F756C6420626520677265"
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11131,
											"end": 11137,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11127,
											"end": 11141,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11120,
											"end": 11178,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11212,
											"end": 11229,
											"name": "PUSH",
											"source": 3,
											"value": "61746572207468616E2031204554480000000000000000000000000000000000"
										},
										{
											"begin": 11207,
											"end": 11209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11199,
											"end": 11205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11195,
											"end": 11210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11188,
											"end": 11230,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11003,
											"end": 11237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11003,
											"end": 11237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11609,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 11243,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11385,
											"end": 11388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11406,
											"end": 11473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 11470,
											"end": 11472,
											"name": "PUSH",
											"source": 3,
											"value": "2F"
										},
										{
											"begin": 11465,
											"end": 11468,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11406,
											"end": 11473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 11406,
											"end": 11473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11406,
											"end": 11473,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 11406,
											"end": 11473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11399,
											"end": 11473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11399,
											"end": 11473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11482,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 11571,
											"end": 11574,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11482,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 11482,
											"end": 11575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11482,
											"end": 11575,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 11482,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11595,
											"end": 11598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11591,
											"end": 11603,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11584,
											"end": 11603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11584,
											"end": 11603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 12034,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 11615,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11781,
											"end": 11785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11819,
											"end": 11821,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11808,
											"end": 11817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11804,
											"end": 11822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11796,
											"end": 11822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11796,
											"end": 11822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11868,
											"end": 11877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11858,
											"end": 11878,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11854,
											"end": 11855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11843,
											"end": 11852,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11839,
											"end": 11856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11832,
											"end": 11879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11896,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 12022,
											"end": 12026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11896,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 11896,
											"end": 12027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11896,
											"end": 12027,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11896,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11888,
											"end": 12027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11888,
											"end": 12027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 12034,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 12034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 12034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 12034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12040,
											"end": 12450,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 12040,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12080,
											"end": 12087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 12121,
											"end": 12122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 12103,
											"end": 12123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12123,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 12155,
											"end": 12156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 12137,
											"end": 12157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12157,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 12137,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12132,
											"end": 12157,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12132,
											"end": 12157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12190,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 12232,
											"end": 12243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 12214,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 12244,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 12214,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12203,
											"end": 12244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12203,
											"end": 12244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12393,
											"end": 12394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12384,
											"end": 12391,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12380,
											"end": 12395,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12377,
											"end": 12378,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12374,
											"end": 12396,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12354,
											"end": 12355,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12347,
											"end": 12356,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12327,
											"end": 12410,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 12304,
											"end": 12443,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 12423,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12443,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 12304,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12088,
											"end": 12450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12040,
											"end": 12450,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12040,
											"end": 12450,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12040,
											"end": 12450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12040,
											"end": 12450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12040,
											"end": 12450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12456,
											"end": 12630,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 12456,
											"end": 12630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12596,
											"end": 12622,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420616D6F756E74206F66207368617265730000000000000000"
										},
										{
											"begin": 12592,
											"end": 12593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12584,
											"end": 12590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12580,
											"end": 12594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12573,
											"end": 12623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12456,
											"end": 12630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12456,
											"end": 12630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12636,
											"end": 13002,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 12636,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12778,
											"end": 12781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12799,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 12863,
											"end": 12865,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 12858,
											"end": 12861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12799,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 12799,
											"end": 12866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12799,
											"end": 12866,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 12799,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 12866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 12866,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12875,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 12964,
											"end": 12967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12875,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 12875,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12875,
											"end": 12968,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 12875,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12993,
											"end": 12995,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12988,
											"end": 12991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12984,
											"end": 12996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12977,
											"end": 12996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12977,
											"end": 12996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12636,
											"end": 13002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12636,
											"end": 13002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12636,
											"end": 13002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12636,
											"end": 13002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13008,
											"end": 13427,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 13008,
											"end": 13427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13174,
											"end": 13178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13212,
											"end": 13214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13201,
											"end": 13210,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13197,
											"end": 13215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13189,
											"end": 13215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13189,
											"end": 13215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13261,
											"end": 13270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13255,
											"end": 13259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13251,
											"end": 13271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13247,
											"end": 13248,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13236,
											"end": 13245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13232,
											"end": 13249,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13225,
											"end": 13272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 13415,
											"end": 13419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 13289,
											"end": 13420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13420,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 13289,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13281,
											"end": 13420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13281,
											"end": 13420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13008,
											"end": 13427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13008,
											"end": 13427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13008,
											"end": 13427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13008,
											"end": 13427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13433,
											"end": 13722,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 13433,
											"end": 13722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13573,
											"end": 13607,
											"name": "PUSH",
											"source": 3,
											"value": "506C6561736520617070726F76652074686520636F6E747261637420746F2064"
										},
										{
											"begin": 13569,
											"end": 13570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13561,
											"end": 13567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13557,
											"end": 13571,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13550,
											"end": 13608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13676,
											"name": "PUSH",
											"source": 3,
											"value": "6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65"
										},
										{
											"begin": 13637,
											"end": 13639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13629,
											"end": 13635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13625,
											"end": 13640,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13618,
											"end": 13677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13711,
											"end": 13714,
											"name": "PUSH",
											"source": 3,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13706,
											"end": 13708,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13698,
											"end": 13704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13694,
											"end": 13709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 13715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13433,
											"end": 13722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13433,
											"end": 13722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 14094,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 13728,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13870,
											"end": 13873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13891,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 13955,
											"end": 13957,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 13950,
											"end": 13953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13891,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 13891,
											"end": 13958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13891,
											"end": 13958,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 13891,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13884,
											"end": 13958,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13884,
											"end": 13958,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13967,
											"end": 14060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 14056,
											"end": 14059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13967,
											"end": 14060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 13967,
											"end": 14060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13967,
											"end": 14060,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 13967,
											"end": 14060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14085,
											"end": 14087,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 14080,
											"end": 14083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14076,
											"end": 14088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14069,
											"end": 14088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14069,
											"end": 14088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 14094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 14094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 14094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 14094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14519,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 14100,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14266,
											"end": 14270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14304,
											"end": 14306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14293,
											"end": 14302,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14289,
											"end": 14307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14281,
											"end": 14307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14281,
											"end": 14307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14353,
											"end": 14362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14347,
											"end": 14351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14343,
											"end": 14363,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14339,
											"end": 14340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14337,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14324,
											"end": 14341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14317,
											"end": 14364,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14381,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 14507,
											"end": 14511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14381,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 14381,
											"end": 14512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14381,
											"end": 14512,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 14381,
											"end": 14512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14373,
											"end": 14512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14373,
											"end": 14512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14525,
											"end": 14690,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 14525,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14665,
											"end": 14682,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 14661,
											"end": 14662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14653,
											"end": 14659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14649,
											"end": 14663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14642,
											"end": 14683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14525,
											"end": 14690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14525,
											"end": 14690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14696,
											"end": 15062,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 14696,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14838,
											"end": 14841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14859,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 14923,
											"end": 14925,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 14918,
											"end": 14921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14859,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 14859,
											"end": 14926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14859,
											"end": 14926,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 14859,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14852,
											"end": 14926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14852,
											"end": 14926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14935,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 15024,
											"end": 15027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14935,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 14935,
											"end": 15028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14935,
											"end": 15028,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 14935,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15053,
											"end": 15055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15048,
											"end": 15051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15044,
											"end": 15056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15037,
											"end": 15056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15037,
											"end": 15056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14696,
											"end": 15062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14696,
											"end": 15062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14696,
											"end": 15062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14696,
											"end": 15062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15068,
											"end": 15487,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 15068,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15234,
											"end": 15238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15272,
											"end": 15274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15261,
											"end": 15270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15257,
											"end": 15275,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15321,
											"end": 15330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15315,
											"end": 15319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15311,
											"end": 15331,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15307,
											"end": 15308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15296,
											"end": 15305,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15285,
											"end": 15332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15349,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 15475,
											"end": 15479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15349,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 15349,
											"end": 15480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15349,
											"end": 15480,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 15349,
											"end": 15480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15341,
											"end": 15480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15341,
											"end": 15480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15068,
											"end": 15487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15068,
											"end": 15487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15068,
											"end": 15487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15068,
											"end": 15487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/LiquidityPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getDAI(uint256)": "1aa5c70e",
							"getEth(uint256)": "8e3073a6",
							"kLast()": "7464fc3d",
							"provideLiquidity(uint256)": "eb521a4c",
							"reedemShares(uint256)": "ff9b3758",
							"reserveToken()": "f4325d67",
							"transferTokens(address,uint256)": "bec3fa17"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getDAI\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_DAIAmount\",\"type\":\"uint256\"}],\"name\":\"getEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sharesAmount\",\"type\":\"uint256\"}],\"name\":\"reedemShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0x052efc11f45d12fc685b11266dcd31e5b4caa8372a35038320b876ebcbb78a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7814db35a15c8ba162ff013bd53ebef55cadfa67e955a1a4b681f00372fde9e5\",\"dweb:/ipfs/QmZGK74fExBgcUGp1u8By5Yx1PLmvJnfFByZ76hY1qzvwz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 587,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "reserveToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 595,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "kLast",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5960:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nameLocations": [
															"5817:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8732:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nameLocations": [
															"8612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 515,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 524,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 581,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 581,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 581,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 581,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 581,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 581,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2660:1"
				},
				"id": 1
			},
			"contracts/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						],
						"LiquidityPool": [
							889
						],
						"Math": [
							503
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "478:23:2"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 582,
							"src": "503:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 504,
							"src": "526:53:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889
							],
							"name": "LiquidityPool",
							"nameLocation": "590:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f4325d67",
									"id": 587,
									"mutability": "mutable",
									"name": "reserveToken",
									"nameLocation": "713:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "698:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 586,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 590,
									"mutability": "constant",
									"name": "ltrAddress",
									"nameLocation": "748:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "731:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833394442323037446666333431314634666162303438334434313933303638373343626331336439",
										"id": 589,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "761:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x39DB207Dff3411F4fab0483D419306873Cbc13d9"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 593,
									"mutability": "constant",
									"name": "MINIMUMETH",
									"nameLocation": "826:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "809:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 591,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030303030303030303030",
										"id": 592,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "839:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "10000000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7464fc3d",
									"id": 595,
									"mutability": "mutable",
									"name": "kLast",
									"nameLocation": "877:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "862:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "862:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "923:45:2",
										"statements": [
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 600,
														"name": "reserveToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "933:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 601,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "948:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "933:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "933:28:2"
											}
										]
									},
									"id": 605,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "909:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "901:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:23:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:2"
									},
									"scope": 889,
									"src": "889:79:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6",
									"id": 611,
									"name": "liquidityProvided",
									"nameLocation": "980:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "1006:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "998:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "1034:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1026:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:45:2"
									},
									"src": "974:69:2"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "1109:424:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "1127:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 618,
																"name": "MINIMUMETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1138:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1127:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69717569646974792070726f76696465642073686f756c642062652067726561746572207468616e203120455448",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1150:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
																"typeString": "literal_string \"Liquidity provided should be greater than 1 ETH\""
															},
															"value": "Liquidity provided should be greater than 1 ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
																"typeString": "literal_string \"Liquidity provided should be greater than 1 ETH\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "1119:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 627,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1322:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1326:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1322:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 631,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1342:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1334:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1334:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1334:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1349:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 624,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1295:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 623,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1288:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1288:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1309:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1288:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1288:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1288:69:2"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 636,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1367:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 637,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1375:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1393:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LiquidityPool_$889",
																			"typeString": "contract LiquidityPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LiquidityPool_$889",
																			"typeString": "contract LiquidityPool"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1385:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1385:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1385:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1399:7:2",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1385:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1375:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1367:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "1367:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 650,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1444:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1448:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1444:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 654,
																	"name": "kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "1466:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 652,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "1456:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$503_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1461:4:2",
																"memberName": "sqrt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 466,
																"src": "1456:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "1423:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 646,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1416:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1416:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1435:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1416:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "1416:57:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 659,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1506:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1510:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1506:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1518:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "1488:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "EmitStatement",
												"src": "1483:43:2"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "1058:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1083:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1075:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:17:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:0:2"
									},
									"scope": 889,
									"src": "1049:484:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "1591:505:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1609:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1625:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1609:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74206f6620736861726573",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																"typeString": "literal_string \"Invalid amount of shares\""
															},
															"value": "Invalid amount of shares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																"typeString": "literal_string \"Invalid amount of shares\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1601:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1601:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "1601:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 682,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1702:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1706:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1702:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 686,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1722:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPool_$889",
																					"typeString": "contract LiquidityPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPool_$889",
																					"typeString": "contract LiquidityPool"
																				}
																			],
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1714:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 684,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1714:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1714:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 679,
																				"name": "ltrAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "1680:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 678,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1673:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1673:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1692:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1673:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:55:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 689,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1732:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520617070726f76652074686520636f6e747261637420746f20646564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6574",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1747:67:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																"typeString": "literal_string \"Please approve the contract to deduct ltr tokens from your wallet\""
															},
															"value": "Please approve the contract to deduct ltr tokens from your wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																"typeString": "literal_string \"Please approve the contract to deduct ltr tokens from your wallet\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1665:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1665:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "1665:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 698,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1858:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1862:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1858:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 702,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1878:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1870:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 700,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1870:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1870:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "_sharesAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1885:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 695,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "1833:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 694,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1826:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1826:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1826:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "1826:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 711,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1939:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1943:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1939:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "_sharesAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1951:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 708,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1916:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 707,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1909:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1909:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1930:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1909:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1909:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "1909:56:2"
											},
											{
												"assignments": [
													717,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1981:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "1976:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 716,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 728,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2041:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 720,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2002:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2006:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2002:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1994:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1994:8:2",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1994:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2014:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1994:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 724,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "2026:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1994:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1994:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1975:69:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2062:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2071:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "2054:35:2"
											}
										]
									},
									"functionSelector": "ff9b3758",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reedemShares",
									"nameLocation": "1548:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "_sharesAmount",
												"nameLocation": "1569:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1561:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1560:23:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:0:2"
									},
									"scope": 889,
									"src": "1539:557:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "2145:466:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 745,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2194:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2198:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2194:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 749,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2214:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPool_$889",
																					"typeString": "contract LiquidityPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPool_$889",
																					"typeString": "contract LiquidityPool"
																				}
																			],
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2206:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 747,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2206:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2206:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 742,
																				"name": "reserveToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2170:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 741,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2163:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2163:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2184:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "2163:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2163:57:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 752,
																"name": "_DAIAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2224:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2163:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2236:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2155:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2155:105:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "2155:105:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 761,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2304:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2308:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2304:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 765,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2324:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2316:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 763,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2316:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2316:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "_DAIAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "2331:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 758,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2277:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 757,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2270:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2270:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2291:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2270:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2270:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "2270:72:2"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "2360:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "2352:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 778,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 773,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2381:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 772,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2374:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2374:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2395:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "2374:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2374:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:67:2"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "ethOut",
														"nameLocation": "2437:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "2429:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2429:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 786,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2454:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2446:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 784,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2446:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2446:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2460:7:2",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "2446:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 789,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "2470:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 790,
															"name": "totalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "2476:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2470:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2446:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2429:58:2"
											},
											{
												"assignments": [
													795,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "2498:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 806,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 798,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2524:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2528:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2524:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2516:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 796,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2516:8:2",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2516:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2536:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 802,
																"name": "ethOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "2548:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "2577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572204661696c6564",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2586:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															},
															"value": "Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2569:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2569:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "2569:35:2"
											}
										]
									},
									"functionSelector": "8e3073a6",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEth",
									"nameLocation": "2111:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "_DAIAmount",
												"nameLocation": "2126:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2118:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:20:2"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2145:0:2"
									},
									"scope": 889,
									"src": "2102:509:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "2668:408:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 819,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2686:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2690:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2686:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 821,
																"name": "_ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "2699:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2686:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2711:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2678:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2678:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "2678:50:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 827,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2746:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2746:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2746:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652065746820616d6f756e7420737570706c696564206d7573742062652067726561746572207468616e2030",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2761:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
																"typeString": "literal_string \"The eth amount supplied must be greater than 0\""
															},
															"value": "The eth amount supplied must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
																"typeString": "literal_string \"The eth amount supplied must be greater than 0\""
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "2738:72:2"
											},
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "totalDAISupply",
														"nameLocation": "2828:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "2820:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2820:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 842,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2884:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$889",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2876:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2876:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2876:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 837,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2852:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 836,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2845:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2845:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2866:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "2845:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2820:70:2"
											},
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "totalEthSupply",
														"nameLocation": "2908:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "2900:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 846,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 850,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2933:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LiquidityPool_$889",
																	"typeString": "contract LiquidityPool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_LiquidityPool_$889",
																	"typeString": "contract LiquidityPool"
																}
															],
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2925:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 848,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2925:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2925:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2939:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2925:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2900:46:2"
											},
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "DAIOut",
														"nameLocation": "2964:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "2956:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2956:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "totalDAISupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2973:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 857,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "2990:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 858,
															"name": "totalEthSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "2996:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2990:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2973:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2956:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 866,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3050:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3054:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3050:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "DAIOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3062:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 863,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "3027:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 862,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "3020:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3020:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3041:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "3020:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "3020:49:2"
											}
										]
									},
									"functionSelector": "1aa5c70e",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDAI",
									"nameLocation": "2626:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "_ethAmount",
												"nameLocation": "2641:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2633:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:2"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:2"
									},
									"scope": 889,
									"src": "2617:459:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "3144:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 883,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "3182:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "3186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 880,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "3161:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 879,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "3154:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3154:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3173:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "3154:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3154:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "3154:40:2"
											}
										]
									},
									"functionSelector": "bec3fa17",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "3091:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3114:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3106:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3105:29:2"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:2"
									},
									"scope": 889,
									"src": "3082:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 890,
							"src": "581:3360:2",
							"usedErrors": []
						}
					],
					"src": "478:3463:2"
				},
				"id": 2
			}
		}
	}
}