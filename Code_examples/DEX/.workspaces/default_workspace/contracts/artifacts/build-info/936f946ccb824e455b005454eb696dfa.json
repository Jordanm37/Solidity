{
	"id": "936f946ccb824e455b005454eb696dfa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityPool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\ncontract LiquidityPool {\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    IERC20 public token;\n    address public tokenAddress;\n\n    constructor(address _tokenAddress){\n        _tokenAddress = tokenAddress;\n    }\n\n\n    function provideLiquidity(uint256 _amount) external payable {\n        require(msg.value == _amount, \"The amount of ETH and tokens should be equal\");\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _amount);\n    }\n}\n\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityPool.sol\":241:738  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LiquidityPool.sol\":417:496  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LiquidityPool.sol\":477:489  tokenAddress */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LiquidityPool.sol\":461:489  _tokenAddress = tokenAddress */\n  swap1\n  pop\n    /* \"contracts/LiquidityPool.sol\":417:496  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/LiquidityPool.sol\":241:738  contract LiquidityPool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/LiquidityPool.sol\":241:738  contract LiquidityPool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityPool.sol\":241:738  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9d76ea58\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xeb521a4c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":383:410  address public tokenAddress */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":503:736  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_3:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/LiquidityPool.sol\":358:377  IERC20 public token */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":383:410  address public tokenAddress */\n    tag_7:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":503:736  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_13:\n        /* \"contracts/LiquidityPool.sol\":594:601  _amount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":581:590  msg.value */\n      callvalue\n        /* \"contracts/LiquidityPool.sol\":581:601  msg.value == _amount */\n      eq\n        /* \"contracts/LiquidityPool.sol\":573:650  require(msg.value == _amount, \"The amount of ETH and tokens should be equal\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/LiquidityPool.sol\":667:679  tokenAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":660:693  IERC20(tokenAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":694:704  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":714:718  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":721:728  _amount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":660:729  IERC20(tokenAddress).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      pop\n        /* \"contracts/LiquidityPool.sol\":503:736  function provideLiquidity(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":358:377  IERC20 public token */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_31:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_33\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_35:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_37\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:640   */\n    tag_29:\n        /* \"#utility.yul\":362:368   */\n      0x00\n        /* \"#utility.yul\":411:413   */\n      0x20\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":390:397   */\n      dup5\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:498   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":417:496   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":379:498   */\n    tag_40:\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":562:623   */\n      tag_43\n        /* \"#utility.yul\":615:622   */\n      dup5\n        /* \"#utility.yul\":606:612   */\n      dup3\n        /* \"#utility.yul\":595:604   */\n      dup6\n        /* \"#utility.yul\":591:613   */\n      add\n        /* \"#utility.yul\":562:623   */\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":552:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":508:633   */\n      pop\n        /* \"#utility.yul\":295:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:975   */\n    tag_12:\n        /* \"#utility.yul\":705:711   */\n      0x00\n        /* \"#utility.yul\":754:756   */\n      0x20\n        /* \"#utility.yul\":742:751   */\n      dup3\n        /* \"#utility.yul\":733:740   */\n      dup5\n        /* \"#utility.yul\":729:752   */\n      sub\n        /* \"#utility.yul\":725:757   */\n      slt\n        /* \"#utility.yul\":722:841   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":760:839   */\n      tag_46\n      tag_42\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":722:841   */\n    tag_45:\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":905:958   */\n      tag_47\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":905:958   */\n      tag_35\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":895:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":851:968   */\n      pop\n        /* \"#utility.yul\":646:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1099   */\n    tag_48:\n        /* \"#utility.yul\":1068:1092   */\n      tag_50\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1063:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1093   */\n      mstore\n        /* \"#utility.yul\":981:1099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1262   */\n    tag_52:\n        /* \"#utility.yul\":1205:1255   */\n      tag_54\n        /* \"#utility.yul\":1249:1254   */\n      dup2\n        /* \"#utility.yul\":1205:1255   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1256   */\n      mstore\n        /* \"#utility.yul\":1105:1262   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1268:1634   */\n    tag_56:\n        /* \"#utility.yul\":1410:1413   */\n      0x00\n        /* \"#utility.yul\":1431:1498   */\n      tag_58\n        /* \"#utility.yul\":1495:1497   */\n      0x2c\n        /* \"#utility.yul\":1490:1493   */\n      dup4\n        /* \"#utility.yul\":1431:1498   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1424:1498   */\n      swap2\n      pop\n        /* \"#utility.yul\":1507:1600   */\n      tag_60\n        /* \"#utility.yul\":1596:1599   */\n      dup3\n        /* \"#utility.yul\":1507:1600   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1625:1627   */\n      0x40\n        /* \"#utility.yul\":1620:1623   */\n      dup3\n        /* \"#utility.yul\":1616:1628   */\n      add\n        /* \"#utility.yul\":1609:1628   */\n      swap1\n      pop\n        /* \"#utility.yul\":1268:1634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1640:1758   */\n    tag_62:\n        /* \"#utility.yul\":1727:1751   */\n      tag_64\n        /* \"#utility.yul\":1745:1750   */\n      dup2\n        /* \"#utility.yul\":1727:1751   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1722:1725   */\n      dup3\n        /* \"#utility.yul\":1715:1752   */\n      mstore\n        /* \"#utility.yul\":1640:1758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:1986   */\n    tag_9:\n        /* \"#utility.yul\":1857:1861   */\n      0x00\n        /* \"#utility.yul\":1895:1897   */\n      0x20\n        /* \"#utility.yul\":1884:1893   */\n      dup3\n        /* \"#utility.yul\":1880:1898   */\n      add\n        /* \"#utility.yul\":1872:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1908:1979   */\n      tag_67\n        /* \"#utility.yul\":1976:1977   */\n      0x00\n        /* \"#utility.yul\":1965:1974   */\n      dup4\n        /* \"#utility.yul\":1961:1978   */\n      add\n        /* \"#utility.yul\":1952:1958   */\n      dup5\n        /* \"#utility.yul\":1908:1979   */\n      tag_48\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1764:1986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1992:2434   */\n    tag_24:\n        /* \"#utility.yul\":2141:2145   */\n      0x00\n        /* \"#utility.yul\":2179:2181   */\n      0x60\n        /* \"#utility.yul\":2168:2177   */\n      dup3\n        /* \"#utility.yul\":2164:2182   */\n      add\n        /* \"#utility.yul\":2156:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2192:2263   */\n      tag_69\n        /* \"#utility.yul\":2260:2261   */\n      0x00\n        /* \"#utility.yul\":2249:2258   */\n      dup4\n        /* \"#utility.yul\":2245:2262   */\n      add\n        /* \"#utility.yul\":2236:2242   */\n      dup7\n        /* \"#utility.yul\":2192:2263   */\n      tag_48\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2273:2345   */\n      tag_70\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup4\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2317:2323   */\n      dup6\n        /* \"#utility.yul\":2273:2345   */\n      tag_48\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2355:2427   */\n      tag_71\n        /* \"#utility.yul\":2423:2425   */\n      0x40\n        /* \"#utility.yul\":2412:2421   */\n      dup4\n        /* \"#utility.yul\":2408:2426   */\n      add\n        /* \"#utility.yul\":2399:2405   */\n      dup5\n        /* \"#utility.yul\":2355:2427   */\n      tag_62\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1992:2434   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2440:2688   */\n    tag_18:\n        /* \"#utility.yul\":2546:2550   */\n      0x00\n        /* \"#utility.yul\":2584:2586   */\n      0x20\n        /* \"#utility.yul\":2573:2582   */\n      dup3\n        /* \"#utility.yul\":2569:2587   */\n      add\n        /* \"#utility.yul\":2561:2587   */\n      swap1\n      pop\n        /* \"#utility.yul\":2597:2681   */\n      tag_73\n        /* \"#utility.yul\":2678:2679   */\n      0x00\n        /* \"#utility.yul\":2667:2676   */\n      dup4\n        /* \"#utility.yul\":2663:2680   */\n      add\n        /* \"#utility.yul\":2654:2660   */\n      dup5\n        /* \"#utility.yul\":2597:2681   */\n      tag_52\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2440:2688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2694:3113   */\n    tag_22:\n        /* \"#utility.yul\":2860:2864   */\n      0x00\n        /* \"#utility.yul\":2898:2900   */\n      0x20\n        /* \"#utility.yul\":2887:2896   */\n      dup3\n        /* \"#utility.yul\":2883:2901   */\n      add\n        /* \"#utility.yul\":2875:2901   */\n      swap1\n      pop\n        /* \"#utility.yul\":2947:2956   */\n      dup2\n        /* \"#utility.yul\":2941:2945   */\n      dup2\n        /* \"#utility.yul\":2937:2957   */\n      sub\n        /* \"#utility.yul\":2933:2934   */\n      0x00\n        /* \"#utility.yul\":2922:2931   */\n      dup4\n        /* \"#utility.yul\":2918:2935   */\n      add\n        /* \"#utility.yul\":2911:2958   */\n      mstore\n        /* \"#utility.yul\":2975:3106   */\n      tag_75\n        /* \"#utility.yul\":3101:3105   */\n      dup2\n        /* \"#utility.yul\":2975:3106   */\n      tag_56\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2967:3106   */\n      swap1\n      pop\n        /* \"#utility.yul\":2694:3113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3200:3369   */\n    tag_59:\n        /* \"#utility.yul\":3284:3295   */\n      0x00\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3313:3316   */\n      dup3\n        /* \"#utility.yul\":3306:3325   */\n      mstore\n        /* \"#utility.yul\":3358:3362   */\n      0x20\n        /* \"#utility.yul\":3353:3356   */\n      dup3\n        /* \"#utility.yul\":3349:3363   */\n      add\n        /* \"#utility.yul\":3334:3363   */\n      swap1\n      pop\n        /* \"#utility.yul\":3200:3369   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3471   */\n    tag_51:\n        /* \"#utility.yul\":3412:3419   */\n      0x00\n        /* \"#utility.yul\":3441:3465   */\n      tag_80\n        /* \"#utility.yul\":3459:3464   */\n      dup3\n        /* \"#utility.yul\":3441:3465   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3430:3465   */\n      swap1\n      pop\n        /* \"#utility.yul\":3375:3471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3477:3567   */\n    tag_82:\n        /* \"#utility.yul\":3511:3518   */\n      0x00\n        /* \"#utility.yul\":3554:3559   */\n      dup2\n        /* \"#utility.yul\":3547:3560   */\n      iszero\n        /* \"#utility.yul\":3540:3561   */\n      iszero\n        /* \"#utility.yul\":3529:3561   */\n      swap1\n      pop\n        /* \"#utility.yul\":3477:3567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3573:3699   */\n    tag_81:\n        /* \"#utility.yul\":3610:3617   */\n      0x00\n        /* \"#utility.yul\":3650:3692   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3643:3648   */\n      dup3\n        /* \"#utility.yul\":3639:3693   */\n      and\n        /* \"#utility.yul\":3628:3693   */\n      swap1\n      pop\n        /* \"#utility.yul\":3573:3699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3705:3782   */\n    tag_65:\n        /* \"#utility.yul\":3742:3749   */\n      0x00\n        /* \"#utility.yul\":3771:3776   */\n      dup2\n        /* \"#utility.yul\":3760:3776   */\n      swap1\n      pop\n        /* \"#utility.yul\":3705:3782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3788:3927   */\n    tag_55:\n        /* \"#utility.yul\":3851:3860   */\n      0x00\n        /* \"#utility.yul\":3884:3921   */\n      tag_87\n        /* \"#utility.yul\":3915:3920   */\n      dup3\n        /* \"#utility.yul\":3884:3921   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3871:3921   */\n      swap1\n      pop\n        /* \"#utility.yul\":3788:3927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3933:4059   */\n    tag_88:\n        /* \"#utility.yul\":3983:3992   */\n      0x00\n        /* \"#utility.yul\":4016:4053   */\n      tag_90\n        /* \"#utility.yul\":4047:4052   */\n      dup3\n        /* \"#utility.yul\":4016:4053   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4003:4053   */\n      swap1\n      pop\n        /* \"#utility.yul\":3933:4059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4065:4178   */\n    tag_91:\n        /* \"#utility.yul\":4115:4124   */\n      0x00\n        /* \"#utility.yul\":4148:4172   */\n      tag_93\n        /* \"#utility.yul\":4166:4171   */\n      dup3\n        /* \"#utility.yul\":4148:4172   */\n      tag_81\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":4135:4172   */\n      swap1\n      pop\n        /* \"#utility.yul\":4065:4178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4424   */\n    tag_42:\n        /* \"#utility.yul\":4416:4417   */\n      0x00\n        /* \"#utility.yul\":4413:4414   */\n      dup1\n        /* \"#utility.yul\":4406:4418   */\n      revert\n        /* \"#utility.yul\":4430:4661   */\n    tag_61:\n        /* \"#utility.yul\":4570:4604   */\n      0x54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f\n        /* \"#utility.yul\":4566:4567   */\n      0x00\n        /* \"#utility.yul\":4558:4564   */\n      dup3\n        /* \"#utility.yul\":4554:4568   */\n      add\n        /* \"#utility.yul\":4547:4605   */\n      mstore\n        /* \"#utility.yul\":4639:4653   */\n      0x756c6420626520657175616c0000000000000000000000000000000000000000\n        /* \"#utility.yul\":4634:4636   */\n      0x20\n        /* \"#utility.yul\":4626:4632   */\n      dup3\n        /* \"#utility.yul\":4622:4637   */\n      add\n        /* \"#utility.yul\":4615:4654   */\n      mstore\n        /* \"#utility.yul\":4430:4661   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4667:4783   */\n    tag_34:\n        /* \"#utility.yul\":4737:4758   */\n      tag_99\n        /* \"#utility.yul\":4752:4757   */\n      dup2\n        /* \"#utility.yul\":4737:4758   */\n      tag_82\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4730:4735   */\n      dup2\n        /* \"#utility.yul\":4727:4759   */\n      eq\n        /* \"#utility.yul\":4717:4777   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4773:4774   */\n      0x00\n        /* \"#utility.yul\":4770:4771   */\n      dup1\n        /* \"#utility.yul\":4763:4775   */\n      revert\n        /* \"#utility.yul\":4717:4777   */\n    tag_100:\n        /* \"#utility.yul\":4667:4783   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4789:4911   */\n    tag_38:\n        /* \"#utility.yul\":4862:4886   */\n      tag_102\n        /* \"#utility.yul\":4880:4885   */\n      dup2\n        /* \"#utility.yul\":4862:4886   */\n      tag_65\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4855:4860   */\n      dup2\n        /* \"#utility.yul\":4852:4887   */\n      eq\n        /* \"#utility.yul\":4842:4905   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":4901:4902   */\n      0x00\n        /* \"#utility.yul\":4898:4899   */\n      dup1\n        /* \"#utility.yul\":4891:4903   */\n      revert\n        /* \"#utility.yul\":4842:4905   */\n    tag_103:\n        /* \"#utility.yul\":4789:4911   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd908891b125e9efc755fbc4591a74f34b113d7103e86df1e04120db070ed33764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 93,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161059038038061059083398181016040528101906100329190610072565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050506100ed565b60008151905061006c816100d6565b92915050565b600060208284031215610088576100876100d1565b5b60006100968482850161005d565b91505092915050565b60006100aa826100b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100df8161009f565b81146100ea57600080fd5b50565b610494806100fc6000396000f3fe6080604052600436106100345760003560e01c80639d76ea5814610039578063eb521a4c14610064578063fc0c546a14610080575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b91906102c0565b60405180910390f35b61007e60048036038101906100799190610243565b6100d1565b005b34801561008c57600080fd5b506100956101c8565b6040516100a29190610312565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803414610113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010a9061032d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610172939291906102db565b602060405180830381600087803b15801561018c57600080fd5b505af11580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c49190610216565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506101fb81610430565b92915050565b60008135905061021081610447565b92915050565b60006020828403121561022c5761022b6103dc565b5b600061023a848285016101ec565b91505092915050565b600060208284031215610259576102586103dc565b5b600061026784828501610201565b91505092915050565b6102798161035e565b82525050565b610288816103a6565b82525050565b600061029b602c8361034d565b91506102a6826103e1565b604082019050919050565b6102ba8161039c565b82525050565b60006020820190506102d56000830184610270565b92915050565b60006060820190506102f06000830186610270565b6102fd6020830185610270565b61030a60408301846102b1565b949350505050565b6000602082019050610327600083018461027f565b92915050565b600060208201905081810360008301526103468161028e565b9050919050565b600082825260208201905092915050565b60006103698261037c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103b1826103b8565b9050919050565b60006103c3826103ca565b9050919050565b60006103d58261037c565b9050919050565b600080fd5b7f54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f60008201527f756c6420626520657175616c0000000000000000000000000000000000000000602082015250565b61043981610370565b811461044457600080fd5b50565b6104508161039c565b811461045b57600080fd5b5056fea2646970667358221220cd908891b125e9efc755fbc4591a74f34b113d7103e86df1e04120db070ed33764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x590 CODESIZE SUB DUP1 PUSH2 0x590 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP POP PUSH2 0xED JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6C DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88 JUMPI PUSH2 0x87 PUSH2 0xD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x96 DUP5 DUP3 DUP6 ADD PUSH2 0x5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA DUP3 PUSH2 0xB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x494 DUP1 PUSH2 0xFC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x243 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x216 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FB DUP2 PUSH2 0x430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210 DUP2 PUSH2 0x447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x3DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A DUP5 DUP3 DUP6 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x259 JUMPI PUSH2 0x258 PUSH2 0x3DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x267 DUP5 DUP3 DUP6 ADD PUSH2 0x201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0x35E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x3A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B PUSH1 0x2C DUP4 PUSH2 0x34D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6 DUP3 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA DUP2 PUSH2 0x39C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x270 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x2FD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x30A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x327 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x346 DUP2 PUSH2 0x28E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x3B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 DUP3 PUSH2 0x3CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C6420626520657175616C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x439 DUP2 PUSH2 0x370 JUMP JUMPDEST DUP2 EQ PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x450 DUP2 PUSH2 0x39C JUMP JUMPDEST DUP2 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD SWAP1 DUP9 SWAP2 0xB1 0x25 0xE9 0xEF 0xC7 SSTORE 0xFB 0xC4 MSIZE BYTE PUSH21 0xF34B113D7103E86DF1E04120DB070ED33764736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "241:497:1:-:0;;;417:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;477:12;;;;;;;;;;;461:28;;417:79;241:497;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;241:497:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@provideLiquidity_122": {
									"entryPoint": 209,
									"id": 122,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenAddress_85": {
									"entryPoint": 171,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_83": {
									"entryPoint": 456,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4914:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:2",
														"type": ""
													}
												],
												"src": "150:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "417:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:2"
															},
															"nodeType": "YulIf",
															"src": "379:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "508:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "523:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "537:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "527:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "552:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "595:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "606:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "591:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "591:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "615:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "562:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "552:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "339:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "350:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "362:6:2",
														"type": ""
													}
												],
												"src": "295:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "712:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "758:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "760:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "760:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "733:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:32:2"
															},
															"nodeType": "YulIf",
															"src": "722:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "851:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "866:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "870:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "895:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "905:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "895:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "693:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "705:6:2",
														"type": ""
													}
												],
												"src": "646:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1086:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1068:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1056:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1034:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1041:3:2",
														"type": ""
													}
												],
												"src": "981:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1249:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1205:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:2",
														"type": ""
													}
												],
												"src": "1105:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1414:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1424:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1490:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1495:2:2",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1431:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1424:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																	"nodeType": "YulIdentifier",
																	"src": "1507:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1507:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1609:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1620:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1625:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1616:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1609:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1402:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1410:3:2",
														"type": ""
													}
												],
												"src": "1268:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1705:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1722:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1745:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1727:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1715:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1693:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1700:3:2",
														"type": ""
													}
												],
												"src": "1640:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1862:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1872:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1884:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1895:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1880:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1872:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1952:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1965:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1976:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1961:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1961:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1908:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1908:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1908:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1834:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1846:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1857:4:2",
														"type": ""
													}
												],
												"src": "1764:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2146:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2156:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2168:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2179:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2164:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2156:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2236:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2249:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2260:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2245:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2245:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2192:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2317:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2273:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2273:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2412:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2423:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2355:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2355:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2102:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2114:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2122:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2130:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2141:4:2",
														"type": ""
													}
												],
												"src": "1992:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2561:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2573:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2584:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2561:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2654:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2597:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2597:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2523:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2535:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2546:4:2",
														"type": ""
													}
												],
												"src": "2440:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2865:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2875:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2887:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2898:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2875:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2922:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2933:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2918:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2918:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2941:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2947:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2937:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2937:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2911:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2967:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3101:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2975:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2967:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2845:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2860:4:2",
														"type": ""
													}
												],
												"src": "2694:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3159:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3169:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3179:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3169:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3152:6:2",
														"type": ""
													}
												],
												"src": "3119:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3296:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3313:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3334:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3334:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3268:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3273:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3284:11:2",
														"type": ""
													}
												],
												"src": "3200:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3420:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3430:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3459:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3441:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3441:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3430:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3402:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3412:7:2",
														"type": ""
													}
												],
												"src": "3375:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3519:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3529:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3554:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3547:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3547:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3540:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3529:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3501:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3511:7:2",
														"type": ""
													}
												],
												"src": "3477:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3618:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3628:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3643:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3650:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3639:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3639:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3628:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3600:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3610:7:2",
														"type": ""
													}
												],
												"src": "3573:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3750:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3760:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3771:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3760:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3732:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3742:7:2",
														"type": ""
													}
												],
												"src": "3705:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3861:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3871:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3915:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3884:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3871:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3841:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3851:9:2",
														"type": ""
													}
												],
												"src": "3788:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4003:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4047:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4016:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4003:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3973:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3983:9:2",
														"type": ""
													}
												],
												"src": "3933:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4125:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4135:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4166:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4148:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4135:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4105:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4115:9:2",
														"type": ""
													}
												],
												"src": "4065:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4273:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4290:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4283:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4184:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4396:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4413:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4406:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4406:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4406:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4307:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4536:125:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4558:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4566:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4554:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4554:14:2"
																	},
																	{
																		"hexValue": "54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4570:34:2",
																		"type": "",
																		"value": "The amount of ETH and tokens sho"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4547:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4547:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4626:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4634:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4622:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4622:15:2"
																	},
																	{
																		"hexValue": "756c6420626520657175616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4639:14:2",
																		"type": "",
																		"value": "uld be equal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4615:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4615:39:2"
														}
													]
												},
												"name": "store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4528:6:2",
														"type": ""
													}
												],
												"src": "4430:231:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4707:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4761:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4770:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4773:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4763:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4763:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4763:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4730:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4752:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4737:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4737:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4727:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4727:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4720:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4720:40:2"
															},
															"nodeType": "YulIf",
															"src": "4717:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4700:5:2",
														"type": ""
													}
												],
												"src": "4667:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4832:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4889:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4898:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4901:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4891:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4891:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4891:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4855:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4880:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4862:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4862:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4852:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:43:2"
															},
															"nodeType": "YulIf",
															"src": "4842:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4825:5:2",
														"type": ""
													}
												],
												"src": "4789:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0(memPtr) {\n\n        mstore(add(memPtr, 0), \"The amount of ETH and tokens sho\")\n\n        mstore(add(memPtr, 32), \"uld be equal\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80639d76ea5814610039578063eb521a4c14610064578063fc0c546a14610080575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b91906102c0565b60405180910390f35b61007e60048036038101906100799190610243565b6100d1565b005b34801561008c57600080fd5b506100956101c8565b6040516100a29190610312565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803414610113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010a9061032d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610172939291906102db565b602060405180830381600087803b15801561018c57600080fd5b505af11580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c49190610216565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506101fb81610430565b92915050565b60008135905061021081610447565b92915050565b60006020828403121561022c5761022b6103dc565b5b600061023a848285016101ec565b91505092915050565b600060208284031215610259576102586103dc565b5b600061026784828501610201565b91505092915050565b6102798161035e565b82525050565b610288816103a6565b82525050565b600061029b602c8361034d565b91506102a6826103e1565b604082019050919050565b6102ba8161039c565b82525050565b60006020820190506102d56000830184610270565b92915050565b60006060820190506102f06000830186610270565b6102fd6020830185610270565b61030a60408301846102b1565b949350505050565b6000602082019050610327600083018461027f565b92915050565b600060208201905081810360008301526103468161028e565b9050919050565b600082825260208201905092915050565b60006103698261037c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103b1826103b8565b9050919050565b60006103c3826103ca565b9050919050565b60006103d58261037c565b9050919050565b600080fd5b7f54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f60008201527f756c6420626520657175616c0000000000000000000000000000000000000000602082015250565b61043981610370565b811461044457600080fd5b50565b6104508161039c565b811461045b57600080fd5b5056fea2646970667358221220cd908891b125e9efc755fbc4591a74f34b113d7103e86df1e04120db070ed33764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x243 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x216 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FB DUP2 PUSH2 0x430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210 DUP2 PUSH2 0x447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x3DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A DUP5 DUP3 DUP6 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x259 JUMPI PUSH2 0x258 PUSH2 0x3DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x267 DUP5 DUP3 DUP6 ADD PUSH2 0x201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0x35E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x3A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B PUSH1 0x2C DUP4 PUSH2 0x34D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6 DUP3 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA DUP2 PUSH2 0x39C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x270 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x2FD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x30A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x327 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x346 DUP2 PUSH2 0x28E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x3B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 DUP3 PUSH2 0x3CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C6420626520657175616C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x439 DUP2 PUSH2 0x370 JUMP JUMPDEST DUP2 EQ PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x450 DUP2 PUSH2 0x39C JUMP JUMPDEST DUP2 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD SWAP1 DUP9 SWAP2 0xB1 0x25 0xE9 0xEF 0xC7 SSTORE 0xFB 0xC4 MSIZE BYTE PUSH21 0xF34B113D7103E86DF1E04120DB070ED33764736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "241:497:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;358:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:27;;;;;;;;;;;;;:::o;503:233::-;594:7;581:9;:20;573:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;667:12;;;;;;;;;;;660:33;;;694:10;714:4;721:7;660:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;503:233;:::o;358:19::-;;;;;;;;;;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:345::-;362:6;411:2;399:9;390:7;386:23;382:32;379:119;;;417:79;;:::i;:::-;379:119;537:1;562:61;615:7;606:6;595:9;591:22;562:61;:::i;:::-;552:71;;508:125;295:345;;;;:::o;646:329::-;705:6;754:2;742:9;733:7;729:23;725:32;722:119;;;760:79;;:::i;:::-;722:119;880:1;905:53;950:7;941:6;930:9;926:22;905:53;:::i;:::-;895:63;;851:117;646:329;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;981:118;;:::o;1105:157::-;1205:50;1249:5;1205:50;:::i;:::-;1200:3;1193:63;1105:157;;:::o;1268:366::-;1410:3;1431:67;1495:2;1490:3;1431:67;:::i;:::-;1424:74;;1507:93;1596:3;1507:93;:::i;:::-;1625:2;1620:3;1616:12;1609:19;;1268:366;;;:::o;1640:118::-;1727:24;1745:5;1727:24;:::i;:::-;1722:3;1715:37;1640:118;;:::o;1764:222::-;1857:4;1895:2;1884:9;1880:18;1872:26;;1908:71;1976:1;1965:9;1961:17;1952:6;1908:71;:::i;:::-;1764:222;;;;:::o;1992:442::-;2141:4;2179:2;2168:9;2164:18;2156:26;;2192:71;2260:1;2249:9;2245:17;2236:6;2192:71;:::i;:::-;2273:72;2341:2;2330:9;2326:18;2317:6;2273:72;:::i;:::-;2355;2423:2;2412:9;2408:18;2399:6;2355:72;:::i;:::-;1992:442;;;;;;:::o;2440:248::-;2546:4;2584:2;2573:9;2569:18;2561:26;;2597:84;2678:1;2667:9;2663:17;2654:6;2597:84;:::i;:::-;2440:248;;;;:::o;2694:419::-;2860:4;2898:2;2887:9;2883:18;2875:26;;2947:9;2941:4;2937:20;2933:1;2922:9;2918:17;2911:47;2975:131;3101:4;2975:131;:::i;:::-;2967:139;;2694:419;;;:::o;3200:169::-;3284:11;3318:6;3313:3;3306:19;3358:4;3353:3;3349:14;3334:29;;3200:169;;;;:::o;3375:96::-;3412:7;3441:24;3459:5;3441:24;:::i;:::-;3430:35;;3375:96;;;:::o;3477:90::-;3511:7;3554:5;3547:13;3540:21;3529:32;;3477:90;;;:::o;3573:126::-;3610:7;3650:42;3643:5;3639:54;3628:65;;3573:126;;;:::o;3705:77::-;3742:7;3771:5;3760:16;;3705:77;;;:::o;3788:139::-;3851:9;3884:37;3915:5;3884:37;:::i;:::-;3871:50;;3788:139;;;:::o;3933:126::-;3983:9;4016:37;4047:5;4016:37;:::i;:::-;4003:50;;3933:126;;;:::o;4065:113::-;4115:9;4148:24;4166:5;4148:24;:::i;:::-;4135:37;;4065:113;;;:::o;4307:117::-;4416:1;4413;4406:12;4430:231;4570:34;4566:1;4558:6;4554:14;4547:58;4639:14;4634:2;4626:6;4622:15;4615:39;4430:231;:::o;4667:116::-;4737:21;4752:5;4737:21;:::i;:::-;4730:5;4727:32;4717:60;;4773:1;4770;4763:12;4717:60;4667:116;:::o;4789:122::-;4862:24;4880:5;4862:24;:::i;:::-;4855:5;4852:35;4842:63;;4901:1;4898;4891:12;4842:63;4789:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "234400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"provideLiquidity(uint256)": "infinite",
								"token()": "2619",
								"tokenAddress()": "2492"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 461,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 461,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 738,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 738,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 738,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 241,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 738,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd908891b125e9efc755fbc4591a74f34b113d7103e86df1e04120db070ed33764736f6c63430008070033",
									".code": [
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "9D76EA58"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "EB521A4C"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 738,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 594,
											"end": 601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 581,
											"end": 590,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 581,
											"end": 601,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 667,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 667,
											"end": 679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 667,
											"end": 679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 667,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 667,
											"end": 679,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 667,
											"end": 679,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 667,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 660,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 660,
											"end": 693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 660,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 694,
											"end": 704,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 714,
											"end": 718,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 721,
											"end": 728,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 660,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 595,
											"end": 604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 591,
											"end": 613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 508,
											"end": 633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 729,
											"end": 752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 725,
											"end": 757,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 851,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1249,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1205,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1634,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1268,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1431,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1431,
											"end": 1498,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1431,
											"end": 1498,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1431,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1424,
											"end": 1498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1424,
											"end": 1498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1507,
											"end": 1600,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1507,
											"end": 1600,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1507,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1634,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1764,
											"end": 1986,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1764,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1974,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1978,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1908,
											"end": 1979,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1908,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1986,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2181,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2192,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2192,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2273,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2273,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2273,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2423,
											"end": 2425,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2355,
											"end": 2427,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2427,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2355,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2434,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2582,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2660,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2597,
											"end": 2681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2681,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2597,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2688,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2694,
											"end": 3113,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2694,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2957,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2958,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3101,
											"end": 3105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2975,
											"end": 3106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2975,
											"end": 3106,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2975,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 3106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 3106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 3113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 3113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3200,
											"end": 3369,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3200,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3369,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3369,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3375,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3375,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3441,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3441,
											"end": 3465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3441,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3471,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3477,
											"end": 3567,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3477,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3511,
											"end": 3518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3560,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3561,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3529,
											"end": 3561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3529,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3567,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3573,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3573,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3648,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3639,
											"end": 3693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3705,
											"end": 3782,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3705,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3742,
											"end": 3749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3782,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3788,
											"end": 3927,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3788,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3915,
											"end": 3920,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3884,
											"end": 3921,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 3921,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3884,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3927,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3933,
											"end": 4059,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3933,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 3992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4047,
											"end": 4052,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4016,
											"end": 4053,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4053,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4016,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4003,
											"end": 4053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4003,
											"end": 4053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3933,
											"end": 4059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3933,
											"end": 4059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3933,
											"end": 4059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3933,
											"end": 4059,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4065,
											"end": 4178,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4065,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4166,
											"end": 4171,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4148,
											"end": 4172,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4148,
											"end": 4172,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4148,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4178,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4307,
											"end": 4424,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4307,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4661,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4430,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4570,
											"end": 4604,
											"name": "PUSH",
											"source": 2,
											"value": "54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F"
										},
										{
											"begin": 4566,
											"end": 4567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4554,
											"end": 4568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4605,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 4653,
											"name": "PUSH",
											"source": 2,
											"value": "756C6420626520657175616C0000000000000000000000000000000000000000"
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4622,
											"end": 4637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4615,
											"end": 4654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4661,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4667,
											"end": 4783,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4667,
											"end": 4783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4752,
											"end": 4757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4737,
											"end": 4758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4758,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4737,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4730,
											"end": 4735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4759,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4717,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4717,
											"end": 4777,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 4775,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4717,
											"end": 4777,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4717,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4783,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4789,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4789,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4880,
											"end": 4885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4852,
											"end": 4887,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4842,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4903,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4842,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4911,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"provideLiquidity(uint256)": "eb521a4c",
							"token()": "fc0c546a",
							"tokenAddress()": "9d76ea58"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0xde68c81ac59a2427b39be376357bcc9a27574bd8fe7fcd97ab634b1d8d7b1ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de3a4a385805a24952ccc2e977cf2d2f6e761c1e66a6354991e9fd149b3bc826\",\"dweb:/ipfs/Qmck6gdj4h37DpKPycRySFtXBwXyFj3ktdrVyw6xAbzphM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2660:0"
				},
				"id": 0
			},
			"contracts/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LiquidityPool": [
							123
						]
					},
					"id": 124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "192:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 124,
							"sourceUnit": 78,
							"src": "217:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 123,
							"linearizedBaseContracts": [
								123
							],
							"name": "LiquidityPool",
							"nameLocation": "250:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 83,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "372:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "358:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "358:6:1"
										},
										"referencedDeclaration": 77,
										"src": "358:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 85,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "398:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "383:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "451:45:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "461:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "477:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "461:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "461:28:1"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "437:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "429:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:23:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:1"
									},
									"scope": 123,
									"src": "417:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "563:173:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "581:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "581:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 103,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "594:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "581:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f756c6420626520657175616c",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "603:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																"typeString": "literal_string \"The amount of ETH and tokens should be equal\""
															},
															"value": "The amount of ETH and tokens should be equal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																"typeString": "literal_string \"The amount of ETH and tokens should be equal\""
															}
														],
														"id": 100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "573:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "573:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "573:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "694:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "694:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 116,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "714:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$123",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$123",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "706:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "706:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "706:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 118,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "721:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 109,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "667:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 108,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "660:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "660:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "660:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "660:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "660:69:1"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "512:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "537:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "529:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:17:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:0:1"
									},
									"scope": 123,
									"src": "503:233:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 124,
							"src": "241:497:1",
							"usedErrors": []
						}
					],
					"src": "192:548:1"
				},
				"id": 1
			}
		}
	}
}