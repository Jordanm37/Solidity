{
	"id": "02ae9a91246a0b0753b41f3ee2223c37",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\n\n1. We will need to know the addresses of the tokens held within the pool.\n2. \n\n\n*/\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ncontract Pool {\n    address immutable token0;\n    address immutable token1;\n    address immutable ltrAddress;\n    uint256 kLast;\n    uint256 public reserve0;\n    uint256 public reserve1;\n    uint256 public price0;\n    uint256 public price1;\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    constructor(address _token0, address _token1, address _ltrAddress) {\n        token0 = _token0;\n        token1 = _token1;\n        ltrAddress = _ltrAddress;\n    }\n\n    function update() private {\n        reserve0 = IERC20(token0).balanceOf(address(this));\n        reserve1 = IERC20(token1).balanceOf(address(this));\n        price0 = reserve1 / reserve0;\n        price1 = reserve0 / reserve1;\n    }\n\n\n\n    function provideLiquidity(uint256 _amount0, uint256 _amount1) external {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this));\n        uint256 shares = Math.sqrt(kLast);\n        IERC20(ltrAddress).transfer(msg.sender, shares);\n        emit liquidityProvided(msg.sender, shares);\n    }\n\n    function get0(uint256 _amount1) public {\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        uint256 amountOut = _amount1 * (reserve0 / reserve1);\n        if (reserve0 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token0).transfer(msg.sender, amountOut);\n        }\n\n        update();\n    }\n\n    function get1(uint256 _amount0) public {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        uint256 amountOut = _amount0 * (reserve1 / reserve0);\n        if (reserve1 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token1).transfer(msg.sender, amountOut);\n        }\n\n        update();\n    }\n\n    // function swap(uint256 _amount0,) public {\n\n    // }\n\n}\n\n\n// DAI/ETH\n\n//  x * y = k\n\n//   x = DAI\n//   y = ETH\n\n//   x' = amount of DAI being swapped for eth\n//   y' = amount of ETH being swapped for DAI\n\n//   if y = 100ETH = eth_reserve\n//   then x = 150000 = dai_reserve\n\n//   price of eth based on the dai = dai_reserve / eth_reserve = 1500\n//   price of dai based on eth would be the inverse = 6.7 * 10^-4\n\n//   Let's try and swap 3000 Dai for eth\n\n//   x' = 3000\n//   y' = 3000 * 6.7 * 10^-4 = 2\n\n//   x' = y' * dai_reserve / eth_reserve\n//   y' = x' * eth_reserve / dai_reserve\n\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pool.sol": {
				"Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ltrAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "get0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								}
							],
							"name": "get1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pool.sol\":224:2620  contract Pool {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/Pool.sol\":545:705  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Pool.sol\":631:638  _token0 */\n  dup3\n    /* \"contracts/Pool.sol\":622:638  token0 = _token0 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":657:664  _token1 */\n  dup2\n    /* \"contracts/Pool.sol\":648:664  token1 = _token1 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":687:698  _ltrAddress */\n  dup1\n    /* \"contracts/Pool.sol\":674:698  ltrAddress = _ltrAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":545:705  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Pool.sol\":224:2620  contract Pool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":966:1085   */\ntag_27:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_29\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_30\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_31\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/Pool.sol\":224:2620  contract Pool {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n  0x00\n  assignImmutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n  0x00\n  assignImmutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pool.sol\":224:2620  contract Pool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6caf25ce\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x6caf25ce\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7a16af7f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9c117f0f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa0a986f1\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2af4ec36\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":1645:2098  function get0(uint256 _amount1) public {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/Pool.sol\":357:380  uint256 public reserve0 */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":386:409  uint256 public reserve1 */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":442:463  uint256 public price1 */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":948:1639  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/Pool.sol\":2104:2557  function get1(uint256 _amount0) public {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Pool.sol\":415:436  uint256 public price0 */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":1645:2098  function get0(uint256 _amount1) public {... */\n    tag_14:\n        /* \"contracts/Pool.sol\":1757:1765  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1709:1715  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1702:1726  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1727:1737  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1747:1751  this */\n      address\n        /* \"contracts/Pool.sol\":1702:1753  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"contracts/Pool.sol\":1702:1765  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1694:1791  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/Pool.sol\":1808:1814  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1801:1828  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1829:1839  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1849:1853  this */\n      address\n        /* \"contracts/Pool.sol\":1856:1864  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1801:1865  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      pop\n        /* \"contracts/Pool.sol\":1875:1892  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":1918:1926  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":1907:1915  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1907:1926  reserve0 / reserve1 */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"contracts/Pool.sol\":1895:1903  _amount1 */\n      dup3\n        /* \"contracts/Pool.sol\":1895:1927  _amount1 * (reserve0 / reserve1) */\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"contracts/Pool.sol\":1875:1927  uint256 amountOut = _amount1 * (reserve0 / reserve1) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1953:1962  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":1941:1949  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1941:1962  reserve0 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":1937:2073  if (reserve0 <= amountOut) {... */\n      tag_55\n      jumpi\n        /* \"contracts/Pool.sol\":1978:1986  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":1937:2073  if (reserve0 <= amountOut) {... */\n    tag_55:\n        /* \"contracts/Pool.sol\":2023:2029  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2016:2039  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2040:2050  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2052:2061  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":2016:2062  IERC20(token0).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_61:\n      pop\n        /* \"contracts/Pool.sol\":2083:2091  update() */\n      tag_62\n        /* \"contracts/Pool.sol\":2083:2089  update */\n      tag_63\n        /* \"contracts/Pool.sol\":2083:2091  update() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/Pool.sol\":1684:2098  {... */\n      pop\n        /* \"contracts/Pool.sol\":1645:2098  function get0(uint256 _amount1) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":357:380  uint256 public reserve0 */\n    tag_16:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":386:409  uint256 public reserve1 */\n    tag_20:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":442:463  uint256 public price1 */\n    tag_23:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":948:1639  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_28:\n        /* \"contracts/Pool.sol\":1092:1100  _amount0 */\n      dup2\n        /* \"contracts/Pool.sol\":1044:1050  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1037:1061  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1062:1072  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1082:1086  this */\n      address\n        /* \"contracts/Pool.sol\":1037:1088  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"contracts/Pool.sol\":1037:1100  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1029:1126  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_44\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/Pool.sol\":1199:1207  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1151:1157  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1144:1168  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1169:1179  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1189:1193  this */\n      address\n        /* \"contracts/Pool.sol\":1144:1195  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_74:\n        /* \"contracts/Pool.sol\":1144:1207  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1136:1233  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_44\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/Pool.sol\":1250:1256  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1243:1270  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1271:1281  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1291:1295  this */\n      address\n        /* \"contracts/Pool.sol\":1298:1306  _amount0 */\n      dup6\n        /* \"contracts/Pool.sol\":1243:1307  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/Pool.sol\":1324:1330  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1317:1344  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1345:1355  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1365:1369  this */\n      address\n        /* \"contracts/Pool.sol\":1372:1380  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1317:1381  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_84:\n      pop\n        /* \"contracts/Pool.sol\":1448:1454  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1441:1465  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1474:1478  this */\n      address\n        /* \"contracts/Pool.sol\":1441:1480  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_89:\n        /* \"contracts/Pool.sol\":1406:1412  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1399:1423  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1432:1436  this */\n      address\n        /* \"contracts/Pool.sol\":1399:1438  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_93:\n        /* \"contracts/Pool.sol\":1399:1480  IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      tag_94\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_94:\n        /* \"contracts/Pool.sol\":1391:1396  kLast */\n      0x00\n        /* \"contracts/Pool.sol\":1391:1480  kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":1490:1504  uint256 shares */\n      0x00\n        /* \"contracts/Pool.sol\":1507:1523  Math.sqrt(kLast) */\n      tag_95\n        /* \"contracts/Pool.sol\":1517:1522  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":1507:1516  Math.sqrt */\n      tag_96\n        /* \"contracts/Pool.sol\":1507:1523  Math.sqrt(kLast) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Pool.sol\":1490:1523  uint256 shares = Math.sqrt(kLast) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1540:1550  ltrAddress */\n      immutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n        /* \"contracts/Pool.sol\":1533:1560  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":1561:1571  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1573:1579  shares */\n      dup4\n        /* \"contracts/Pool.sol\":1533:1580  IERC20(ltrAddress).transfer(msg.sender, shares) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_100:\n      pop\n        /* \"contracts/Pool.sol\":1595:1632  liquidityProvided(msg.sender, shares) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/Pool.sol\":1613:1623  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1625:1631  shares */\n      dup3\n        /* \"contracts/Pool.sol\":1595:1632  liquidityProvided(msg.sender, shares) */\n      mload(0x40)\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pool.sol\":1019:1639  {... */\n      pop\n        /* \"contracts/Pool.sol\":948:1639  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":2104:2557  function get1(uint256 _amount0) public {... */\n    tag_31:\n        /* \"contracts/Pool.sol\":2216:2224  _amount0 */\n      dup1\n        /* \"contracts/Pool.sol\":2168:2174  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2161:2185  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":2186:2196  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2206:2210  this */\n      address\n        /* \"contracts/Pool.sol\":2161:2212  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_106:\n        /* \"contracts/Pool.sol\":2161:2224  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":2153:2250  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_44\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/Pool.sol\":2267:2273  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2260:2287  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":2288:2298  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2308:2312  this */\n      address\n        /* \"contracts/Pool.sol\":2315:2323  _amount0 */\n      dup5\n        /* \"contracts/Pool.sol\":2260:2324  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/Pool.sol\":2334:2351  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":2377:2385  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":2366:2374  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2366:2385  reserve1 / reserve0 */\n      tag_113\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_113:\n        /* \"contracts/Pool.sol\":2354:2362  _amount0 */\n      dup3\n        /* \"contracts/Pool.sol\":2354:2386  _amount0 * (reserve1 / reserve0) */\n      tag_114\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_114:\n        /* \"contracts/Pool.sol\":2334:2386  uint256 amountOut = _amount0 * (reserve1 / reserve0) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":2412:2421  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":2400:2408  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2400:2421  reserve1 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":2396:2532  if (reserve1 <= amountOut) {... */\n      tag_115\n      jumpi\n        /* \"contracts/Pool.sol\":2437:2445  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":2396:2532  if (reserve1 <= amountOut) {... */\n    tag_115:\n        /* \"contracts/Pool.sol\":2482:2488  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":2475:2498  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2499:2509  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2511:2520  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":2475:2521  IERC20(token1).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_120:\n      pop\n        /* \"contracts/Pool.sol\":2542:2550  update() */\n      tag_121\n        /* \"contracts/Pool.sol\":2542:2548  update */\n      tag_63\n        /* \"contracts/Pool.sol\":2542:2550  update() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Pool.sol\":2143:2557  {... */\n      pop\n        /* \"contracts/Pool.sol\":2104:2557  function get1(uint256 _amount0) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":415:436  uint256 public price0 */\n    tag_33:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":711:940  function update() private {... */\n    tag_63:\n        /* \"contracts/Pool.sol\":765:771  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":758:782  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":791:795  this */\n      address\n        /* \"contracts/Pool.sol\":758:797  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_126:\n        /* \"contracts/Pool.sol\":747:755  reserve0 */\n      0x01\n        /* \"contracts/Pool.sol\":747:797  reserve0 = IERC20(token0).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":825:831  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":818:842  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":851:855  this */\n      address\n        /* \"contracts/Pool.sol\":818:857  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_130:\n        /* \"contracts/Pool.sol\":807:815  reserve1 */\n      0x02\n        /* \"contracts/Pool.sol\":807:857  reserve1 = IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":887:895  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":876:884  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":876:895  reserve1 / reserve0 */\n      tag_131\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_131:\n        /* \"contracts/Pool.sol\":867:873  price0 */\n      0x03\n        /* \"contracts/Pool.sol\":867:895  price0 = reserve1 / reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":925:933  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":914:922  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":914:933  reserve0 / reserve1 */\n      tag_132\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_132:\n        /* \"contracts/Pool.sol\":905:911  price1 */\n      0x04\n        /* \"contracts/Pool.sol\":905:933  price1 = reserve0 / reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":711:940  function update() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6336  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6357:6358  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6353  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6358  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6374:6382  return 0 */\n      swap1\n      pop\n      jump(tag_133)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7072  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7075:7076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7076  uint256 result = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7095  uint256 x */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7098:7099  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7099  uint256 x = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7124:7125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7118:7121  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7114  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7121  x >> 128 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7125  x >> 128 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7147:7150  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7141:7150  x >>= 128 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7175:7177  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7164:7177  result <<= 64 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7211:7212  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7206:7208  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7202  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7208  x >> 64 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7212  x >> 64 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7234:7236  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7228:7236  x >>= 64 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7261:7263  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7250:7263  result <<= 32 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7297:7298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7292:7294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7288  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7294  x >> 32 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7298  x >> 32 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7320:7322  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7314:7322  x >>= 32 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7347:7349  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7336:7349  result <<= 16 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7383:7384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7378:7380  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7374  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7380  x >> 16 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7384  x >> 16 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7406:7408  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7400:7408  x >>= 16 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7433:7434  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7422:7434  result <<= 8 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7467:7468  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7463:7464  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7459  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7464  x >> 8 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7468  x >> 8 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7490:7491  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7484:7491  x >>= 8 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7516:7517  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7505:7517  result <<= 4 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7550:7551  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7546:7547  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7542  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7547  x >> 4 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7551  x >> 4 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7573:7574  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7567:7574  x >>= 4 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7599:7600  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7588:7600  result <<= 2 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7633:7634  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7629:7630  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7625  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7630  x >> 2 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7634  x >> 2 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7661:7662  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7650:7662  result <<= 1 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8131:8132  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8120:8126  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8117  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8126  a / result */\n      dup2\n      tag_142\n      jumpi\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n    tag_142:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8113  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8126  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8106:8132  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8097:8132  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8180:8181  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8169:8175  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8166  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8175  a / result */\n      dup2\n      tag_145\n      jumpi\n      tag_146\n      tag_144\n      jump\t// in\n    tag_146:\n    tag_145:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8162  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8175  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8155:8181  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8146:8181  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8229:8230  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8218:8224  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8215  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8224  a / result */\n      dup2\n      tag_147\n      jumpi\n      tag_148\n      tag_144\n      jump\t// in\n    tag_148:\n    tag_147:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8211  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8224  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8204:8230  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8195:8230  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8278:8279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8267:8273  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8264  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8273  a / result */\n      dup2\n      tag_149\n      jumpi\n      tag_150\n      tag_144\n      jump\t// in\n    tag_150:\n    tag_149:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8260  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8273  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8253:8279  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8244:8279  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8327:8328  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8316:8322  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8313  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8322  a / result */\n      dup2\n      tag_151\n      jumpi\n      tag_152\n      tag_144\n      jump\t// in\n    tag_152:\n    tag_151:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8309  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8322  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8302:8328  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8293:8328  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8376:8377  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8365:8371  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8362  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8371  a / result */\n      dup2\n      tag_153\n      jumpi\n      tag_154\n      tag_144\n      jump\t// in\n    tag_154:\n    tag_153:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8358  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8371  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8351:8377  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8342:8377  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8425:8426  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8414:8420  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8411  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8420  a / result */\n      dup2\n      tag_155\n      jumpi\n      tag_156\n      tag_144\n      jump\t// in\n    tag_156:\n    tag_155:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8407  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8420  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8400:8426  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8391:8426  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      tag_157\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8451:8457  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8463:8469  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8460  a */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8469  a / result */\n      dup2\n      tag_158\n      jumpi\n      tag_159\n      tag_144\n      jump\t// in\n    tag_159:\n    tag_158:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8450  min */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8440:8470  return min(result, a / result) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_133:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":647:654  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":677:678  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:674  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:678  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":685:686  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      jump(tag_163)\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":681:682  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":666:686  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_165:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_167:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_168:\n        /* \"#utility.yul\":490:514   */\n      tag_188\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_167\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_189:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_169:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_191\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_168\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_194\n      tag_165\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":766:885   */\n    tag_193:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_195\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_169\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_170:\n        /* \"#utility.yul\":1112:1136   */\n      tag_197\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_167\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_18:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_199\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_170\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1851   */\n    tag_27:\n        /* \"#utility.yul\":1445:1451   */\n      0x00\n        /* \"#utility.yul\":1453:1459   */\n      dup1\n        /* \"#utility.yul\":1502:1504   */\n      0x40\n        /* \"#utility.yul\":1490:1499   */\n      dup4\n        /* \"#utility.yul\":1481:1488   */\n      dup6\n        /* \"#utility.yul\":1477:1500   */\n      sub\n        /* \"#utility.yul\":1473:1505   */\n      slt\n        /* \"#utility.yul\":1470:1589   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1508:1587   */\n      tag_202\n      tag_165\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1470:1589   */\n    tag_201:\n        /* \"#utility.yul\":1628:1629   */\n      0x00\n        /* \"#utility.yul\":1653:1706   */\n      tag_203\n        /* \"#utility.yul\":1698:1705   */\n      dup6\n        /* \"#utility.yul\":1689:1695   */\n      dup3\n        /* \"#utility.yul\":1678:1687   */\n      dup7\n        /* \"#utility.yul\":1674:1696   */\n      add\n        /* \"#utility.yul\":1653:1706   */\n      tag_169\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1643:1706   */\n      swap3\n      pop\n        /* \"#utility.yul\":1599:1716   */\n      pop\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1781:1834   */\n      tag_204\n        /* \"#utility.yul\":1826:1833   */\n      dup6\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1806:1815   */\n      dup7\n        /* \"#utility.yul\":1802:1824   */\n      add\n        /* \"#utility.yul\":1781:1834   */\n      tag_169\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1771:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1726:1844   */\n      pop\n        /* \"#utility.yul\":1377:1851   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1983   */\n    tag_171:\n        /* \"#utility.yul\":1894:1901   */\n      0x00\n        /* \"#utility.yul\":1934:1976   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1923:1977   */\n      and\n        /* \"#utility.yul\":1912:1977   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2085   */\n    tag_172:\n        /* \"#utility.yul\":2026:2033   */\n      0x00\n        /* \"#utility.yul\":2055:2079   */\n      tag_207\n        /* \"#utility.yul\":2073:2078   */\n      dup3\n        /* \"#utility.yul\":2055:2079   */\n      tag_171\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2044:2079   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2209   */\n    tag_173:\n        /* \"#utility.yul\":2178:2202   */\n      tag_209\n        /* \"#utility.yul\":2196:2201   */\n      dup2\n        /* \"#utility.yul\":2178:2202   */\n      tag_172\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2173:2176   */\n      dup3\n        /* \"#utility.yul\":2166:2203   */\n      mstore\n        /* \"#utility.yul\":2091:2209   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2547   */\n    tag_37:\n        /* \"#utility.yul\":2336:2340   */\n      0x00\n        /* \"#utility.yul\":2374:2376   */\n      0x40\n        /* \"#utility.yul\":2363:2372   */\n      dup3\n        /* \"#utility.yul\":2359:2377   */\n      add\n        /* \"#utility.yul\":2351:2377   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2458   */\n      tag_211\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2444:2453   */\n      dup4\n        /* \"#utility.yul\":2440:2457   */\n      add\n        /* \"#utility.yul\":2431:2437   */\n      dup6\n        /* \"#utility.yul\":2387:2458   */\n      tag_173\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2468:2540   */\n      tag_212\n        /* \"#utility.yul\":2536:2538   */\n      0x20\n        /* \"#utility.yul\":2525:2534   */\n      dup4\n        /* \"#utility.yul\":2521:2539   */\n      add\n        /* \"#utility.yul\":2512:2518   */\n      dup5\n        /* \"#utility.yul\":2468:2540   */\n      tag_173\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2215:2547   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:2696   */\n    tag_174:\n        /* \"#utility.yul\":2610:2615   */\n      0x00\n        /* \"#utility.yul\":2641:2647   */\n      dup2\n        /* \"#utility.yul\":2635:2648   */\n      mload\n        /* \"#utility.yul\":2626:2648   */\n      swap1\n      pop\n        /* \"#utility.yul\":2657:2690   */\n      tag_214\n        /* \"#utility.yul\":2684:2689   */\n      dup2\n        /* \"#utility.yul\":2657:2690   */\n      tag_168\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2553:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3053   */\n    tag_41:\n        /* \"#utility.yul\":2772:2778   */\n      0x00\n        /* \"#utility.yul\":2821:2823   */\n      0x20\n        /* \"#utility.yul\":2809:2818   */\n      dup3\n        /* \"#utility.yul\":2800:2807   */\n      dup5\n        /* \"#utility.yul\":2796:2819   */\n      sub\n        /* \"#utility.yul\":2792:2824   */\n      slt\n        /* \"#utility.yul\":2789:2908   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2827:2906   */\n      tag_217\n      tag_165\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2789:2908   */\n    tag_216:\n        /* \"#utility.yul\":2947:2948   */\n      0x00\n        /* \"#utility.yul\":2972:3036   */\n      tag_218\n        /* \"#utility.yul\":3028:3035   */\n      dup5\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3008:3017   */\n      dup6\n        /* \"#utility.yul\":3004:3026   */\n      add\n        /* \"#utility.yul\":2972:3036   */\n      tag_174\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2962:3036   */\n      swap2\n      pop\n        /* \"#utility.yul\":2918:3046   */\n      pop\n        /* \"#utility.yul\":2702:3053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3059:3228   */\n    tag_175:\n        /* \"#utility.yul\":3143:3154   */\n      0x00\n        /* \"#utility.yul\":3177:3183   */\n      dup3\n        /* \"#utility.yul\":3172:3175   */\n      dup3\n        /* \"#utility.yul\":3165:3184   */\n      mstore\n        /* \"#utility.yul\":3217:3221   */\n      0x20\n        /* \"#utility.yul\":3212:3215   */\n      dup3\n        /* \"#utility.yul\":3208:3222   */\n      add\n        /* \"#utility.yul\":3193:3222   */\n      swap1\n      pop\n        /* \"#utility.yul\":3059:3228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3234:3405   */\n    tag_176:\n        /* \"#utility.yul\":3374:3397   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3362:3368   */\n      dup3\n        /* \"#utility.yul\":3358:3372   */\n      add\n        /* \"#utility.yul\":3351:3398   */\n      mstore\n        /* \"#utility.yul\":3234:3405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3777   */\n    tag_177:\n        /* \"#utility.yul\":3553:3556   */\n      0x00\n        /* \"#utility.yul\":3574:3641   */\n      tag_222\n        /* \"#utility.yul\":3638:3640   */\n      0x15\n        /* \"#utility.yul\":3633:3636   */\n      dup4\n        /* \"#utility.yul\":3574:3641   */\n      tag_175\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3567:3641   */\n      swap2\n      pop\n        /* \"#utility.yul\":3650:3743   */\n      tag_223\n        /* \"#utility.yul\":3739:3742   */\n      dup3\n        /* \"#utility.yul\":3650:3743   */\n      tag_176\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3768:3770   */\n      0x20\n        /* \"#utility.yul\":3763:3766   */\n      dup3\n        /* \"#utility.yul\":3759:3771   */\n      add\n        /* \"#utility.yul\":3752:3771   */\n      swap1\n      pop\n        /* \"#utility.yul\":3411:3777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:4202   */\n    tag_44:\n        /* \"#utility.yul\":3949:3953   */\n      0x00\n        /* \"#utility.yul\":3987:3989   */\n      0x20\n        /* \"#utility.yul\":3976:3985   */\n      dup3\n        /* \"#utility.yul\":3972:3990   */\n      add\n        /* \"#utility.yul\":3964:3990   */\n      swap1\n      pop\n        /* \"#utility.yul\":4036:4045   */\n      dup2\n        /* \"#utility.yul\":4030:4034   */\n      dup2\n        /* \"#utility.yul\":4026:4046   */\n      sub\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4011:4020   */\n      dup4\n        /* \"#utility.yul\":4007:4024   */\n      add\n        /* \"#utility.yul\":4000:4047   */\n      mstore\n        /* \"#utility.yul\":4064:4195   */\n      tag_225\n        /* \"#utility.yul\":4190:4194   */\n      dup2\n        /* \"#utility.yul\":4064:4195   */\n      tag_177\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4056:4195   */\n      swap1\n      pop\n        /* \"#utility.yul\":3783:4202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4208:4650   */\n    tag_46:\n        /* \"#utility.yul\":4357:4361   */\n      0x00\n        /* \"#utility.yul\":4395:4397   */\n      0x60\n        /* \"#utility.yul\":4384:4393   */\n      dup3\n        /* \"#utility.yul\":4380:4398   */\n      add\n        /* \"#utility.yul\":4372:4398   */\n      swap1\n      pop\n        /* \"#utility.yul\":4408:4479   */\n      tag_227\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4465:4474   */\n      dup4\n        /* \"#utility.yul\":4461:4478   */\n      add\n        /* \"#utility.yul\":4452:4458   */\n      dup7\n        /* \"#utility.yul\":4408:4479   */\n      tag_173\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4489:4561   */\n      tag_228\n        /* \"#utility.yul\":4557:4559   */\n      0x20\n        /* \"#utility.yul\":4546:4555   */\n      dup4\n        /* \"#utility.yul\":4542:4560   */\n      add\n        /* \"#utility.yul\":4533:4539   */\n      dup6\n        /* \"#utility.yul\":4489:4561   */\n      tag_173\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4571:4643   */\n      tag_229\n        /* \"#utility.yul\":4639:4641   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4624:4642   */\n      add\n        /* \"#utility.yul\":4615:4621   */\n      dup5\n        /* \"#utility.yul\":4571:4643   */\n      tag_170\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4208:4650   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4656:4746   */\n    tag_178:\n        /* \"#utility.yul\":4690:4697   */\n      0x00\n        /* \"#utility.yul\":4733:4738   */\n      dup2\n        /* \"#utility.yul\":4726:4739   */\n      iszero\n        /* \"#utility.yul\":4719:4740   */\n      iszero\n        /* \"#utility.yul\":4708:4740   */\n      swap1\n      pop\n        /* \"#utility.yul\":4656:4746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4868   */\n    tag_179:\n        /* \"#utility.yul\":4822:4843   */\n      tag_232\n        /* \"#utility.yul\":4837:4842   */\n      dup2\n        /* \"#utility.yul\":4822:4843   */\n      tag_178\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4815:4820   */\n      dup2\n        /* \"#utility.yul\":4812:4844   */\n      eq\n        /* \"#utility.yul\":4802:4862   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4858:4859   */\n      0x00\n        /* \"#utility.yul\":4855:4856   */\n      dup1\n        /* \"#utility.yul\":4848:4860   */\n      revert\n        /* \"#utility.yul\":4802:4862   */\n    tag_233:\n        /* \"#utility.yul\":4752:4868   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4874:5011   */\n    tag_180:\n        /* \"#utility.yul\":4928:4933   */\n      0x00\n        /* \"#utility.yul\":4959:4965   */\n      dup2\n        /* \"#utility.yul\":4953:4966   */\n      mload\n        /* \"#utility.yul\":4944:4966   */\n      swap1\n      pop\n        /* \"#utility.yul\":4975:5005   */\n      tag_235\n        /* \"#utility.yul\":4999:5004   */\n      dup2\n        /* \"#utility.yul\":4975:5005   */\n      tag_179\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4874:5011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5017:5362   */\n    tag_50:\n        /* \"#utility.yul\":5084:5090   */\n      0x00\n        /* \"#utility.yul\":5133:5135   */\n      0x20\n        /* \"#utility.yul\":5121:5130   */\n      dup3\n        /* \"#utility.yul\":5112:5119   */\n      dup5\n        /* \"#utility.yul\":5108:5131   */\n      sub\n        /* \"#utility.yul\":5104:5136   */\n      slt\n        /* \"#utility.yul\":5101:5220   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":5139:5218   */\n      tag_238\n      tag_165\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5101:5220   */\n    tag_237:\n        /* \"#utility.yul\":5259:5260   */\n      0x00\n        /* \"#utility.yul\":5284:5345   */\n      tag_239\n        /* \"#utility.yul\":5337:5344   */\n      dup5\n        /* \"#utility.yul\":5328:5334   */\n      dup3\n        /* \"#utility.yul\":5317:5326   */\n      dup6\n        /* \"#utility.yul\":5313:5335   */\n      add\n        /* \"#utility.yul\":5284:5345   */\n      tag_180\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5274:5345   */\n      swap2\n      pop\n        /* \"#utility.yul\":5230:5355   */\n      pop\n        /* \"#utility.yul\":5017:5362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5368:5548   */\n    tag_144:\n        /* \"#utility.yul\":5416:5493   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5413:5414   */\n      0x00\n        /* \"#utility.yul\":5406:5494   */\n      mstore\n        /* \"#utility.yul\":5513:5517   */\n      0x12\n        /* \"#utility.yul\":5510:5511   */\n      0x04\n        /* \"#utility.yul\":5503:5518   */\n      mstore\n        /* \"#utility.yul\":5537:5541   */\n      0x24\n        /* \"#utility.yul\":5534:5535   */\n      0x00\n        /* \"#utility.yul\":5527:5542   */\n      revert\n        /* \"#utility.yul\":5554:5734   */\n    tag_181:\n        /* \"#utility.yul\":5602:5679   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5599:5600   */\n      0x00\n        /* \"#utility.yul\":5592:5680   */\n      mstore\n        /* \"#utility.yul\":5699:5703   */\n      0x11\n        /* \"#utility.yul\":5696:5697   */\n      0x04\n        /* \"#utility.yul\":5689:5704   */\n      mstore\n        /* \"#utility.yul\":5723:5727   */\n      0x24\n        /* \"#utility.yul\":5720:5721   */\n      0x00\n        /* \"#utility.yul\":5713:5728   */\n      revert\n        /* \"#utility.yul\":5740:5925   */\n    tag_52:\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5797:5817   */\n      tag_243\n        /* \"#utility.yul\":5815:5816   */\n      dup3\n        /* \"#utility.yul\":5797:5817   */\n      tag_167\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5792:5817   */\n      swap2\n      pop\n        /* \"#utility.yul\":5831:5851   */\n      tag_244\n        /* \"#utility.yul\":5849:5850   */\n      dup4\n        /* \"#utility.yul\":5831:5851   */\n      tag_167\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5826:5851   */\n      swap3\n      pop\n        /* \"#utility.yul\":5870:5871   */\n      dup3\n        /* \"#utility.yul\":5860:5895   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":5875:5893   */\n      tag_246\n      tag_144\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5860:5895   */\n    tag_245:\n        /* \"#utility.yul\":5917:5918   */\n      dup3\n        /* \"#utility.yul\":5914:5915   */\n      dup3\n        /* \"#utility.yul\":5910:5919   */\n      div\n        /* \"#utility.yul\":5905:5919   */\n      swap1\n      pop\n        /* \"#utility.yul\":5740:5925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5931:6341   */\n    tag_54:\n        /* \"#utility.yul\":5971:5978   */\n      0x00\n        /* \"#utility.yul\":5994:6014   */\n      tag_248\n        /* \"#utility.yul\":6012:6013   */\n      dup3\n        /* \"#utility.yul\":5994:6014   */\n      tag_167\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5989:6014   */\n      swap2\n      pop\n        /* \"#utility.yul\":6028:6048   */\n      tag_249\n        /* \"#utility.yul\":6046:6047   */\n      dup4\n        /* \"#utility.yul\":6028:6048   */\n      tag_167\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6023:6048   */\n      swap3\n      pop\n        /* \"#utility.yul\":6083:6084   */\n      dup3\n        /* \"#utility.yul\":6080:6081   */\n      dup3\n        /* \"#utility.yul\":6076:6085   */\n      mul\n        /* \"#utility.yul\":6105:6135   */\n      tag_250\n        /* \"#utility.yul\":6123:6134   */\n      dup2\n        /* \"#utility.yul\":6105:6135   */\n      tag_167\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6094:6135   */\n      swap2\n      pop\n        /* \"#utility.yul\":6284:6285   */\n      dup3\n        /* \"#utility.yul\":6275:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6286   */\n      div\n        /* \"#utility.yul\":6268:6269   */\n      dup5\n        /* \"#utility.yul\":6265:6287   */\n      eq\n        /* \"#utility.yul\":6245:6246   */\n      dup4\n        /* \"#utility.yul\":6238:6247   */\n      iszero\n        /* \"#utility.yul\":6218:6301   */\n      or\n        /* \"#utility.yul\":6195:6334   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6314:6332   */\n      tag_252\n      tag_181\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6195:6334   */\n    tag_251:\n        /* \"#utility.yul\":5979:6341   */\n      pop\n        /* \"#utility.yul\":5931:6341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6347:6679   */\n    tag_58:\n        /* \"#utility.yul\":6468:6472   */\n      0x00\n        /* \"#utility.yul\":6506:6508   */\n      0x40\n        /* \"#utility.yul\":6495:6504   */\n      dup3\n        /* \"#utility.yul\":6491:6509   */\n      add\n        /* \"#utility.yul\":6483:6509   */\n      swap1\n      pop\n        /* \"#utility.yul\":6519:6590   */\n      tag_254\n        /* \"#utility.yul\":6587:6588   */\n      0x00\n        /* \"#utility.yul\":6576:6585   */\n      dup4\n        /* \"#utility.yul\":6572:6589   */\n      add\n        /* \"#utility.yul\":6563:6569   */\n      dup6\n        /* \"#utility.yul\":6519:6590   */\n      tag_173\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6600:6672   */\n      tag_255\n        /* \"#utility.yul\":6668:6670   */\n      0x20\n        /* \"#utility.yul\":6657:6666   */\n      dup4\n        /* \"#utility.yul\":6653:6671   */\n      add\n        /* \"#utility.yul\":6644:6650   */\n      dup5\n        /* \"#utility.yul\":6600:6672   */\n      tag_170\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6347:6679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6685:6907   */\n    tag_86:\n        /* \"#utility.yul\":6778:6782   */\n      0x00\n        /* \"#utility.yul\":6816:6818   */\n      0x20\n        /* \"#utility.yul\":6805:6814   */\n      dup3\n        /* \"#utility.yul\":6801:6819   */\n      add\n        /* \"#utility.yul\":6793:6819   */\n      swap1\n      pop\n        /* \"#utility.yul\":6829:6900   */\n      tag_257\n        /* \"#utility.yul\":6897:6898   */\n      0x00\n        /* \"#utility.yul\":6886:6895   */\n      dup4\n        /* \"#utility.yul\":6882:6899   */\n      add\n        /* \"#utility.yul\":6873:6879   */\n      dup5\n        /* \"#utility.yul\":6829:6900   */\n      tag_173\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6685:6907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208b522980815f2b397013e1e8ffdd0d02a1fae5f702cf25ac5d5c9d225322821764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_629": {
									"entryPoint": null,
									"id": 629,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "956:552:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1002:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:32:3"
															},
															"nodeType": "YulIf",
															"src": "966:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1095:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1139:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1233:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1278:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1372:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1417:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "910:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "921:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "933:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "941:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "949:6:3",
														"type": ""
													}
												],
												"src": "845:663:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040523480156200001157600080fd5b506040516200147e3803806200147e833981810160405281019062000037919062000146565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050620001a2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010e82620000e1565b9050919050565b620001208162000101565b81146200012c57600080fd5b50565b600081519050620001408162000115565b92915050565b600080600060608486031215620001625762000161620000dc565b5b600062000172868287016200012f565b935050602062000185868287016200012f565b925050604062000198868287016200012f565b9150509250925092565b60805160a05160c05161125862000226600039600061080a0152600081816101510152818161022e0152818161049801528181610616015281816106b701528181610a930152610be40152600081816102fc015281816103ba0152818161057501528181610751015281816108e8015281816109c50152610b4401526112586000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636caf25ce1161005b5780636caf25ce146100da5780637a16af7f146100f85780639c117f0f14610114578063a0a986f1146101305761007d565b80632af4ec3614610082578063443cb4bc1461009e5780635a76f25e146100bc575b600080fd5b61009c60048036038101906100979190610eb1565b61014e565b005b6100a66103a5565b6040516100b39190610eed565b60405180910390f35b6100c46103ab565b6040516100d19190610eed565b60405180910390f35b6100e26103b1565b6040516100ef9190610eed565b60405180910390f35b610112600480360381019061010d9190610f08565b6103b7565b005b61012e60048036038101906101299190610eb1565b6108e5565b005b610138610b3c565b6040516101459190610eed565b60405180910390f35b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101aa929190610f89565b602060405180830381865afa1580156101c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101eb9190610fc7565b101561022c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022390611051565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161028993929190611071565b6020604051808303816000875af11580156102a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cc91906110e0565b5060006002546001546102df919061116b565b826102ea919061119c565b905080600154116102fa57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103559291906111de565b6020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039891906110e0565b506103a1610b42565b5050565b60015481565b60025481565b60045481565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610413929190610f89565b602060405180830381865afa158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610fc7565b1015610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90611051565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104f1929190610f89565b602060405180830381865afa15801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190610fc7565b1015610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90611051565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105d093929190611071565b6020604051808303816000875af11580156105ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061391906110e0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161067193929190611071565b6020604051808303816000875af1158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b491906110e0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070e9190611207565b602060405180830381865afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190610fc7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a89190611207565b602060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190610fc7565b6107f3919061119c565b6000819055506000610806600054610cb0565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108639291906111de565b6020604051808303816000875af1158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a691906110e0565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516108d89291906111de565b60405180910390a1505050565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610941929190610f89565b602060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190610fc7565b10156109c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba90611051565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a2093929190611071565b6020604051808303816000875af1158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6391906110e0565b506000600154600254610a76919061116b565b82610a81919061119c565b90508060025411610a9157600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610aec9291906111de565b6020604051808303816000875af1158015610b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2f91906110e0565b50610b38610b42565b5050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b9b9190611207565b602060405180830381865afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc9190610fc7565b6001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c3b9190611207565b602060405180830381865afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190610fc7565b600281905550600154600254610c92919061116b565b600381905550600254600154610ca8919061116b565b600481905550565b6000808203610cc25760009050610e58565b60006001905060008390506000608082901c1115610ce957608081901c9050604082901b91505b6000604082901c1115610d0557604081901c9050602082901b91505b6000602082901c1115610d2157602081901c9050601082901b91505b6000601082901c1115610d3d57601081901c9050600882901b91505b6000600882901c1115610d5957600881901c9050600482901b91505b6000600482901c1115610d7557600481901c9050600282901b91505b6000600282901c1115610d8a57600182901b91505b6001828581610d9c57610d9b61110d565b5b048301901c91506001828581610db557610db461110d565b5b048301901c91506001828581610dce57610dcd61110d565b5b048301901c91506001828581610de757610de661110d565b5b048301901c91506001828581610e0057610dff61110d565b5b048301901c91506001828581610e1957610e1861110d565b5b048301901c91506001828581610e3257610e3161110d565b5b048301901c9150610e5382838681610e4d57610e4c61110d565b5b04610e5d565b925050505b919050565b6000818310610e6c5781610e6e565b825b905092915050565b600080fd5b6000819050919050565b610e8e81610e7b565b8114610e9957600080fd5b50565b600081359050610eab81610e85565b92915050565b600060208284031215610ec757610ec6610e76565b5b6000610ed584828501610e9c565b91505092915050565b610ee781610e7b565b82525050565b6000602082019050610f026000830184610ede565b92915050565b60008060408385031215610f1f57610f1e610e76565b5b6000610f2d85828601610e9c565b9250506020610f3e85828601610e9c565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7382610f48565b9050919050565b610f8381610f68565b82525050565b6000604082019050610f9e6000830185610f7a565b610fab6020830184610f7a565b9392505050565b600081519050610fc181610e85565b92915050565b600060208284031215610fdd57610fdc610e76565b5b6000610feb84828501610fb2565b91505092915050565b600082825260208201905092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b600061103b601583610ff4565b915061104682611005565b602082019050919050565b6000602082019050818103600083015261106a8161102e565b9050919050565b60006060820190506110866000830186610f7a565b6110936020830185610f7a565b6110a06040830184610ede565b949350505050565b60008115159050919050565b6110bd816110a8565b81146110c857600080fd5b50565b6000815190506110da816110b4565b92915050565b6000602082840312156110f6576110f5610e76565b5b6000611104848285016110cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061117682610e7b565b915061118183610e7b565b9250826111915761119061110d565b5b828204905092915050565b60006111a782610e7b565b91506111b283610e7b565b92508282026111c081610e7b565b915082820484148315176111d7576111d661113c565b5b5092915050565b60006040820190506111f36000830185610f7a565b6112006020830184610ede565b9392505050565b600060208201905061121c6000830184610f7a565b9291505056fea26469706673582212208b522980815f2b397013e1e8ffdd0d02a1fae5f702cf25ac5d5c9d225322821764736f6c63430008110033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x147E CODESIZE SUB DUP1 PUSH3 0x147E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x146 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1A2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E DUP3 PUSH3 0xE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x120 DUP2 PUSH3 0x101 JUMP JUMPDEST DUP2 EQ PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x140 DUP2 PUSH3 0x115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x162 JUMPI PUSH3 0x161 PUSH3 0xDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x172 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x185 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x198 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1258 PUSH3 0x226 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x80A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x151 ADD MSTORE DUP2 DUP2 PUSH2 0x22E ADD MSTORE DUP2 DUP2 PUSH2 0x498 ADD MSTORE DUP2 DUP2 PUSH2 0x616 ADD MSTORE DUP2 DUP2 PUSH2 0x6B7 ADD MSTORE DUP2 DUP2 PUSH2 0xA93 ADD MSTORE PUSH2 0xBE4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2FC ADD MSTORE DUP2 DUP2 PUSH2 0x3BA ADD MSTORE DUP2 DUP2 PUSH2 0x575 ADD MSTORE DUP2 DUP2 PUSH2 0x751 ADD MSTORE DUP2 DUP2 PUSH2 0x8E8 ADD MSTORE DUP2 DUP2 PUSH2 0x9C5 ADD MSTORE PUSH2 0xB44 ADD MSTORE PUSH2 0x1258 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CAF25CE GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x9C117F0F EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x130 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2AF4EC36 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP3 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x355 SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH2 0x3A1 PUSH2 0xB42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x430 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F1 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x532 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56A SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x690 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x806 PUSH1 0x0 SLOAD PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x8D8 SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x941 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x982 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BA SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xA76 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP3 PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEC SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2F SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH2 0xB38 PUSH2 0xB42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7C SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xCA8 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xCC2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCE9 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xE53 DUP3 DUP4 DUP7 DUP2 PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV PUSH2 0xE5D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xE6C JUMPI DUP2 PUSH2 0xE6E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8E DUP2 PUSH2 0xE7B JUMP JUMPDEST DUP2 EQ PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEAB DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP5 DUP3 DUP6 ADD PUSH2 0xE9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0xE7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2D DUP6 DUP3 DUP7 ADD PUSH2 0xE9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3E DUP6 DUP3 DUP7 ADD PUSH2 0xE9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF73 DUP3 PUSH2 0xF48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xF68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF9E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xFAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFC1 DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFEB DUP5 DUP3 DUP6 ADD PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103B PUSH1 0x15 DUP4 PUSH2 0xFF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1046 DUP3 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106A DUP2 PUSH2 0x102E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1086 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x1093 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x10A0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BD DUP2 PUSH2 0x10A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10DA DUP2 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F5 PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1104 DUP5 DUP3 DUP6 ADD PUSH2 0x10CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1176 DUP3 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0x1181 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A7 DUP3 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11C0 DUP2 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11D7 JUMPI PUSH2 0x11D6 PUSH2 0x113C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x1200 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x121C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 MSTORE 0x29 DUP1 DUP2 0x5F 0x2B CODECOPY PUSH17 0x13E1E8FFDD0D02A1FAE5F702CF25AC5D5C SWAP14 0x22 MSTORE8 0x22 DUP3 OR PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:2396:2:-:0;;;545:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;631:7;622:16;;;;;;;;;;657:7;648:16;;;;;;;;;;687:11;674:24;;;;;;;;;;545:160;;;224:2396;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;224:2396:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get0_847": {
									"entryPoint": 334,
									"id": 847,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@get1_913": {
									"entryPoint": 2277,
									"id": 913,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@min_42": {
									"entryPoint": 3677,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price0_599": {
									"entryPoint": 2876,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price1_601": {
									"entryPoint": 945,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@provideLiquidity_781": {
									"entryPoint": 951,
									"id": 781,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@reserve0_595": {
									"entryPoint": 933,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_597": {
									"entryPoint": 939,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_466": {
									"entryPoint": 3248,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@update_669": {
									"entryPoint": 2882,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6910:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1460:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1506:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1508:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1508:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1508:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1481:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1473:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:32:3"
															},
															"nodeType": "YulIf",
															"src": "1470:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1599:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1614:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1628:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1618:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1643:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1678:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1689:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1674:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1698:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1653:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1643:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1726:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1741:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1745:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1771:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1806:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1817:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1802:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1802:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1826:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1781:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1422:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1433:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1445:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1453:6:3",
														"type": ""
													}
												],
												"src": "1377:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1902:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1912:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1934:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1923:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1912:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1884:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1894:7:3",
														"type": ""
													}
												],
												"src": "1857:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2034:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2044:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2073:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2055:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2044:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2016:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2026:7:3",
														"type": ""
													}
												],
												"src": "1989:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2173:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2196:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2178:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2166:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2144:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2151:3:3",
														"type": ""
													}
												],
												"src": "2091:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2341:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2351:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2363:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2374:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2359:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2351:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2431:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2387:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2387:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2512:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2536:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2521:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2468:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2468:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2305:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2317:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2325:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2336:4:3",
														"type": ""
													}
												],
												"src": "2215:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2616:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2626:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2635:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2626:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2684:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2657:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2657:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2594:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2602:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2610:5:3",
														"type": ""
													}
												],
												"src": "2553:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2779:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2825:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2827:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2827:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2827:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2800:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2809:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2796:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2796:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2821:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2792:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:32:3"
															},
															"nodeType": "YulIf",
															"src": "2789:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2918:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2933:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2947:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2937:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2962:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3008:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3019:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3004:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3004:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2972:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2972:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2962:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2749:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2760:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2772:6:3",
														"type": ""
													}
												],
												"src": "2702:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3155:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3172:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3177:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3193:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3193:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3127:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3132:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3143:11:3",
														"type": ""
													}
												],
												"src": "3059:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3362:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3370:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3358:14:3"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3374:23:3",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3351:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3351:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3351:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3332:6:3",
														"type": ""
													}
												],
												"src": "3234:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3557:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3567:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3633:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3638:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3574:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3567:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3739:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nodeType": "YulIdentifier",
																	"src": "3650:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3650:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3752:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3763:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3768:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3759:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3545:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3553:3:3",
														"type": ""
													}
												],
												"src": "3411:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3964:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3976:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3987:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3972:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3964:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4011:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4022:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4030:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4036:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4026:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4000:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4000:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4056:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4190:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4064:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4056:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3934:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3949:4:3",
														"type": ""
													}
												],
												"src": "3783:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4362:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4372:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4384:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4395:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4372:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4452:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4476:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4408:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4408:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4533:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4546:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4557:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4542:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4542:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4489:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4489:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4615:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4639:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4624:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4624:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4571:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4571:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4318:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4330:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4338:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4346:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4357:4:3",
														"type": ""
													}
												],
												"src": "4208:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4698:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4708:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4733:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4726:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4726:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4719:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4719:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4708:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4680:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4690:7:3",
														"type": ""
													}
												],
												"src": "4656:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4792:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4846:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4855:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4858:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4848:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4848:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4848:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4815:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4837:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4822:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4822:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4812:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4805:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:40:3"
															},
															"nodeType": "YulIf",
															"src": "4802:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4785:5:3",
														"type": ""
													}
												],
												"src": "4752:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4934:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4944:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4959:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4953:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4944:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4999:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4975:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4975:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4912:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4920:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4928:5:3",
														"type": ""
													}
												],
												"src": "4874:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5091:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5137:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5139:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5139:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5139:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5112:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5121:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5108:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5108:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5133:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:32:3"
															},
															"nodeType": "YulIf",
															"src": "5101:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5230:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5245:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5259:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5249:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5274:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5317:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5328:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5313:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5313:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5337:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5284:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5284:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5274:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5061:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5072:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5084:6:3",
														"type": ""
													}
												],
												"src": "5017:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5396:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5416:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5406:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5513:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5503:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5503:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5534:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5537:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5527:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5527:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5368:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5582:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5602:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5592:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5696:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5699:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5689:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5689:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5689:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5720:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5723:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5713:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5713:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5554:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5782:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5792:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5815:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5797:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5797:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5792:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5826:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5849:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5831:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5826:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5873:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5875:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5875:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5875:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5870:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5863:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:9:3"
															},
															"nodeType": "YulIf",
															"src": "5860:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5905:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5914:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5917:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5905:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5771:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5774:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5780:1:3",
														"type": ""
													}
												],
												"src": "5740:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5979:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5989:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6012:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5994:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5989:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6023:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6046:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6028:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6023:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6057:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6080:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6076:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6076:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6061:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6094:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6123:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6105:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6094:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6312:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6314:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6314:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6314:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6245:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6238:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6238:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6268:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6275:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6284:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6271:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6271:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6265:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6265:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6218:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6218:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6198:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6198:113:3"
															},
															"nodeType": "YulIf",
															"src": "6195:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5962:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5965:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5971:7:3",
														"type": ""
													}
												],
												"src": "5931:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6473:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6483:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6495:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6506:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6491:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6483:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6576:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6572:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6519:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6519:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6644:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6657:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6668:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6653:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6653:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6600:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6600:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6600:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6437:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6449:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6457:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6468:4:3",
														"type": ""
													}
												],
												"src": "6347:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6783:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6793:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6805:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6816:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6801:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6793:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6873:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6886:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6897:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6882:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6882:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6829:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6829:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6755:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6767:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6778:4:3",
														"type": ""
													}
												],
												"src": "6685:222:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"587": [
									{
										"length": 32,
										"start": 764
									},
									{
										"length": 32,
										"start": 954
									},
									{
										"length": 32,
										"start": 1397
									},
									{
										"length": 32,
										"start": 1873
									},
									{
										"length": 32,
										"start": 2280
									},
									{
										"length": 32,
										"start": 2501
									},
									{
										"length": 32,
										"start": 2884
									}
								],
								"589": [
									{
										"length": 32,
										"start": 337
									},
									{
										"length": 32,
										"start": 558
									},
									{
										"length": 32,
										"start": 1176
									},
									{
										"length": 32,
										"start": 1558
									},
									{
										"length": 32,
										"start": 1719
									},
									{
										"length": 32,
										"start": 2707
									},
									{
										"length": 32,
										"start": 3044
									}
								],
								"591": [
									{
										"length": 32,
										"start": 2058
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80636caf25ce1161005b5780636caf25ce146100da5780637a16af7f146100f85780639c117f0f14610114578063a0a986f1146101305761007d565b80632af4ec3614610082578063443cb4bc1461009e5780635a76f25e146100bc575b600080fd5b61009c60048036038101906100979190610eb1565b61014e565b005b6100a66103a5565b6040516100b39190610eed565b60405180910390f35b6100c46103ab565b6040516100d19190610eed565b60405180910390f35b6100e26103b1565b6040516100ef9190610eed565b60405180910390f35b610112600480360381019061010d9190610f08565b6103b7565b005b61012e60048036038101906101299190610eb1565b6108e5565b005b610138610b3c565b6040516101459190610eed565b60405180910390f35b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101aa929190610f89565b602060405180830381865afa1580156101c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101eb9190610fc7565b101561022c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022390611051565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161028993929190611071565b6020604051808303816000875af11580156102a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cc91906110e0565b5060006002546001546102df919061116b565b826102ea919061119c565b905080600154116102fa57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103559291906111de565b6020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039891906110e0565b506103a1610b42565b5050565b60015481565b60025481565b60045481565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610413929190610f89565b602060405180830381865afa158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610fc7565b1015610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90611051565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104f1929190610f89565b602060405180830381865afa15801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190610fc7565b1015610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90611051565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105d093929190611071565b6020604051808303816000875af11580156105ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061391906110e0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161067193929190611071565b6020604051808303816000875af1158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b491906110e0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070e9190611207565b602060405180830381865afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190610fc7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a89190611207565b602060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190610fc7565b6107f3919061119c565b6000819055506000610806600054610cb0565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108639291906111de565b6020604051808303816000875af1158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a691906110e0565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516108d89291906111de565b60405180910390a1505050565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610941929190610f89565b602060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190610fc7565b10156109c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba90611051565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a2093929190611071565b6020604051808303816000875af1158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6391906110e0565b506000600154600254610a76919061116b565b82610a81919061119c565b90508060025411610a9157600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610aec9291906111de565b6020604051808303816000875af1158015610b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2f91906110e0565b50610b38610b42565b5050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b9b9190611207565b602060405180830381865afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc9190610fc7565b6001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c3b9190611207565b602060405180830381865afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190610fc7565b600281905550600154600254610c92919061116b565b600381905550600254600154610ca8919061116b565b600481905550565b6000808203610cc25760009050610e58565b60006001905060008390506000608082901c1115610ce957608081901c9050604082901b91505b6000604082901c1115610d0557604081901c9050602082901b91505b6000602082901c1115610d2157602081901c9050601082901b91505b6000601082901c1115610d3d57601081901c9050600882901b91505b6000600882901c1115610d5957600881901c9050600482901b91505b6000600482901c1115610d7557600481901c9050600282901b91505b6000600282901c1115610d8a57600182901b91505b6001828581610d9c57610d9b61110d565b5b048301901c91506001828581610db557610db461110d565b5b048301901c91506001828581610dce57610dcd61110d565b5b048301901c91506001828581610de757610de661110d565b5b048301901c91506001828581610e0057610dff61110d565b5b048301901c91506001828581610e1957610e1861110d565b5b048301901c91506001828581610e3257610e3161110d565b5b048301901c9150610e5382838681610e4d57610e4c61110d565b5b04610e5d565b925050505b919050565b6000818310610e6c5781610e6e565b825b905092915050565b600080fd5b6000819050919050565b610e8e81610e7b565b8114610e9957600080fd5b50565b600081359050610eab81610e85565b92915050565b600060208284031215610ec757610ec6610e76565b5b6000610ed584828501610e9c565b91505092915050565b610ee781610e7b565b82525050565b6000602082019050610f026000830184610ede565b92915050565b60008060408385031215610f1f57610f1e610e76565b5b6000610f2d85828601610e9c565b9250506020610f3e85828601610e9c565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7382610f48565b9050919050565b610f8381610f68565b82525050565b6000604082019050610f9e6000830185610f7a565b610fab6020830184610f7a565b9392505050565b600081519050610fc181610e85565b92915050565b600060208284031215610fdd57610fdc610e76565b5b6000610feb84828501610fb2565b91505092915050565b600082825260208201905092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b600061103b601583610ff4565b915061104682611005565b602082019050919050565b6000602082019050818103600083015261106a8161102e565b9050919050565b60006060820190506110866000830186610f7a565b6110936020830185610f7a565b6110a06040830184610ede565b949350505050565b60008115159050919050565b6110bd816110a8565b81146110c857600080fd5b50565b6000815190506110da816110b4565b92915050565b6000602082840312156110f6576110f5610e76565b5b6000611104848285016110cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061117682610e7b565b915061118183610e7b565b9250826111915761119061110d565b5b828204905092915050565b60006111a782610e7b565b91506111b283610e7b565b92508282026111c081610e7b565b915082820484148315176111d7576111d661113c565b5b5092915050565b60006040820190506111f36000830185610f7a565b6112006020830184610ede565b9392505050565b600060208201905061121c6000830184610f7a565b9291505056fea26469706673582212208b522980815f2b397013e1e8ffdd0d02a1fae5f702cf25ac5d5c9d225322821764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CAF25CE GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x9C117F0F EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x130 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2AF4EC36 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP3 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x355 SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH2 0x3A1 PUSH2 0xB42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x430 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F1 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x532 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56A SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x690 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x806 PUSH1 0x0 SLOAD PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x8D8 SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x941 SWAP3 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x982 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST LT ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BA SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xA76 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP3 PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEC SWAP3 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2F SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH2 0xB38 PUSH2 0xB42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7C SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xCA8 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xCC2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCE9 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD59 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xE00 JUMPI PUSH2 0xDFF PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xE53 DUP3 DUP4 DUP7 DUP2 PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0x110D JUMP JUMPDEST JUMPDEST DIV PUSH2 0xE5D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xE6C JUMPI DUP2 PUSH2 0xE6E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8E DUP2 PUSH2 0xE7B JUMP JUMPDEST DUP2 EQ PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEAB DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP5 DUP3 DUP6 ADD PUSH2 0xE9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP2 PUSH2 0xE7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2D DUP6 DUP3 DUP7 ADD PUSH2 0xE9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3E DUP6 DUP3 DUP7 ADD PUSH2 0xE9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF73 DUP3 PUSH2 0xF48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xF68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF9E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xFAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFC1 DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFEB DUP5 DUP3 DUP6 ADD PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103B PUSH1 0x15 DUP4 PUSH2 0xFF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1046 DUP3 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106A DUP2 PUSH2 0x102E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1086 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x1093 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x10A0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BD DUP2 PUSH2 0x10A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10DA DUP2 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F5 PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1104 DUP5 DUP3 DUP6 ADD PUSH2 0x10CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1176 DUP3 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0x1181 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x110D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A7 DUP3 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11C0 DUP2 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11D7 JUMPI PUSH2 0x11D6 PUSH2 0x113C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x1200 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x121C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 MSTORE 0x29 DUP1 DUP2 0x5F 0x2B CODECOPY PUSH17 0x13E1E8FFDD0D02A1FAE5F702CF25AC5D5C SWAP14 0x22 MSTORE8 0x22 DUP3 OR PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "224:2396:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;357:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;386;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;442:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:691;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2104:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;415:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1645:453;1757:8;1709:6;1702:24;;;1727:10;1747:4;1702:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1694:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1808:6;1801:27;;;1829:10;1849:4;1856:8;1801:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1875:17;1918:8;;1907;;:19;;;;:::i;:::-;1895:8;:32;;;;:::i;:::-;1875:52;;1953:9;1941:8;;:21;1937:136;;1978:8;;;1937:136;2023:6;2016:23;;;2040:10;2052:9;2016:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2083:8;:6;:8::i;:::-;1684:414;1645:453;:::o;357:23::-;;;;:::o;386:::-;;;;:::o;442:21::-;;;;:::o;948:691::-;1092:8;1044:6;1037:24;;;1062:10;1082:4;1037:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1029:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1199:8;1151:6;1144:24;;;1169:10;1189:4;1144:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1136:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1250:6;1243:27;;;1271:10;1291:4;1298:8;1243:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1324:6;1317:27;;;1345:10;1365:4;1372:8;1317:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1448:6;1441:24;;;1474:4;1441:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1406:6;1399:24;;;1432:4;1399:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;;:::i;:::-;1391:5;:89;;;;1490:14;1507:16;1517:5;;1507:9;:16::i;:::-;1490:33;;1540:10;1533:27;;;1561:10;1573:6;1533:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1595:37;1613:10;1625:6;1595:37;;;;;;;:::i;:::-;;;;;;;;1019:620;948:691;;:::o;2104:453::-;2216:8;2168:6;2161:24;;;2186:10;2206:4;2161:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;2153:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2267:6;2260:27;;;2288:10;2308:4;2315:8;2260:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2334:17;2377:8;;2366;;:19;;;;:::i;:::-;2354:8;:32;;;;:::i;:::-;2334:52;;2412:9;2400:8;;:21;2396:136;;2437:8;;;2396:136;2482:6;2475:23;;;2499:10;2511:9;2475:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2542:8;:6;:8::i;:::-;2143:414;2104:453;:::o;415:21::-;;;;:::o;711:229::-;765:6;758:24;;;791:4;758:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;747:8;:50;;;;825:6;818:24;;;851:4;818:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;807:8;:50;;;;887:8;;876;;:19;;;;:::i;:::-;867:6;:28;;;;925:8;;914;;:19;;;;:::i;:::-;905:6;:28;;;;711:229::o;6281:2206:0:-;6329:7;6357:1;6352;:6;6348:45;;6381:1;6374:8;;;;6348:45;7058:14;7075:1;7058:18;;7086:9;7098:1;7086:13;;7124:1;7118:3;7113:1;:8;;:12;7109:79;;;7147:3;7141:9;;;;;7175:2;7164:13;;;;;7109:79;7211:1;7206:2;7201:1;:7;;:11;7197:77;;;7234:2;7228:8;;;;;7261:2;7250:13;;;;;7197:77;7297:1;7292:2;7287:1;:7;;:11;7283:77;;;7320:2;7314:8;;;;;7347:2;7336:13;;;;;7283:77;7383:1;7378:2;7373:1;:7;;:11;7369:76;;;7406:2;7400:8;;;;;7433:1;7422:12;;;;;7369:76;7467:1;7463;7458;:6;;:10;7454:74;;;7490:1;7484:7;;;;;7516:1;7505:12;;;;;7454:74;7550:1;7546;7541;:6;;:10;7537:74;;;7573:1;7567:7;;;;;7599:1;7588:12;;;;;7537:74;7633:1;7629;7624;:6;;:10;7620:53;;;7661:1;7650:12;;;;;7620:53;8131:1;8120:6;8116:1;:10;;;;;:::i;:::-;;;8107:6;:19;8106:26;;8097:35;;8180:1;8169:6;8165:1;:10;;;;;:::i;:::-;;;8156:6;:19;8155:26;;8146:35;;8229:1;8218:6;8214:1;:10;;;;;:::i;:::-;;;8205:6;:19;8204:26;;8195:35;;8278:1;8267:6;8263:1;:10;;;;;:::i;:::-;;;8254:6;:19;8253:26;;8244:35;;8327:1;8316:6;8312:1;:10;;;;;:::i;:::-;;;8303:6;:19;8302:26;;8293:35;;8376:1;8365:6;8361:1;:10;;;;;:::i;:::-;;;8352:6;:19;8351:26;;8342:35;;8425:1;8414:6;8410:1;:10;;;;;:::i;:::-;;;8401:6;:19;8400:26;;8391:35;;8447:23;8451:6;8463;8459:1;:10;;;;;:::i;:::-;;;8447:3;:23::i;:::-;8440:30;;;;6281:2206;;;;:::o;589:104::-;647:7;677:1;673;:5;:13;;685:1;673:13;;;681:1;673:13;666:20;;589:104;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:474::-;1445:6;1453;1502:2;1490:9;1481:7;1477:23;1473:32;1470:119;;;1508:79;;:::i;:::-;1470:119;1628:1;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1599:117;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1377:474;;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:96::-;2026:7;2055:24;2073:5;2055:24;:::i;:::-;2044:35;;1989:96;;;:::o;2091:118::-;2178:24;2196:5;2178:24;:::i;:::-;2173:3;2166:37;2091:118;;:::o;2215:332::-;2336:4;2374:2;2363:9;2359:18;2351:26;;2387:71;2455:1;2444:9;2440:17;2431:6;2387:71;:::i;:::-;2468:72;2536:2;2525:9;2521:18;2512:6;2468:72;:::i;:::-;2215:332;;;;;:::o;2553:143::-;2610:5;2641:6;2635:13;2626:22;;2657:33;2684:5;2657:33;:::i;:::-;2553:143;;;;:::o;2702:351::-;2772:6;2821:2;2809:9;2800:7;2796:23;2792:32;2789:119;;;2827:79;;:::i;:::-;2789:119;2947:1;2972:64;3028:7;3019:6;3008:9;3004:22;2972:64;:::i;:::-;2962:74;;2918:128;2702:351;;;;:::o;3059:169::-;3143:11;3177:6;3172:3;3165:19;3217:4;3212:3;3208:14;3193:29;;3059:169;;;;:::o;3234:171::-;3374:23;3370:1;3362:6;3358:14;3351:47;3234:171;:::o;3411:366::-;3553:3;3574:67;3638:2;3633:3;3574:67;:::i;:::-;3567:74;;3650:93;3739:3;3650:93;:::i;:::-;3768:2;3763:3;3759:12;3752:19;;3411:366;;;:::o;3783:419::-;3949:4;3987:2;3976:9;3972:18;3964:26;;4036:9;4030:4;4026:20;4022:1;4011:9;4007:17;4000:47;4064:131;4190:4;4064:131;:::i;:::-;4056:139;;3783:419;;;:::o;4208:442::-;4357:4;4395:2;4384:9;4380:18;4372:26;;4408:71;4476:1;4465:9;4461:17;4452:6;4408:71;:::i;:::-;4489:72;4557:2;4546:9;4542:18;4533:6;4489:72;:::i;:::-;4571;4639:2;4628:9;4624:18;4615:6;4571:72;:::i;:::-;4208:442;;;;;;:::o;4656:90::-;4690:7;4733:5;4726:13;4719:21;4708:32;;4656:90;;;:::o;4752:116::-;4822:21;4837:5;4822:21;:::i;:::-;4815:5;4812:32;4802:60;;4858:1;4855;4848:12;4802:60;4752:116;:::o;4874:137::-;4928:5;4959:6;4953:13;4944:22;;4975:30;4999:5;4975:30;:::i;:::-;4874:137;;;;:::o;5017:345::-;5084:6;5133:2;5121:9;5112:7;5108:23;5104:32;5101:119;;;5139:79;;:::i;:::-;5101:119;5259:1;5284:61;5337:7;5328:6;5317:9;5313:22;5284:61;:::i;:::-;5274:71;;5230:125;5017:345;;;;:::o;5368:180::-;5416:77;5413:1;5406:88;5513:4;5510:1;5503:15;5537:4;5534:1;5527:15;5554:180;5602:77;5599:1;5592:88;5699:4;5696:1;5689:15;5723:4;5720:1;5713:15;5740:185;5780:1;5797:20;5815:1;5797:20;:::i;:::-;5792:25;;5831:20;5849:1;5831:20;:::i;:::-;5826:25;;5870:1;5860:35;;5875:18;;:::i;:::-;5860:35;5917:1;5914;5910:9;5905:14;;5740:185;;;;:::o;5931:410::-;5971:7;5994:20;6012:1;5994:20;:::i;:::-;5989:25;;6028:20;6046:1;6028:20;:::i;:::-;6023:25;;6083:1;6080;6076:9;6105:30;6123:11;6105:30;:::i;:::-;6094:41;;6284:1;6275:7;6271:15;6268:1;6265:22;6245:1;6238:9;6218:83;6195:139;;6314:18;;:::i;:::-;6195:139;5979:362;5931:410;;;;:::o;6347:332::-;6468:4;6506:2;6495:9;6491:18;6483:26;;6519:71;6587:1;6576:9;6572:17;6563:6;6519:71;:::i;:::-;6600:72;6668:2;6657:9;6653:18;6644:6;6600:72;:::i;:::-;6347:332;;;;;:::o;6685:222::-;6778:4;6816:2;6805:9;6801:18;6793:26;;6829:71;6897:1;6886:9;6882:17;6873:6;6829:71;:::i;:::-;6685:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "939200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"get0(uint256)": "infinite",
								"get1(uint256)": "infinite",
								"price0()": "2495",
								"price1()": "2429",
								"provideLiquidity(uint256,uint256)": "infinite",
								"reserve0()": "2452",
								"reserve1()": "2474"
							},
							"internal": {
								"update()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 705,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 705,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 705,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 705,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 705,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 545,
									"end": 705,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 545,
									"end": 705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 545,
									"end": 705,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 622,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 622,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 622,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 622,
									"end": 638,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 622,
									"end": 638,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 622,
									"end": 638,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 622,
									"end": 638,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 657,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 664,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 648,
									"end": 664,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 648,
									"end": 664,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 648,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 664,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 648,
									"end": 664,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 648,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 664,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 648,
									"end": 664,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 648,
									"end": 664,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 687,
									"end": 698,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 674,
									"end": 698,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 698,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 674,
									"end": 698,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 674,
									"end": 698,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 674,
									"end": 698,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 698,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 674,
									"end": 698,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 674,
									"end": 698,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 674,
									"end": 698,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 674,
									"end": 698,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 545,
									"end": 705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "591"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "589"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "587"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2620,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b522980815f2b397013e1e8ffdd0d02a1fae5f702cf25ac5d5c9d225322821764736f6c63430008110033",
									".code": [
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "6CAF25CE"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "6CAF25CE"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "7A16AF7F"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "9C117F0F"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "A0A986F1"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "2AF4EC36"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "443CB4BC"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "5A76F25E"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2620,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1645,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1645,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 357,
											"end": 380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 386,
											"end": 409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 442,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 442,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2104,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2104,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 415,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 415,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1702,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1751,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1702,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1765,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1765,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1694,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1694,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1814,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1801,
											"end": 1828,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1828,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1828,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1829,
											"end": 1839,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1853,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1864,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1801,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1801,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1915,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1907,
											"end": 1915,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1907,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1895,
											"end": 1927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1895,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1927,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1895,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1962,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1949,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1941,
											"end": 1949,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1962,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1937,
											"end": 2073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2073,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1937,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2040,
											"end": 2050,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2016,
											"end": 2062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2016,
											"end": 2062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2083,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 2098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 357,
											"end": 380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1037,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1086,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1037,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1037,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1037,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1029,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1029,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1144,
											"end": 1168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1168,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1193,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1144,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1144,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1144,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1207,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1207,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1136,
											"end": 1233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1136,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1243,
											"end": 1270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1270,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1271,
											"end": 1281,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1295,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1298,
											"end": 1306,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1243,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1243,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1317,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1345,
											"end": 1355,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1317,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1317,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1441,
											"end": 1465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1441,
											"end": 1465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1465,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1441,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1441,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1432,
											"end": 1436,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1399,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1399,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1399,
											"end": 1480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1399,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1480,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1399,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1480,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1517,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1507,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1523,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1507,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1550,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "591"
										},
										{
											"begin": 1533,
											"end": 1560,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1560,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1560,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1561,
											"end": 1571,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1533,
											"end": 1580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1533,
											"end": 1580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "PUSH",
											"source": 2,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1595,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2186,
											"end": 2196,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2161,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2161,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2161,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2153,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2153,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2288,
											"end": 2298,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2312,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2260,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2260,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2385,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2377,
											"end": 2385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2374,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2366,
											"end": 2374,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2366,
											"end": 2385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2366,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2366,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2354,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2400,
											"end": 2408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2421,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2396,
											"end": 2532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2437,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2437,
											"end": 2445,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2532,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2396,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 2475,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2498,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2499,
											"end": 2509,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2475,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2475,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2542,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2542,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2542,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 415,
											"end": 436,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 415,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 940,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 711,
											"end": 940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 765,
											"end": 771,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 758,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 782,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 758,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 791,
											"end": 795,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 758,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 758,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 747,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 797,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 747,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 825,
											"end": 831,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 818,
											"end": 842,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 818,
											"end": 842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 818,
											"end": 842,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 851,
											"end": 855,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 818,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 818,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 857,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 818,
											"end": 857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 807,
											"end": 857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 857,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 887,
											"end": 895,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 876,
											"end": 884,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 876,
											"end": 895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 876,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 895,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 876,
											"end": 895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 867,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 867,
											"end": 895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 867,
											"end": 895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 867,
											"end": 895,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 867,
											"end": 895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 933,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 925,
											"end": 933,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 922,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 914,
											"end": 933,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 914,
											"end": 933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 914,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 914,
											"end": 933,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 914,
											"end": 933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 905,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 905,
											"end": 933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 905,
											"end": 933,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 905,
											"end": 933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8116,
											"end": 8126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8165,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8214,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8263,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8312,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8361,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8410,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8459,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8447,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1459,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1508,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1698,
											"end": 1705,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1653,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1599,
											"end": 1716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1824,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1781,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2055,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2178,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2176,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2547,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2215,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2437,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2387,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2387,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2468,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2468,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2547,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2547,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2696,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2553,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2647,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2635,
											"end": 2648,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2684,
											"end": 2689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2657,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2690,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2657,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2696,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 3053,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2702,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2823,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2819,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2824,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2908,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2789,
											"end": 2908,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2827,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2908,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2789,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3026,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2972,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3036,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2972,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 3046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 3053,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 3053,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 3053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 3053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 3053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3228,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3059,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3183,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3172,
											"end": 3175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3184,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3221,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3228,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3405,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3234,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3374,
											"end": 3397,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3368,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3358,
											"end": 3372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3351,
											"end": 3398,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3777,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3411,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3638,
											"end": 3640,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3633,
											"end": 3636,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3574,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3641,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3574,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3567,
											"end": 3641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3567,
											"end": 3641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3650,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3743,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3650,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 3771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3777,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 4202,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3783,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3989,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4026,
											"end": 4046,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4047,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4190,
											"end": 4194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4064,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4195,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4064,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 4202,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 4202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 4202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 4202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4397,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4384,
											"end": 4393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4372,
											"end": 4398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4372,
											"end": 4398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4408,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4474,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4408,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4408,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4408,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4408,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4557,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4555,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4489,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4561,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4489,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4639,
											"end": 4641,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4571,
											"end": 4643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4643,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4571,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4746,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4656,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4739,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4719,
											"end": 4740,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4868,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4752,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4822,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4815,
											"end": 4820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4812,
											"end": 4844,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4802,
											"end": 4862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4860,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4862,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4802,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5011,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4874,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4965,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4966,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4999,
											"end": 5004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4975,
											"end": 5005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 5005,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4975,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5011,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5362,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5017,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5121,
											"end": 5130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5131,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5136,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5139,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5139,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5337,
											"end": 5344,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5334,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5284,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5284,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5284,
											"end": 5345,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5284,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5274,
											"end": 5345,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5274,
											"end": 5345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5548,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5368,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5503,
											"end": 5518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5541,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5534,
											"end": 5535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5554,
											"end": 5734,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5554,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5679,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5599,
											"end": 5600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5680,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5699,
											"end": 5703,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5696,
											"end": 5697,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5689,
											"end": 5704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5727,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5797,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5849,
											"end": 5850,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5831,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 5851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 5851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 5871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5875,
											"end": 5893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5919,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5905,
											"end": 5919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5905,
											"end": 5919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 6341,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5931,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5994,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5994,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6028,
											"end": 6048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6028,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6023,
											"end": 6048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6023,
											"end": 6048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6080,
											"end": 6081,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6076,
											"end": 6085,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6123,
											"end": 6134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6105,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6135,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6105,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6284,
											"end": 6285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6286,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6268,
											"end": 6269,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6245,
											"end": 6246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6301,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6195,
											"end": 6334,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6314,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6334,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6195,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 6341,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 6341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 6341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 6341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 6341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6679,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6347,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6483,
											"end": 6509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6483,
											"end": 6509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6587,
											"end": 6588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6519,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6590,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6519,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6668,
											"end": 6670,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6657,
											"end": 6666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6600,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6672,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6600,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6679,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6679,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6907,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6685,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6818,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6897,
											"end": 6898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6879,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6829,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6900,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6829,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6907,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6907,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6907,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6907,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"get0(uint256)": "2af4ec36",
							"get1(uint256)": "9c117f0f",
							"price0()": "a0a986f1",
							"price1()": "6caf25ce",
							"provideLiquidity(uint256,uint256)": "7a16af7f",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ltrAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"get0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"}],\"name\":\"get1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0xa7911dfe5d59f44facc5d002bbafdf95f25f62d96d152fcdc14b2f5f1dfa1d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aee8d23aed431e8ed7c63a03050c24ee6ef59ec15ef7de12174bceb55c2fd1f5\",\"dweb:/ipfs/QmcPVFHSg959ztq1uscLKnBmtFMigTnTQNDSqdm6Q2zQgg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 593,
								"contract": "contracts/Pool.sol:Pool",
								"label": "kLast",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 595,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve0",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 597,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve1",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 599,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price0",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 601,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5960:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nameLocations": [
															"5817:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8732:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nameLocations": [
															"8612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 515,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 524,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 581,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 581,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 581,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 581,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 581,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 581,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2660:1"
				},
				"id": 1
			},
			"contracts/Pool.sol": {
				"ast": {
					"absolutePath": "contracts/Pool.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						],
						"Math": [
							503
						],
						"Pool": [
							914
						]
					},
					"id": 915,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 915,
							"sourceUnit": 582,
							"src": "146:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 915,
							"sourceUnit": 504,
							"src": "169:53:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Pool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 914,
							"linearizedBaseContracts": [
								914
							],
							"name": "Pool",
							"nameLocation": "233:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 587,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "262:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "244:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 586,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 589,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "292:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "274:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 591,
									"mutability": "immutable",
									"name": "ltrAddress",
									"nameLocation": "322:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "304:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "304:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 593,
									"mutability": "mutable",
									"name": "kLast",
									"nameLocation": "346:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "338:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 595,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "372:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "357:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 597,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "401:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "386:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 596,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "386:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0a986f1",
									"id": 599,
									"mutability": "mutable",
									"name": "price0",
									"nameLocation": "430:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "415:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "415:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6caf25ce",
									"id": 601,
									"mutability": "mutable",
									"name": "price1",
									"nameLocation": "457:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 914,
									"src": "442:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6",
									"id": 607,
									"name": "liquidityProvided",
									"nameLocation": "476:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "502:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "494:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "530:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "522:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:45:2"
									},
									"src": "470:69:2"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "612:93:2",
										"statements": [
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 616,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "622:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 617,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "631:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "622:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "622:16:2"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "648:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "648:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "648:16:2"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 624,
														"name": "ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "674:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 625,
														"name": "_ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "687:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "674:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "674:24:2"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "582:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "574:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_ltrAddress",
												"nameLocation": "599:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "591:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:55:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:0:2"
									},
									"scope": 914,
									"src": "545:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "737:203:2",
										"statements": [
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "747:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 639,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "791:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$914",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$914",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "783:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 637,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "783:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "783:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 634,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "765:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 633,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "758:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "758:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "773:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "758:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "758:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "747:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "747:50:2"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "807:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 651,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "851:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$914",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$914",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "843:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "843:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "843:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 646,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "825:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 645,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "818:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "818:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "833:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "818:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "818:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "807:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "807:50:2"
											},
											{
												"expression": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "price0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "867:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 657,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "876:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 658,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "887:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "876:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "867:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "867:28:2"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 662,
														"name": "price1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "905:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 663,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "914:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 664,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "925:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "914:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "905:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "905:28:2"
											}
										]
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "720:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:2:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:0:2"
									},
									"scope": 914,
									"src": "711:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "1019:620:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 681,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1062:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1066:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1062:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 685,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1082:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1074:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1074:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1074:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 678,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "1044:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 677,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1037:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1037:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1052:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1037:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1037:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 688,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1092:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1037:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1102:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1029:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1029:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "1029:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 698,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1169:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1173:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1169:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 702,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1189:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1181:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1181:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1181:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 695,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1151:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 694,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1144:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1144:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1159:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1144:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1144:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 705,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1199:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1144:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1209:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1136:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1136:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 714,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1271:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1275:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1271:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 718,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1291:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1283:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1283:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1283:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1298:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 711,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1250:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 710,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1243:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1243:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1258:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1243:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1243:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "1243:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1345:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1349:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1345:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 731,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1365:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1357:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1357:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1357:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1372:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 724,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1324:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 723,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1317:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1317:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1332:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1317:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1317:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1317:64:2"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1391:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 743,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1432:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$914",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$914",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1424:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1424:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1424:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 738,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "1406:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 737,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1399:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1399:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1414:9:2",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1399:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1399:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 752,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1474:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$914",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$914",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1466:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 750,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1466:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1466:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 747,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "1448:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 746,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1441:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1441:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1456:9:2",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1441:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1441:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1399:81:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1391:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1391:89:2"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "1498:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "1490:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1490:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1517:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 760,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1507:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$503_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:4:2",
														"memberName": "sqrt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "1507:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1507:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1490:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1561:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1565:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1561:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1573:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 766,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1540:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 765,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1533:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1533:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1552:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1533:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "1533:47:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 775,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1613:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1617:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1613:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1625:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1595:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1595:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "EmitStatement",
												"src": "1590:42:2"
											}
										]
									},
									"functionSelector": "7a16af7f",
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "957:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "982:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "974:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1000:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "992:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:36:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1019:0:2"
									},
									"scope": 914,
									"src": "948:691:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "1684:414:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 791,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1727:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1731:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1727:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1747:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1739:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1739:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1739:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 788,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1709:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 787,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1702:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1702:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1717:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1702:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1702:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 798,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "1757:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1702:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1767:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1694:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "1694:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 807,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1829:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1829:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 811,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1849:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1841:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1841:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1841:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "1856:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 804,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1808:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 803,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1801:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1801:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1816:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1801:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "1801:64:2"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "1883:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 846,
														"src": "1875:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 818,
														"name": "_amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1895:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 819,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "1907:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 820,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "1918:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1907:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 822,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1906:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1895:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1875:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1941:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 826,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1953:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1941:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "2002:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 836,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2040:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2044:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2040:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 838,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "2052:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 833,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2023:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 832,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2016:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2016:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2031:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2016:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2016:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 840,
															"nodeType": "ExpressionStatement",
															"src": "2016:46:2"
														}
													]
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "1937:136:2",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "1964:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 828,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1978:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1978:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "1978:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2083:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2083:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "2083:8:2"
											}
										]
									},
									"functionSelector": "2af4ec36",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get0",
									"nameLocation": "1654:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1667:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1659:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:18:2"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1684:0:2"
									},
									"scope": 914,
									"src": "1645:453:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "2143:414:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 857,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2186:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2190:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2186:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 861,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2206:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$914",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2198:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 859,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2198:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2198:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 854,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2168:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 853,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2161:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2161:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2176:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "2161:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2161:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 864,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "2216:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2161:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "2153:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 873,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2288:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2292:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2288:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 877,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2308:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$914",
																		"typeString": "contract Pool"
																	}
																],
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2300:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 875,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2300:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2300:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "2315:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 870,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2267:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 869,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2260:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2260:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2275:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2260:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "2260:64:2"
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "2342:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "2334:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2334:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "_amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "2354:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 885,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "2366:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 886,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2377:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2366:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 888,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2365:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2354:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2334:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 891,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2400:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 892,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2412:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2400:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "2461:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 902,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2499:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2503:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2499:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 904,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "2511:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 899,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "2482:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 898,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2475:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2475:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2490:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2475:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2475:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 906,
															"nodeType": "ExpressionStatement",
															"src": "2475:46:2"
														}
													]
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "2396:136:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "2423:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 894,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2437:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2437:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "ExpressionStatement",
															"src": "2437:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 909,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2542:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "2542:8:2"
											}
										]
									},
									"functionSelector": "9c117f0f",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get1",
									"nameLocation": "2113:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2126:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2118:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:18:2"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:2"
									},
									"scope": 914,
									"src": "2104:453:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 915,
							"src": "224:2396:2",
							"usedErrors": []
						}
					],
					"src": "121:3029:2"
				},
				"id": 2
			}
		}
	}
}