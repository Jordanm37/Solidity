{
	"id": "2b9023612c13827e9eeed13e492f20f4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityPool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\ncontract LiquidityPool {\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    IERC20 public token;\n    address public tokenAddress;\n\n    constructor(address _tokenAddress){\n        _tokenAddress = tokenAddress;\n    }\n\n\n    function provideLiquidity(uint256 _amount) external payable {\n        \n    }\n}\n\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityPool.sol\":241:581  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LiquidityPool.sol\":417:496  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LiquidityPool.sol\":477:489  tokenAddress */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LiquidityPool.sol\":461:489  _tokenAddress = tokenAddress */\n  swap1\n  pop\n    /* \"contracts/LiquidityPool.sol\":417:496  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/LiquidityPool.sol\":241:581  contract LiquidityPool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/LiquidityPool.sol\":241:581  contract LiquidityPool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityPool.sol\":241:581  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9d76ea58\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xeb521a4c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":383:410  address public tokenAddress */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":503:579  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_3:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/LiquidityPool.sol\":358:377  IERC20 public token */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":383:410  address public tokenAddress */\n    tag_7:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":503:579  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_13:\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":358:377  IERC20 public token */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_21:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_23\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_12:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":228:347   */\n    tag_26:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_29\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_30:\n        /* \"#utility.yul\":574:598   */\n      tag_32\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:768   */\n    tag_34:\n        /* \"#utility.yul\":711:761   */\n      tag_36\n        /* \"#utility.yul\":755:760   */\n      dup2\n        /* \"#utility.yul\":711:761   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:762   */\n      mstore\n        /* \"#utility.yul\":611:768   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:996   */\n    tag_9:\n        /* \"#utility.yul\":867:871   */\n      0x00\n        /* \"#utility.yul\":905:907   */\n      0x20\n        /* \"#utility.yul\":894:903   */\n      dup3\n        /* \"#utility.yul\":890:908   */\n      add\n        /* \"#utility.yul\":882:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":918:989   */\n      tag_39\n        /* \"#utility.yul\":986:987   */\n      0x00\n        /* \"#utility.yul\":975:984   */\n      dup4\n        /* \"#utility.yul\":971:988   */\n      add\n        /* \"#utility.yul\":962:968   */\n      dup5\n        /* \"#utility.yul\":918:989   */\n      tag_30\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":774:996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1002:1250   */\n    tag_18:\n        /* \"#utility.yul\":1108:1112   */\n      0x00\n        /* \"#utility.yul\":1146:1148   */\n      0x20\n        /* \"#utility.yul\":1135:1144   */\n      dup3\n        /* \"#utility.yul\":1131:1149   */\n      add\n        /* \"#utility.yul\":1123:1149   */\n      swap1\n      pop\n        /* \"#utility.yul\":1159:1243   */\n      tag_41\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1229:1238   */\n      dup4\n        /* \"#utility.yul\":1225:1242   */\n      add\n        /* \"#utility.yul\":1216:1222   */\n      dup5\n        /* \"#utility.yul\":1159:1243   */\n      tag_34\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1002:1250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1337:1433   */\n    tag_33:\n        /* \"#utility.yul\":1374:1381   */\n      0x00\n        /* \"#utility.yul\":1403:1427   */\n      tag_45\n        /* \"#utility.yul\":1421:1426   */\n      dup3\n        /* \"#utility.yul\":1403:1427   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1392:1427   */\n      swap1\n      pop\n        /* \"#utility.yul\":1337:1433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1565   */\n    tag_46:\n        /* \"#utility.yul\":1476:1483   */\n      0x00\n        /* \"#utility.yul\":1516:1558   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1509:1514   */\n      dup3\n        /* \"#utility.yul\":1505:1559   */\n      and\n        /* \"#utility.yul\":1494:1559   */\n      swap1\n      pop\n        /* \"#utility.yul\":1439:1565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1571:1648   */\n    tag_48:\n        /* \"#utility.yul\":1608:1615   */\n      0x00\n        /* \"#utility.yul\":1637:1642   */\n      dup2\n        /* \"#utility.yul\":1626:1642   */\n      swap1\n      pop\n        /* \"#utility.yul\":1571:1648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1793   */\n    tag_37:\n        /* \"#utility.yul\":1717:1726   */\n      0x00\n        /* \"#utility.yul\":1750:1787   */\n      tag_51\n        /* \"#utility.yul\":1781:1786   */\n      dup3\n        /* \"#utility.yul\":1750:1787   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1737:1787   */\n      swap1\n      pop\n        /* \"#utility.yul\":1654:1793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1799:1925   */\n    tag_52:\n        /* \"#utility.yul\":1849:1858   */\n      0x00\n        /* \"#utility.yul\":1882:1919   */\n      tag_54\n        /* \"#utility.yul\":1913:1918   */\n      dup3\n        /* \"#utility.yul\":1882:1919   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1869:1919   */\n      swap1\n      pop\n        /* \"#utility.yul\":1799:1925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2044   */\n    tag_55:\n        /* \"#utility.yul\":1981:1990   */\n      0x00\n        /* \"#utility.yul\":2014:2038   */\n      tag_57\n        /* \"#utility.yul\":2032:2037   */\n      dup3\n        /* \"#utility.yul\":2014:2038   */\n      tag_46\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2001:2038   */\n      swap1\n      pop\n        /* \"#utility.yul\":1931:2044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2173:2290   */\n    tag_28:\n        /* \"#utility.yul\":2282:2283   */\n      0x00\n        /* \"#utility.yul\":2279:2280   */\n      dup1\n        /* \"#utility.yul\":2272:2284   */\n      revert\n        /* \"#utility.yul\":2296:2418   */\n    tag_24:\n        /* \"#utility.yul\":2369:2393   */\n      tag_62\n        /* \"#utility.yul\":2387:2392   */\n      dup2\n        /* \"#utility.yul\":2369:2393   */\n      tag_48\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2362:2367   */\n      dup2\n        /* \"#utility.yul\":2359:2394   */\n      eq\n        /* \"#utility.yul\":2349:2412   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2408:2409   */\n      0x00\n        /* \"#utility.yul\":2405:2406   */\n      dup1\n        /* \"#utility.yul\":2398:2410   */\n      revert\n        /* \"#utility.yul\":2349:2412   */\n    tag_63:\n        /* \"#utility.yul\":2296:2418   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cfbf097a8ce390d4b3632b8268b47b19a6e72a1cf325a9d05cd99859b487371164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 93,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161034e38038061034e83398181016040528101906100329190610072565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050506100ed565b60008151905061006c816100d6565b92915050565b600060208284031215610088576100876100d1565b5b60006100968482850161005d565b91505092915050565b60006100aa826100b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100df8161009f565b81146100ea57600080fd5b50565b610252806100fc6000396000f3fe6080604052600436106100345760003560e01c80639d76ea5814610039578063eb521a4c14610064578063fc0c546a14610080575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b9190610158565b60405180910390f35b61007e6004803603810190610079919061010d565b6100d1565b005b34801561008c57600080fd5b506100956100d4565b6040516100a29190610173565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061010781610205565b92915050565b60006020828403121561012357610122610200565b5b6000610131848285016100f8565b91505092915050565b6101438161018e565b82525050565b610152816101ca565b82525050565b600060208201905061016d600083018461013a565b92915050565b60006020820190506101886000830184610149565b92915050565b6000610199826101a0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101d5826101dc565b9050919050565b60006101e7826101ee565b9050919050565b60006101f9826101a0565b9050919050565b600080fd5b61020e816101c0565b811461021957600080fd5b5056fea2646970667358221220cfbf097a8ce390d4b3632b8268b47b19a6e72a1cf325a9d05cd99859b487371164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x34E CODESIZE SUB DUP1 PUSH2 0x34E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP POP PUSH2 0xED JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6C DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88 JUMPI PUSH2 0x87 PUSH2 0xD1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x96 DUP5 DUP3 DUP6 ADD PUSH2 0x5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA DUP3 PUSH2 0xB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x252 DUP1 PUSH2 0xFC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x10D JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x107 DUP2 PUSH2 0x205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123 JUMPI PUSH2 0x122 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x131 DUP5 DUP3 DUP6 ADD PUSH2 0xF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x143 DUP2 PUSH2 0x18E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199 DUP3 PUSH2 0x1A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5 DUP3 PUSH2 0x1DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7 DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9 DUP3 PUSH2 0x1A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E DUP2 PUSH2 0x1C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xBF MULMOD PUSH27 0x8CE390D4B3632B8268B47B19A6E72A1CF325A9D05CD99859B48737 GT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:340:1:-:0;;;417:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;477:12;;;;;;;;;;;461:28;;417:79;241:340;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;241:340:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@provideLiquidity_101": {
									"entryPoint": 209,
									"id": 101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenAddress_85": {
									"entryPoint": 171,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_83": {
									"entryPoint": 212,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2421:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:2",
														"type": ""
													}
												],
												"src": "487:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "711:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "699:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "677:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "684:3:2",
														"type": ""
													}
												],
												"src": "611:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "894:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "882:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "975:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "986:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "971:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "918:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "918:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "844:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "856:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "867:4:2",
														"type": ""
													}
												],
												"src": "774:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1113:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1123:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1135:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1146:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1131:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1123:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1216:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1229:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1240:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1225:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1225:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1159:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1085:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1097:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1108:4:2",
														"type": ""
													}
												],
												"src": "1002:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1296:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1306:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1316:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1289:6:2",
														"type": ""
													}
												],
												"src": "1256:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1382:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1392:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1421:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1403:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1392:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1364:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1374:7:2",
														"type": ""
													}
												],
												"src": "1337:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1484:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1494:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1509:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1516:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1505:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1505:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1494:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1466:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1476:7:2",
														"type": ""
													}
												],
												"src": "1439:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1626:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1637:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1626:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1598:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1608:7:2",
														"type": ""
													}
												],
												"src": "1571:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1727:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1737:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1781:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1750:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1737:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1707:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1717:9:2",
														"type": ""
													}
												],
												"src": "1654:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1859:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1869:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1913:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1882:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1869:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1839:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1849:9:2",
														"type": ""
													}
												],
												"src": "1799:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2001:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2032:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2014:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2001:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1971:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1981:9:2",
														"type": ""
													}
												],
												"src": "1931:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2139:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2156:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2159:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2149:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2050:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2262:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2272:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2173:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2339:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2396:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2405:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2408:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2398:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2398:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2398:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2362:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2387:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2369:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2369:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2359:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2352:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:43:2"
															},
															"nodeType": "YulIf",
															"src": "2349:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2332:5:2",
														"type": ""
													}
												],
												"src": "2296:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80639d76ea5814610039578063eb521a4c14610064578063fc0c546a14610080575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b9190610158565b60405180910390f35b61007e6004803603810190610079919061010d565b6100d1565b005b34801561008c57600080fd5b506100956100d4565b6040516100a29190610173565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061010781610205565b92915050565b60006020828403121561012357610122610200565b5b6000610131848285016100f8565b91505092915050565b6101438161018e565b82525050565b610152816101ca565b82525050565b600060208201905061016d600083018461013a565b92915050565b60006020820190506101886000830184610149565b92915050565b6000610199826101a0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101d5826101dc565b9050919050565b60006101e7826101ee565b9050919050565b60006101f9826101a0565b9050919050565b600080fd5b61020e816101c0565b811461021957600080fd5b5056fea2646970667358221220cfbf097a8ce390d4b3632b8268b47b19a6e72a1cf325a9d05cd99859b487371164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x10D JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x107 DUP2 PUSH2 0x205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123 JUMPI PUSH2 0x122 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x131 DUP5 DUP3 DUP6 ADD PUSH2 0xF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x143 DUP2 PUSH2 0x18E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199 DUP3 PUSH2 0x1A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5 DUP3 PUSH2 0x1DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7 DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9 DUP3 PUSH2 0x1A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E DUP2 PUSH2 0x1C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xBF MULMOD PUSH27 0x8CE390D4B3632B8268B47B19A6E72A1CF325A9D05CD99859B48737 GT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "241:340:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:76;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;358:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:27;;;;;;;;;;;;;:::o;503:76::-;;:::o;358:19::-;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:157::-;711:50;755:5;711:50;:::i;:::-;706:3;699:63;611:157;;:::o;774:222::-;867:4;905:2;894:9;890:18;882:26;;918:71;986:1;975:9;971:17;962:6;918:71;:::i;:::-;774:222;;;;:::o;1002:248::-;1108:4;1146:2;1135:9;1131:18;1123:26;;1159:84;1240:1;1229:9;1225:17;1216:6;1159:84;:::i;:::-;1002:248;;;;:::o;1337:96::-;1374:7;1403:24;1421:5;1403:24;:::i;:::-;1392:35;;1337:96;;;:::o;1439:126::-;1476:7;1516:42;1509:5;1505:54;1494:65;;1439:126;;;:::o;1571:77::-;1608:7;1637:5;1626:16;;1571:77;;;:::o;1654:139::-;1717:9;1750:37;1781:5;1750:37;:::i;:::-;1737:50;;1654:139;;;:::o;1799:126::-;1849:9;1882:37;1913:5;1882:37;:::i;:::-;1869:50;;1799:126;;;:::o;1931:113::-;1981:9;2014:24;2032:5;2014:24;:::i;:::-;2001:37;;1931:113;;;:::o;2173:117::-;2282:1;2279;2272:12;2296:122;2369:24;2387:5;2369:24;:::i;:::-;2362:5;2359:35;2349:63;;2408:1;2405;2398:12;2349:63;2296:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "118800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"provideLiquidity(uint256)": "382",
								"token()": "2619",
								"tokenAddress()": "2492"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 417,
									"end": 496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 477,
									"end": 489,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 477,
									"end": 489,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 461,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 461,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 581,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 581,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 241,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 581,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfbf097a8ce390d4b3632b8268b47b19a6e72a1cf325a9d05cd99859b487371164736f6c63430008070033",
									".code": [
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "9D76EA58"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "EB521A4C"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 581,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 579,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 768,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 611,
											"end": 768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 755,
											"end": 760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 699,
											"end": 762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 611,
											"end": 768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 768,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 996,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 774,
											"end": 996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 867,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 907,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 890,
											"end": 908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 918,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 984,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 971,
											"end": 988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 918,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 918,
											"end": 989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 918,
											"end": 989,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 918,
											"end": 989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 774,
											"end": 996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 774,
											"end": 996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 774,
											"end": 996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 774,
											"end": 996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 774,
											"end": 996,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1002,
											"end": 1250,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1002,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1222,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1159,
											"end": 1243,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1159,
											"end": 1243,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1159,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1250,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1337,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1337,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1433,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1433,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1439,
											"end": 1565,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1439,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1565,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1571,
											"end": 1648,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1571,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1648,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1654,
											"end": 1793,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1654,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1750,
											"end": 1787,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1750,
											"end": 1787,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1750,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1882,
											"end": 1919,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1882,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1931,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1931,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2032,
											"end": 2037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2014,
											"end": 2038,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2038,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2014,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 2044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 2044,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2173,
											"end": 2290,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2173,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2418,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2296,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2387,
											"end": 2392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2393,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2393,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2369,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2394,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2349,
											"end": 2412,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2410,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2349,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2418,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"provideLiquidity(uint256)": "eb521a4c",
							"token()": "fc0c546a",
							"tokenAddress()": "9d76ea58"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0xcf11385d04753d9f23465b61a0f3cd6df1ea3d5c0a439fa2762fcadc0b924a4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ebd522aedc8ff9aea5c80f4884ec2725538c124553d7ef16d8de9bc1d25163d\",\"dweb:/ipfs/QmYhdTKmAkM7hyTWSjLYKxqj3ZsjDegfd3k4uasn9C43m8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2660:0"
				},
				"id": 0
			},
			"contracts/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LiquidityPool": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "192:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 78,
							"src": "217:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "LiquidityPool",
							"nameLocation": "250:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 83,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "372:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "358:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "358:6:1"
										},
										"referencedDeclaration": 77,
										"src": "358:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 85,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "398:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "383:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "451:45:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "461:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "477:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "461:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "461:28:1"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "437:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "429:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:23:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:1"
									},
									"scope": 102,
									"src": "417:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "563:16:1",
										"statements": []
									},
									"functionSelector": "eb521a4c",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "512:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "537:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "529:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:17:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:0:1"
									},
									"scope": 102,
									"src": "503:76:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 103,
							"src": "241:340:1",
							"usedErrors": []
						}
					],
					"src": "192:391:1"
				},
				"id": 1
			}
		}
	}
}