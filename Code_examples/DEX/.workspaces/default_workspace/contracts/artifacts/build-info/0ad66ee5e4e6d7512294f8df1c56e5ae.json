{
	"id": "0ad66ee5e4e6d7512294f8df1c56e5ae",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ncontract Pool {\n    address public immutable token0;\n    address public immutable token1;\n    address public immutable ltrAddress;\n    uint256 public kLast;\n    uint256 public reserve0;\n    uint256 public reserve1;\n    uint256 public price0;\n    uint256 public price1;\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    constructor(address _token0, address _token1, address _ltrAddress) {\n        token0 = _token0;\n        token1 = _token1;\n        ltrAddress = _ltrAddress;\n    }\n\n    function update() private {\n        reserve0 = IERC20(token0).balanceOf(address(this));\n        reserve1 = IERC20(token1).balanceOf(address(this));\n        price0 = reserve1 / reserve0;\n        price1 = reserve0 / reserve1;\n    }\n\n\n\n    function provideLiquidity(uint256 _amount0, uint256 _amount1) external {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this));\n        uint256 shares = Math.sqrt(kLast);\n        IERC20(ltrAddress).transfer(msg.sender, shares);\n        update();\n        emit liquidityProvided(msg.sender, shares);\n    }\n\n    function get0(uint256 _amount1) private {\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        uint256 amountOut = reserve0 - (kLast / (reserve1 + _amount1));\n        if (reserve0 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token0).transfer(msg.sender, amountOut);\n        }\n\n        update();\n    }\n\n    function get1(uint256 _amount0) private {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        uint256 amountOut = reserve1 - (kLast / (reserve0 + _amount0)); \n        if (reserve1 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token1).transfer(msg.sender, amountOut);\n        }\n        update();\n    }\n\n    function swap(uint256 _token0, uint256 _token1) public {\n        if (_token0 > 0 && _token1 == 0) {\n            get1(_token0);\n        } else if (_token1 > 0 && _token0 == 0) {\n            get0(_token1);\n        } else {\n            revert();\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pool.sol": {
				"Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ltrAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ltrAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_token0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_token1",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pool.sol\":136:2803  contract Pool {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/Pool.sol\":485:645  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Pool.sol\":571:578  _token0 */\n  dup3\n    /* \"contracts/Pool.sol\":562:578  token0 = _token0 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":597:604  _token1 */\n  dup2\n    /* \"contracts/Pool.sol\":588:604  token1 = _token1 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":627:638  _ltrAddress */\n  dup1\n    /* \"contracts/Pool.sol\":614:638  ltrAddress = _ltrAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":485:645  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Pool.sol\":136:2803  contract Pool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":966:1085   */\ntag_27:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_29\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_30\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_31\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/Pool.sol\":136:2803  contract Pool {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n  0x00\n  assignImmutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n  0x00\n  assignImmutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pool.sol\":136:2803  contract Pool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a16af7f\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x7a16af7f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa0a986f1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xba9c6845\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd96073cf\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6caf25ce\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":156:187  address public immutable token0 */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":297:320  uint256 public reserve0 */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":326:349  uint256 public reserve1 */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":382:403  uint256 public price1 */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":271:291  uint256 public kLast */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":888:1597  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/Pool.sol\":355:376  uint256 public price0 */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":230:265  address public immutable ltrAddress */\n    tag_10:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":193:224  address public immutable token1 */\n    tag_11:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":2543:2801  function swap(uint256 _token0, uint256 _token1) public {... */\n    tag_12:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Pool.sol\":156:187  address public immutable token0 */\n    tag_15:\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":297:320  uint256 public reserve0 */\n    tag_19:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":326:349  uint256 public reserve1 */\n    tag_23:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":382:403  uint256 public price1 */\n    tag_26:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":271:291  uint256 public kLast */\n    tag_29:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":888:1597  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_34:\n        /* \"contracts/Pool.sol\":1032:1040  _amount0 */\n      dup2\n        /* \"contracts/Pool.sol\":984:990  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":977:1001  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1002:1012  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1022:1026  this */\n      address\n        /* \"contracts/Pool.sol\":977:1028  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/Pool.sol\":977:1040  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":969:1066  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/Pool.sol\":1139:1147  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1091:1097  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1084:1108  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1109:1119  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1129:1133  this */\n      address\n        /* \"contracts/Pool.sol\":1084:1135  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_60:\n        /* \"contracts/Pool.sol\":1084:1147  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1076:1173  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_56\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/Pool.sol\":1190:1196  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1183:1210  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1211:1221  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1231:1235  this */\n      address\n        /* \"contracts/Pool.sol\":1238:1246  _amount0 */\n      dup6\n        /* \"contracts/Pool.sol\":1183:1247  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      pop\n        /* \"contracts/Pool.sol\":1264:1270  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1257:1284  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1285:1295  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1305:1309  this */\n      address\n        /* \"contracts/Pool.sol\":1312:1320  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1257:1321  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_69:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_72:\n      pop\n        /* \"contracts/Pool.sol\":1388:1394  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1381:1405  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1414:1418  this */\n      address\n        /* \"contracts/Pool.sol\":1381:1420  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_76:\n        /* \"contracts/Pool.sol\":1346:1352  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1339:1363  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1372:1376  this */\n      address\n        /* \"contracts/Pool.sol\":1339:1378  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_80:\n        /* \"contracts/Pool.sol\":1339:1420  IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/Pool.sol\":1331:1336  kLast */\n      0x00\n        /* \"contracts/Pool.sol\":1331:1420  kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":1430:1444  uint256 shares */\n      0x00\n        /* \"contracts/Pool.sol\":1447:1463  Math.sqrt(kLast) */\n      tag_83\n        /* \"contracts/Pool.sol\":1457:1462  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":1447:1456  Math.sqrt */\n      tag_84\n        /* \"contracts/Pool.sol\":1447:1463  Math.sqrt(kLast) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/Pool.sol\":1430:1463  uint256 shares = Math.sqrt(kLast) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1480:1490  ltrAddress */\n      immutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n        /* \"contracts/Pool.sol\":1473:1500  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":1501:1511  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1513:1519  shares */\n      dup4\n        /* \"contracts/Pool.sol\":1473:1520  IERC20(ltrAddress).transfer(msg.sender, shares) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_89:\n      pop\n        /* \"contracts/Pool.sol\":1530:1538  update() */\n      tag_90\n        /* \"contracts/Pool.sol\":1530:1536  update */\n      tag_91\n        /* \"contracts/Pool.sol\":1530:1538  update() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/Pool.sol\":1553:1590  liquidityProvided(msg.sender, shares) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/Pool.sol\":1571:1581  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1583:1589  shares */\n      dup3\n        /* \"contracts/Pool.sol\":1553:1590  liquidityProvided(msg.sender, shares) */\n      mload(0x40)\n      tag_92\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pool.sol\":959:1597  {... */\n      pop\n        /* \"contracts/Pool.sol\":888:1597  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":355:376  uint256 public price0 */\n    tag_36:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":230:265  address public immutable ltrAddress */\n    tag_39:\n      immutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":193:224  address public immutable token1 */\n    tag_42:\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":2543:2801  function swap(uint256 _token0, uint256 _token1) public {... */\n    tag_46:\n        /* \"contracts/Pool.sol\":2622:2623  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2612:2619  _token0 */\n      dup3\n        /* \"contracts/Pool.sol\":2612:2623  _token0 > 0 */\n      gt\n        /* \"contracts/Pool.sol\":2612:2639  _token0 > 0 && _token1 == 0 */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/Pool.sol\":2638:2639  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2627:2634  _token1 */\n      dup2\n        /* \"contracts/Pool.sol\":2627:2639  _token1 == 0 */\n      eq\n        /* \"contracts/Pool.sol\":2612:2639  _token0 > 0 && _token1 == 0 */\n    tag_94:\n        /* \"contracts/Pool.sol\":2608:2795  if (_token0 > 0 && _token1 == 0) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/Pool.sol\":2655:2668  get1(_token0) */\n      tag_96\n        /* \"contracts/Pool.sol\":2660:2667  _token0 */\n      dup3\n        /* \"contracts/Pool.sol\":2655:2659  get1 */\n      tag_97\n        /* \"contracts/Pool.sol\":2655:2668  get1(_token0) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Pool.sol\":2608:2795  if (_token0 > 0 && _token1 == 0) {... */\n      jump(tag_98)\n    tag_95:\n        /* \"contracts/Pool.sol\":2699:2700  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2689:2696  _token1 */\n      dup2\n        /* \"contracts/Pool.sol\":2689:2700  _token1 > 0 */\n      gt\n        /* \"contracts/Pool.sol\":2689:2716  _token1 > 0 && _token0 == 0 */\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n        /* \"contracts/Pool.sol\":2715:2716  0 */\n      0x00\n        /* \"contracts/Pool.sol\":2704:2711  _token0 */\n      dup3\n        /* \"contracts/Pool.sol\":2704:2716  _token0 == 0 */\n      eq\n        /* \"contracts/Pool.sol\":2689:2716  _token1 > 0 && _token0 == 0 */\n    tag_99:\n        /* \"contracts/Pool.sol\":2685:2795  if (_token1 > 0 && _token0 == 0) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"contracts/Pool.sol\":2732:2745  get0(_token1) */\n      tag_101\n        /* \"contracts/Pool.sol\":2737:2744  _token1 */\n      dup2\n        /* \"contracts/Pool.sol\":2732:2736  get0 */\n      tag_102\n        /* \"contracts/Pool.sol\":2732:2745  get0(_token1) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Pool.sol\":2685:2795  if (_token1 > 0 && _token0 == 0) {... */\n      jump(tag_103)\n    tag_100:\n        /* \"contracts/Pool.sol\":2776:2784  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":2685:2795  if (_token1 > 0 && _token0 == 0) {... */\n    tag_103:\n        /* \"contracts/Pool.sol\":2608:2795  if (_token0 > 0 && _token1 == 0) {... */\n    tag_98:\n        /* \"contracts/Pool.sol\":2543:2801  function swap(uint256 _token0, uint256 _token1) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6336  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6357:6358  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6353  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6358  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6374:6382  return 0 */\n      swap1\n      pop\n      jump(tag_104)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7072  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7075:7076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7076  uint256 result = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7095  uint256 x */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7098:7099  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7099  uint256 x = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7124:7125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7118:7121  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7114  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7121  x >> 128 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7125  x >> 128 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7147:7150  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7141:7150  x >>= 128 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7175:7177  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7164:7177  result <<= 64 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7211:7212  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7206:7208  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7202  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7208  x >> 64 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7212  x >> 64 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7234:7236  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7228:7236  x >>= 64 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7261:7263  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7250:7263  result <<= 32 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7297:7298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7292:7294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7288  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7294  x >> 32 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7298  x >> 32 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7320:7322  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7314:7322  x >>= 32 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7347:7349  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7336:7349  result <<= 16 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7383:7384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7378:7380  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7374  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7380  x >> 16 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7384  x >> 16 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7406:7408  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7400:7408  x >>= 16 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7433:7434  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7422:7434  result <<= 8 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7467:7468  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7463:7464  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7459  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7464  x >> 8 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7468  x >> 8 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7490:7491  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7484:7491  x >>= 8 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7516:7517  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7505:7517  result <<= 4 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7550:7551  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7546:7547  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7542  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7547  x >> 4 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7551  x >> 4 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7573:7574  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7567:7574  x >>= 4 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7599:7600  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7588:7600  result <<= 2 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7633:7634  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7629:7630  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7625  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7630  x >> 2 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7634  x >> 2 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7661:7662  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7650:7662  result <<= 1 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8131:8132  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8120:8126  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8117  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8126  a / result */\n      dup2\n      tag_113\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n    tag_113:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8113  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8126  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8106:8132  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8097:8132  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8180:8181  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8169:8175  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8166  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8175  a / result */\n      dup2\n      tag_116\n      jumpi\n      tag_117\n      tag_115\n      jump\t// in\n    tag_117:\n    tag_116:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8162  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8175  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8155:8181  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8146:8181  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8229:8230  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8218:8224  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8215  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8224  a / result */\n      dup2\n      tag_118\n      jumpi\n      tag_119\n      tag_115\n      jump\t// in\n    tag_119:\n    tag_118:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8211  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8224  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8204:8230  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8195:8230  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8278:8279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8267:8273  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8264  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8273  a / result */\n      dup2\n      tag_120\n      jumpi\n      tag_121\n      tag_115\n      jump\t// in\n    tag_121:\n    tag_120:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8260  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8273  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8253:8279  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8244:8279  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8327:8328  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8316:8322  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8313  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8322  a / result */\n      dup2\n      tag_122\n      jumpi\n      tag_123\n      tag_115\n      jump\t// in\n    tag_123:\n    tag_122:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8309  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8322  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8302:8328  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8293:8328  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8376:8377  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8365:8371  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8362  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8371  a / result */\n      dup2\n      tag_124\n      jumpi\n      tag_125\n      tag_115\n      jump\t// in\n    tag_125:\n    tag_124:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8358  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8371  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8351:8377  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8342:8377  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8425:8426  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8414:8420  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8411  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8420  a / result */\n      dup2\n      tag_126\n      jumpi\n      tag_127\n      tag_115\n      jump\t// in\n    tag_127:\n    tag_126:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8407  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8420  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8400:8426  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8391:8426  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8451:8457  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8463:8469  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8460  a */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8469  a / result */\n      dup2\n      tag_129\n      jumpi\n      tag_130\n      tag_115\n      jump\t// in\n    tag_130:\n    tag_129:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8450  min */\n      tag_131\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8440:8470  return min(result, a / result) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_104:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":651:880  function update() private {... */\n    tag_91:\n        /* \"contracts/Pool.sol\":705:711  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":698:722  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":731:735  this */\n      address\n        /* \"contracts/Pool.sol\":698:737  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_136:\n        /* \"contracts/Pool.sol\":687:695  reserve0 */\n      0x01\n        /* \"contracts/Pool.sol\":687:737  reserve0 = IERC20(token0).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":765:771  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":758:782  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":791:795  this */\n      address\n        /* \"contracts/Pool.sol\":758:797  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_140:\n        /* \"contracts/Pool.sol\":747:755  reserve1 */\n      0x02\n        /* \"contracts/Pool.sol\":747:797  reserve1 = IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":827:835  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":816:824  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":816:835  reserve1 / reserve0 */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"contracts/Pool.sol\":807:813  price0 */\n      0x03\n        /* \"contracts/Pool.sol\":807:835  price0 = reserve1 / reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":865:873  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":854:862  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":854:873  reserve0 / reserve1 */\n      tag_143\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_143:\n        /* \"contracts/Pool.sol\":845:851  price1 */\n      0x04\n        /* \"contracts/Pool.sol\":845:873  price1 = reserve0 / reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":651:880  function update() private {... */\n      jump\t// out\n        /* \"contracts/Pool.sol\":2073:2537  function get1(uint256 _amount0) private {... */\n    tag_97:\n        /* \"contracts/Pool.sol\":2186:2194  _amount0 */\n      dup1\n        /* \"contracts/Pool.sol\":2138:2144  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2131:2155  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":2156:2166  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2176:2180  this */\n      address\n        /* \"contracts/Pool.sol\":2131:2182  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_148:\n        /* \"contracts/Pool.sol\":2131:2194  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":2123:2220  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_56\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/Pool.sol\":2237:2243  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2230:2257  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":2258:2268  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2278:2282  this */\n      address\n        /* \"contracts/Pool.sol\":2285:2293  _amount0 */\n      dup5\n        /* \"contracts/Pool.sol\":2230:2294  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_151:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_154:\n      pop\n        /* \"contracts/Pool.sol\":2304:2321  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":2356:2364  _amount0 */\n      dup2\n        /* \"contracts/Pool.sol\":2345:2353  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":2345:2364  reserve0 + _amount0 */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/Pool.sol\":2336:2341  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":2336:2365  kLast / (reserve0 + _amount0) */\n      tag_157\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_157:\n        /* \"contracts/Pool.sol\":2324:2332  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2324:2366  reserve1 - (kLast / (reserve0 + _amount0)) */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/Pool.sol\":2304:2366  uint256 amountOut = reserve1 - (kLast / (reserve0 + _amount0)) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":2393:2402  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":2381:2389  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2381:2402  reserve1 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":2377:2513  if (reserve1 <= amountOut) {... */\n      tag_160\n      jumpi\n        /* \"contracts/Pool.sol\":2418:2426  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":2377:2513  if (reserve1 <= amountOut) {... */\n    tag_160:\n        /* \"contracts/Pool.sol\":2463:2469  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":2456:2479  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2480:2490  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2492:2501  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":2456:2502  IERC20(token1).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_162:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_165:\n      pop\n        /* \"contracts/Pool.sol\":2522:2530  update() */\n      tag_166\n        /* \"contracts/Pool.sol\":2522:2528  update */\n      tag_91\n        /* \"contracts/Pool.sol\":2522:2530  update() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/Pool.sol\":2113:2537  {... */\n      pop\n        /* \"contracts/Pool.sol\":2073:2537  function get1(uint256 _amount0) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":1603:2067  function get0(uint256 _amount1) private {... */\n    tag_102:\n        /* \"contracts/Pool.sol\":1716:1724  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1668:1674  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1661:1685  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1686:1696  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1706:1710  this */\n      address\n        /* \"contracts/Pool.sol\":1661:1712  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_168:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_171:\n        /* \"contracts/Pool.sol\":1661:1724  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1653:1750  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_56\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/Pool.sol\":1767:1773  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1760:1787  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1788:1798  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1808:1812  this */\n      address\n        /* \"contracts/Pool.sol\":1815:1823  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1760:1824  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_177:\n      pop\n        /* \"contracts/Pool.sol\":1834:1851  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":1886:1894  _amount1 */\n      dup2\n        /* \"contracts/Pool.sol\":1875:1883  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":1875:1894  reserve1 + _amount1 */\n      tag_178\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_178:\n        /* \"contracts/Pool.sol\":1866:1871  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":1866:1895  kLast / (reserve1 + _amount1) */\n      tag_179\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_179:\n        /* \"contracts/Pool.sol\":1854:1862  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1854:1896  reserve0 - (kLast / (reserve1 + _amount1)) */\n      tag_180\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_180:\n        /* \"contracts/Pool.sol\":1834:1896  uint256 amountOut = reserve0 - (kLast / (reserve1 + _amount1)) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1922:1931  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":1910:1918  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1910:1931  reserve0 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":1906:2042  if (reserve0 <= amountOut) {... */\n      tag_181\n      jumpi\n        /* \"contracts/Pool.sol\":1947:1955  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":1906:2042  if (reserve0 <= amountOut) {... */\n    tag_181:\n        /* \"contracts/Pool.sol\":1992:1998  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1985:2008  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2009:2019  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2021:2030  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":1985:2031  IERC20(token0).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_186:\n      pop\n        /* \"contracts/Pool.sol\":2052:2060  update() */\n      tag_187\n        /* \"contracts/Pool.sol\":2052:2058  update */\n      tag_91\n        /* \"contracts/Pool.sol\":2052:2060  update() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/Pool.sol\":1643:2067  {... */\n      pop\n        /* \"contracts/Pool.sol\":1603:2067  function get0(uint256 _amount1) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":647:654  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":677:678  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:674  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:678  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":685:686  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      jump(tag_190)\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":681:682  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":666:686  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_191:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_192:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_212\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_191\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_193:\n        /* \"#utility.yul\":328:352   */\n      tag_214\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_192\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_17:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_216\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_193\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_194:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_195:\n        /* \"#utility.yul\":763:787   */\n      tag_219\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_194\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_21:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_221\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_195\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_197:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_199:\n        /* \"#utility.yul\":1428:1452   */\n      tag_226\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_194\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_227:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_200:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_229\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_199\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:2102   */\n    tag_33:\n        /* \"#utility.yul\":1696:1702   */\n      0x00\n        /* \"#utility.yul\":1704:1710   */\n      dup1\n        /* \"#utility.yul\":1753:1755   */\n      0x40\n        /* \"#utility.yul\":1741:1750   */\n      dup4\n        /* \"#utility.yul\":1732:1739   */\n      dup6\n        /* \"#utility.yul\":1728:1751   */\n      sub\n        /* \"#utility.yul\":1724:1756   */\n      slt\n        /* \"#utility.yul\":1721:1840   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1759:1838   */\n      tag_232\n      tag_197\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1721:1840   */\n    tag_231:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1904:1957   */\n      tag_233\n        /* \"#utility.yul\":1949:1956   */\n      dup6\n        /* \"#utility.yul\":1940:1946   */\n      dup3\n        /* \"#utility.yul\":1929:1938   */\n      dup7\n        /* \"#utility.yul\":1925:1947   */\n      add\n        /* \"#utility.yul\":1904:1957   */\n      tag_200\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1894:1957   */\n      swap3\n      pop\n        /* \"#utility.yul\":1850:1967   */\n      pop\n        /* \"#utility.yul\":2006:2008   */\n      0x20\n        /* \"#utility.yul\":2032:2085   */\n      tag_234\n        /* \"#utility.yul\":2077:2084   */\n      dup6\n        /* \"#utility.yul\":2068:2074   */\n      dup3\n        /* \"#utility.yul\":2057:2066   */\n      dup7\n        /* \"#utility.yul\":2053:2075   */\n      add\n        /* \"#utility.yul\":2032:2085   */\n      tag_200\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2022:2085   */\n      swap2\n      pop\n        /* \"#utility.yul\":1977:2095   */\n      pop\n        /* \"#utility.yul\":1628:2102   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2440   */\n    tag_49:\n        /* \"#utility.yul\":2229:2233   */\n      0x00\n        /* \"#utility.yul\":2267:2269   */\n      0x40\n        /* \"#utility.yul\":2256:2265   */\n      dup3\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2244:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2280:2351   */\n      tag_236\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup6\n        /* \"#utility.yul\":2280:2351   */\n      tag_193\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2361:2433   */\n      tag_237\n        /* \"#utility.yul\":2429:2431   */\n      0x20\n        /* \"#utility.yul\":2418:2427   */\n      dup4\n        /* \"#utility.yul\":2414:2432   */\n      add\n        /* \"#utility.yul\":2405:2411   */\n      dup5\n        /* \"#utility.yul\":2361:2433   */\n      tag_193\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2108:2440   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2446:2589   */\n    tag_201:\n        /* \"#utility.yul\":2503:2508   */\n      0x00\n        /* \"#utility.yul\":2534:2540   */\n      dup2\n        /* \"#utility.yul\":2528:2541   */\n      mload\n        /* \"#utility.yul\":2519:2541   */\n      swap1\n      pop\n        /* \"#utility.yul\":2550:2583   */\n      tag_239\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2550:2583   */\n      tag_199\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2446:2589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2595:2946   */\n    tag_53:\n        /* \"#utility.yul\":2665:2671   */\n      0x00\n        /* \"#utility.yul\":2714:2716   */\n      0x20\n        /* \"#utility.yul\":2702:2711   */\n      dup3\n        /* \"#utility.yul\":2693:2700   */\n      dup5\n        /* \"#utility.yul\":2689:2712   */\n      sub\n        /* \"#utility.yul\":2685:2717   */\n      slt\n        /* \"#utility.yul\":2682:2801   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2720:2799   */\n      tag_242\n      tag_197\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2682:2801   */\n    tag_241:\n        /* \"#utility.yul\":2840:2841   */\n      0x00\n        /* \"#utility.yul\":2865:2929   */\n      tag_243\n        /* \"#utility.yul\":2921:2928   */\n      dup5\n        /* \"#utility.yul\":2912:2918   */\n      dup3\n        /* \"#utility.yul\":2901:2910   */\n      dup6\n        /* \"#utility.yul\":2897:2919   */\n      add\n        /* \"#utility.yul\":2865:2929   */\n      tag_201\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2855:2929   */\n      swap2\n      pop\n        /* \"#utility.yul\":2811:2939   */\n      pop\n        /* \"#utility.yul\":2595:2946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2952:3121   */\n    tag_202:\n        /* \"#utility.yul\":3036:3047   */\n      0x00\n        /* \"#utility.yul\":3070:3076   */\n      dup3\n        /* \"#utility.yul\":3065:3068   */\n      dup3\n        /* \"#utility.yul\":3058:3077   */\n      mstore\n        /* \"#utility.yul\":3110:3114   */\n      0x20\n        /* \"#utility.yul\":3105:3108   */\n      dup3\n        /* \"#utility.yul\":3101:3115   */\n      add\n        /* \"#utility.yul\":3086:3115   */\n      swap1\n      pop\n        /* \"#utility.yul\":2952:3121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3127:3298   */\n    tag_203:\n        /* \"#utility.yul\":3267:3290   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3255:3261   */\n      dup3\n        /* \"#utility.yul\":3251:3265   */\n      add\n        /* \"#utility.yul\":3244:3291   */\n      mstore\n        /* \"#utility.yul\":3127:3298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3304:3670   */\n    tag_204:\n        /* \"#utility.yul\":3446:3449   */\n      0x00\n        /* \"#utility.yul\":3467:3534   */\n      tag_247\n        /* \"#utility.yul\":3531:3533   */\n      0x15\n        /* \"#utility.yul\":3526:3529   */\n      dup4\n        /* \"#utility.yul\":3467:3534   */\n      tag_202\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3460:3534   */\n      swap2\n      pop\n        /* \"#utility.yul\":3543:3636   */\n      tag_248\n        /* \"#utility.yul\":3632:3635   */\n      dup3\n        /* \"#utility.yul\":3543:3636   */\n      tag_203\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3661:3663   */\n      0x20\n        /* \"#utility.yul\":3656:3659   */\n      dup3\n        /* \"#utility.yul\":3652:3664   */\n      add\n        /* \"#utility.yul\":3645:3664   */\n      swap1\n      pop\n        /* \"#utility.yul\":3304:3670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3676:4095   */\n    tag_56:\n        /* \"#utility.yul\":3842:3846   */\n      0x00\n        /* \"#utility.yul\":3880:3882   */\n      0x20\n        /* \"#utility.yul\":3869:3878   */\n      dup3\n        /* \"#utility.yul\":3865:3883   */\n      add\n        /* \"#utility.yul\":3857:3883   */\n      swap1\n      pop\n        /* \"#utility.yul\":3929:3938   */\n      dup2\n        /* \"#utility.yul\":3923:3927   */\n      dup2\n        /* \"#utility.yul\":3919:3939   */\n      sub\n        /* \"#utility.yul\":3915:3916   */\n      0x00\n        /* \"#utility.yul\":3904:3913   */\n      dup4\n        /* \"#utility.yul\":3900:3917   */\n      add\n        /* \"#utility.yul\":3893:3940   */\n      mstore\n        /* \"#utility.yul\":3957:4088   */\n      tag_250\n        /* \"#utility.yul\":4083:4087   */\n      dup2\n        /* \"#utility.yul\":3957:4088   */\n      tag_204\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3949:4088   */\n      swap1\n      pop\n        /* \"#utility.yul\":3676:4095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4101:4543   */\n    tag_64:\n        /* \"#utility.yul\":4250:4254   */\n      0x00\n        /* \"#utility.yul\":4288:4290   */\n      0x60\n        /* \"#utility.yul\":4277:4286   */\n      dup3\n        /* \"#utility.yul\":4273:4291   */\n      add\n        /* \"#utility.yul\":4265:4291   */\n      swap1\n      pop\n        /* \"#utility.yul\":4301:4372   */\n      tag_252\n        /* \"#utility.yul\":4369:4370   */\n      0x00\n        /* \"#utility.yul\":4358:4367   */\n      dup4\n        /* \"#utility.yul\":4354:4371   */\n      add\n        /* \"#utility.yul\":4345:4351   */\n      dup7\n        /* \"#utility.yul\":4301:4372   */\n      tag_193\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4382:4454   */\n      tag_253\n        /* \"#utility.yul\":4450:4452   */\n      0x20\n        /* \"#utility.yul\":4439:4448   */\n      dup4\n        /* \"#utility.yul\":4435:4453   */\n      add\n        /* \"#utility.yul\":4426:4432   */\n      dup6\n        /* \"#utility.yul\":4382:4454   */\n      tag_193\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4464:4536   */\n      tag_254\n        /* \"#utility.yul\":4532:4534   */\n      0x40\n        /* \"#utility.yul\":4521:4530   */\n      dup4\n        /* \"#utility.yul\":4517:4535   */\n      add\n        /* \"#utility.yul\":4508:4514   */\n      dup5\n        /* \"#utility.yul\":4464:4536   */\n      tag_195\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4101:4543   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4549:4639   */\n    tag_205:\n        /* \"#utility.yul\":4583:4590   */\n      0x00\n        /* \"#utility.yul\":4626:4631   */\n      dup2\n        /* \"#utility.yul\":4619:4632   */\n      iszero\n        /* \"#utility.yul\":4612:4633   */\n      iszero\n        /* \"#utility.yul\":4601:4633   */\n      swap1\n      pop\n        /* \"#utility.yul\":4549:4639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4645:4761   */\n    tag_206:\n        /* \"#utility.yul\":4715:4736   */\n      tag_257\n        /* \"#utility.yul\":4730:4735   */\n      dup2\n        /* \"#utility.yul\":4715:4736   */\n      tag_205\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4708:4713   */\n      dup2\n        /* \"#utility.yul\":4705:4737   */\n      eq\n        /* \"#utility.yul\":4695:4755   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":4751:4752   */\n      0x00\n        /* \"#utility.yul\":4748:4749   */\n      dup1\n        /* \"#utility.yul\":4741:4753   */\n      revert\n        /* \"#utility.yul\":4695:4755   */\n    tag_258:\n        /* \"#utility.yul\":4645:4761   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4767:4904   */\n    tag_207:\n        /* \"#utility.yul\":4821:4826   */\n      0x00\n        /* \"#utility.yul\":4852:4858   */\n      dup2\n        /* \"#utility.yul\":4846:4859   */\n      mload\n        /* \"#utility.yul\":4837:4859   */\n      swap1\n      pop\n        /* \"#utility.yul\":4868:4898   */\n      tag_260\n        /* \"#utility.yul\":4892:4897   */\n      dup2\n        /* \"#utility.yul\":4868:4898   */\n      tag_206\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4767:4904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4910:5255   */\n    tag_68:\n        /* \"#utility.yul\":4977:4983   */\n      0x00\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5014:5023   */\n      dup3\n        /* \"#utility.yul\":5005:5012   */\n      dup5\n        /* \"#utility.yul\":5001:5024   */\n      sub\n        /* \"#utility.yul\":4997:5029   */\n      slt\n        /* \"#utility.yul\":4994:5113   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":5032:5111   */\n      tag_263\n      tag_197\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4994:5113   */\n    tag_262:\n        /* \"#utility.yul\":5152:5153   */\n      0x00\n        /* \"#utility.yul\":5177:5238   */\n      tag_264\n        /* \"#utility.yul\":5230:5237   */\n      dup5\n        /* \"#utility.yul\":5221:5227   */\n      dup3\n        /* \"#utility.yul\":5210:5219   */\n      dup6\n        /* \"#utility.yul\":5206:5228   */\n      add\n        /* \"#utility.yul\":5177:5238   */\n      tag_207\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5167:5238   */\n      swap2\n      pop\n        /* \"#utility.yul\":5123:5248   */\n      pop\n        /* \"#utility.yul\":4910:5255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5261:5441   */\n    tag_208:\n        /* \"#utility.yul\":5309:5386   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5299:5387   */\n      mstore\n        /* \"#utility.yul\":5406:5410   */\n      0x11\n        /* \"#utility.yul\":5403:5404   */\n      0x04\n        /* \"#utility.yul\":5396:5411   */\n      mstore\n        /* \"#utility.yul\":5430:5434   */\n      0x24\n        /* \"#utility.yul\":5427:5428   */\n      0x00\n        /* \"#utility.yul\":5420:5435   */\n      revert\n        /* \"#utility.yul\":5447:5857   */\n    tag_82:\n        /* \"#utility.yul\":5487:5494   */\n      0x00\n        /* \"#utility.yul\":5510:5530   */\n      tag_267\n        /* \"#utility.yul\":5528:5529   */\n      dup3\n        /* \"#utility.yul\":5510:5530   */\n      tag_194\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5505:5530   */\n      swap2\n      pop\n        /* \"#utility.yul\":5544:5564   */\n      tag_268\n        /* \"#utility.yul\":5562:5563   */\n      dup4\n        /* \"#utility.yul\":5544:5564   */\n      tag_194\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5539:5564   */\n      swap3\n      pop\n        /* \"#utility.yul\":5599:5600   */\n      dup3\n        /* \"#utility.yul\":5596:5597   */\n      dup3\n        /* \"#utility.yul\":5592:5601   */\n      mul\n        /* \"#utility.yul\":5621:5651   */\n      tag_269\n        /* \"#utility.yul\":5639:5650   */\n      dup2\n        /* \"#utility.yul\":5621:5651   */\n      tag_194\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5610:5651   */\n      swap2\n      pop\n        /* \"#utility.yul\":5800:5801   */\n      dup3\n        /* \"#utility.yul\":5791:5798   */\n      dup3\n        /* \"#utility.yul\":5787:5802   */\n      div\n        /* \"#utility.yul\":5784:5785   */\n      dup5\n        /* \"#utility.yul\":5781:5803   */\n      eq\n        /* \"#utility.yul\":5761:5762   */\n      dup4\n        /* \"#utility.yul\":5754:5763   */\n      iszero\n        /* \"#utility.yul\":5734:5817   */\n      or\n        /* \"#utility.yul\":5711:5850   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5830:5848   */\n      tag_271\n      tag_208\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5711:5850   */\n    tag_270:\n        /* \"#utility.yul\":5495:5857   */\n      pop\n        /* \"#utility.yul\":5447:5857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5863:6195   */\n    tag_86:\n        /* \"#utility.yul\":5984:5988   */\n      0x00\n        /* \"#utility.yul\":6022:6024   */\n      0x40\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6007:6025   */\n      add\n        /* \"#utility.yul\":5999:6025   */\n      swap1\n      pop\n        /* \"#utility.yul\":6035:6106   */\n      tag_273\n        /* \"#utility.yul\":6103:6104   */\n      0x00\n        /* \"#utility.yul\":6092:6101   */\n      dup4\n        /* \"#utility.yul\":6088:6105   */\n      add\n        /* \"#utility.yul\":6079:6085   */\n      dup6\n        /* \"#utility.yul\":6035:6106   */\n      tag_193\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6116:6188   */\n      tag_274\n        /* \"#utility.yul\":6184:6186   */\n      0x20\n        /* \"#utility.yul\":6173:6182   */\n      dup4\n        /* \"#utility.yul\":6169:6187   */\n      add\n        /* \"#utility.yul\":6160:6166   */\n      dup5\n        /* \"#utility.yul\":6116:6188   */\n      tag_195\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5863:6195   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6201:6381   */\n    tag_115:\n        /* \"#utility.yul\":6249:6326   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6246:6247   */\n      0x00\n        /* \"#utility.yul\":6239:6327   */\n      mstore\n        /* \"#utility.yul\":6346:6350   */\n      0x12\n        /* \"#utility.yul\":6343:6344   */\n      0x04\n        /* \"#utility.yul\":6336:6351   */\n      mstore\n        /* \"#utility.yul\":6370:6374   */\n      0x24\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6360:6375   */\n      revert\n        /* \"#utility.yul\":6387:6572   */\n    tag_142:\n        /* \"#utility.yul\":6427:6428   */\n      0x00\n        /* \"#utility.yul\":6444:6464   */\n      tag_277\n        /* \"#utility.yul\":6462:6463   */\n      dup3\n        /* \"#utility.yul\":6444:6464   */\n      tag_194\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6439:6464   */\n      swap2\n      pop\n        /* \"#utility.yul\":6478:6498   */\n      tag_278\n        /* \"#utility.yul\":6496:6497   */\n      dup4\n        /* \"#utility.yul\":6478:6498   */\n      tag_194\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6473:6498   */\n      swap3\n      pop\n        /* \"#utility.yul\":6517:6518   */\n      dup3\n        /* \"#utility.yul\":6507:6542   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":6522:6540   */\n      tag_280\n      tag_115\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6507:6542   */\n    tag_279:\n        /* \"#utility.yul\":6564:6565   */\n      dup3\n        /* \"#utility.yul\":6561:6562   */\n      dup3\n        /* \"#utility.yul\":6557:6566   */\n      div\n        /* \"#utility.yul\":6552:6566   */\n      swap1\n      pop\n        /* \"#utility.yul\":6387:6572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6578:6769   */\n    tag_156:\n        /* \"#utility.yul\":6618:6621   */\n      0x00\n        /* \"#utility.yul\":6637:6657   */\n      tag_282\n        /* \"#utility.yul\":6655:6656   */\n      dup3\n        /* \"#utility.yul\":6637:6657   */\n      tag_194\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6632:6657   */\n      swap2\n      pop\n        /* \"#utility.yul\":6671:6691   */\n      tag_283\n        /* \"#utility.yul\":6689:6690   */\n      dup4\n        /* \"#utility.yul\":6671:6691   */\n      tag_194\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6666:6691   */\n      swap3\n      pop\n        /* \"#utility.yul\":6714:6715   */\n      dup3\n        /* \"#utility.yul\":6711:6712   */\n      dup3\n        /* \"#utility.yul\":6707:6716   */\n      add\n        /* \"#utility.yul\":6700:6716   */\n      swap1\n      pop\n        /* \"#utility.yul\":6735:6738   */\n      dup1\n        /* \"#utility.yul\":6732:6733   */\n      dup3\n        /* \"#utility.yul\":6729:6739   */\n      gt\n        /* \"#utility.yul\":6726:6762   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":6742:6760   */\n      tag_285\n      tag_208\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6726:6762   */\n    tag_284:\n        /* \"#utility.yul\":6578:6769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6775:6969   */\n    tag_159:\n        /* \"#utility.yul\":6815:6819   */\n      0x00\n        /* \"#utility.yul\":6835:6855   */\n      tag_287\n        /* \"#utility.yul\":6853:6854   */\n      dup3\n        /* \"#utility.yul\":6835:6855   */\n      tag_194\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6830:6855   */\n      swap2\n      pop\n        /* \"#utility.yul\":6869:6889   */\n      tag_288\n        /* \"#utility.yul\":6887:6888   */\n      dup4\n        /* \"#utility.yul\":6869:6889   */\n      tag_194\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6864:6889   */\n      swap3\n      pop\n        /* \"#utility.yul\":6913:6914   */\n      dup3\n        /* \"#utility.yul\":6910:6911   */\n      dup3\n        /* \"#utility.yul\":6906:6915   */\n      sub\n        /* \"#utility.yul\":6898:6915   */\n      swap1\n      pop\n        /* \"#utility.yul\":6937:6938   */\n      dup2\n        /* \"#utility.yul\":6931:6935   */\n      dup2\n        /* \"#utility.yul\":6928:6939   */\n      gt\n        /* \"#utility.yul\":6925:6962   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":6942:6960   */\n      tag_290\n      tag_208\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6925:6962   */\n    tag_289:\n        /* \"#utility.yul\":6775:6969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6ee31a03c86deb0bc37c4d82b8a37626f5548a524bd02cdb1019a88e76776bb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_629": {
									"entryPoint": null,
									"id": 629,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "956:552:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1002:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:32:3"
															},
															"nodeType": "YulIf",
															"src": "966:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1095:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1139:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1233:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1278:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1372:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1417:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "910:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "921:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "933:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "941:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "949:6:3",
														"type": ""
													}
												],
												"src": "845:663:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040523480156200001157600080fd5b506040516200162f3803806200162f833981810160405281019062000037919062000146565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050620001a2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010e82620000e1565b9050919050565b620001208162000101565b81146200012c57600080fd5b50565b600081519050620001408162000115565b92915050565b600080600060608486031215620001625762000161620000dc565b5b600062000172868287016200012f565b935050602062000185868287016200012f565b925050604062000198868287016200012f565b9150509250925092565b60805160a05160c0516113f46200023b6000396000818161065a01526107450152600081816102e801528181610466015281816105070152818161076901528181610a2a01528181610cb101528181610d5d0152610e3a0152600081816101cd0152818161020a015281816103c5015281816105a10152818161098a01528181610af901528181610bd60152610f1501526113f46000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637a16af7f116100665780637a16af7f14610139578063a0a986f114610155578063ba9c684514610173578063d21220a714610191578063d96073cf146101af5761009e565b80630dfe1681146100a3578063443cb4bc146100c15780635a76f25e146100df5780636caf25ce146100fd5780637464fc3d1461011b575b600080fd5b6100ab6101cb565b6040516100b89190611018565b60405180910390f35b6100c96101ef565b6040516100d6919061104c565b60405180910390f35b6100e76101f5565b6040516100f4919061104c565b60405180910390f35b6101056101fb565b604051610112919061104c565b60405180910390f35b610123610201565b604051610130919061104c565b60405180910390f35b610153600480360381019061014e9190611098565b610207565b005b61015d61073d565b60405161016a919061104c565b60405180910390f35b61017b610743565b6040516101889190611018565b60405180910390f35b610199610767565b6040516101a69190611018565b60405180910390f35b6101c960048036038101906101c49190611098565b61078b565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60025481565b60045481565b60005481565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102639291906110d8565b602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190611116565b10156102e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dc906111a0565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016103419291906110d8565b602060405180830381865afa15801561035e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190611116565b10156103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba906111a0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610420939291906111c0565b6020604051808303816000875af115801561043f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610463919061122f565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104c1939291906111c0565b6020604051808303816000875af11580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061122f565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161055e9190611018565b602060405180830381865afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f9190611116565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105f89190611018565b602060405180830381865afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190611116565b610643919061128b565b60008190555060006106566000546107db565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106b39291906112cd565b6020604051808303816000875af11580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f6919061122f565b506106ff610988565b7fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516107309291906112cd565b60405180910390a1505050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008211801561079b5750600081145b156107ae576107a982610af6565b6107d7565b6000811180156107be5750600082145b156107d1576107cc81610d5a565b6107d6565b600080fd5b5b5050565b60008082036107ed5760009050610983565b60006001905060008390506000608082901c111561081457608081901c9050604082901b91505b6000604082901c111561083057604081901c9050602082901b91505b6000602082901c111561084c57602081901c9050601082901b91505b6000601082901c111561086857601081901c9050600882901b91505b6000600882901c111561088457600881901c9050600482901b91505b6000600482901c11156108a057600481901c9050600282901b91505b6000600282901c11156108b557600182901b91505b60018285816108c7576108c66112f6565b5b048301901c915060018285816108e0576108df6112f6565b5b048301901c915060018285816108f9576108f86112f6565b5b048301901c91506001828581610912576109116112f6565b5b048301901c9150600182858161092b5761092a6112f6565b5b048301901c91506001828581610944576109436112f6565b5b048301901c9150600182858161095d5761095c6112f6565b5b048301901c915061097e82838681610978576109776112f6565b5b04610fbe565b925050505b919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109e19190611018565b602060405180830381865afa1580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190611116565b6001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a819190611018565b602060405180830381865afa158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac29190611116565b600281905550600154600254610ad89190611325565b600381905550600254600154610aee9190611325565b600481905550565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610b529291906110d8565b602060405180830381865afa158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b939190611116565b1015610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb906111a0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c31939291906111c0565b6020604051808303816000875af1158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c74919061122f565b50600081600154610c859190611356565b600054610c929190611325565b600254610c9f919061138a565b90508060025411610caf57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d0a9291906112cd565b6020604051808303816000875af1158015610d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4d919061122f565b50610d56610988565b5050565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610db69291906110d8565b602060405180830381865afa158015610dd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df79190611116565b1015610e38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2f906111a0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e95939291906111c0565b6020604051808303816000875af1158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed8919061122f565b50600081600254610ee99190611356565b600054610ef69190611325565b600154610f03919061138a565b90508060015411610f1357600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f6e9291906112cd565b6020604051808303816000875af1158015610f8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb1919061122f565b50610fba610988565b5050565b6000818310610fcd5781610fcf565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100282610fd7565b9050919050565b61101281610ff7565b82525050565b600060208201905061102d6000830184611009565b92915050565b6000819050919050565b61104681611033565b82525050565b6000602082019050611061600083018461103d565b92915050565b600080fd5b61107581611033565b811461108057600080fd5b50565b6000813590506110928161106c565b92915050565b600080604083850312156110af576110ae611067565b5b60006110bd85828601611083565b92505060206110ce85828601611083565b9150509250929050565b60006040820190506110ed6000830185611009565b6110fa6020830184611009565b9392505050565b6000815190506111108161106c565b92915050565b60006020828403121561112c5761112b611067565b5b600061113a84828501611101565b91505092915050565b600082825260208201905092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b600061118a601583611143565b915061119582611154565b602082019050919050565b600060208201905081810360008301526111b98161117d565b9050919050565b60006060820190506111d56000830186611009565b6111e26020830185611009565b6111ef604083018461103d565b949350505050565b60008115159050919050565b61120c816111f7565b811461121757600080fd5b50565b60008151905061122981611203565b92915050565b60006020828403121561124557611244611067565b5b60006112538482850161121a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129682611033565b91506112a183611033565b92508282026112af81611033565b915082820484148315176112c6576112c561125c565b5b5092915050565b60006040820190506112e26000830185611009565b6112ef602083018461103d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061133082611033565b915061133b83611033565b92508261134b5761134a6112f6565b5b828204905092915050565b600061136182611033565b915061136c83611033565b92508282019050808211156113845761138361125c565b5b92915050565b600061139582611033565b91506113a083611033565b92508282039050818111156113b8576113b761125c565b5b9291505056fea2646970667358221220d6ee31a03c86deb0bc37c4d82b8a37626f5548a524bd02cdb1019a88e76776bb64736f6c63430008110033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x162F CODESIZE SUB DUP1 PUSH3 0x162F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x146 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1A2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E DUP3 PUSH3 0xE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x120 DUP2 PUSH3 0x101 JUMP JUMPDEST DUP2 EQ PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x140 DUP2 PUSH3 0x115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x162 JUMPI PUSH3 0x161 PUSH3 0xDC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x172 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x185 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x198 DUP7 DUP3 DUP8 ADD PUSH3 0x12F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x13F4 PUSH3 0x23B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x65A ADD MSTORE PUSH2 0x745 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2E8 ADD MSTORE DUP2 DUP2 PUSH2 0x466 ADD MSTORE DUP2 DUP2 PUSH2 0x507 ADD MSTORE DUP2 DUP2 PUSH2 0x769 ADD MSTORE DUP2 DUP2 PUSH2 0xA2A ADD MSTORE DUP2 DUP2 PUSH2 0xCB1 ADD MSTORE DUP2 DUP2 PUSH2 0xD5D ADD MSTORE PUSH2 0xE3A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1CD ADD MSTORE DUP2 DUP2 PUSH2 0x20A ADD MSTORE DUP2 DUP2 PUSH2 0x3C5 ADD MSTORE DUP2 DUP2 PUSH2 0x5A1 ADD MSTORE DUP2 DUP2 PUSH2 0x98A ADD MSTORE DUP2 DUP2 PUSH2 0xAF9 ADD MSTORE DUP2 DUP2 PUSH2 0xBD6 ADD MSTORE PUSH2 0xF15 ADD MSTORE PUSH2 0x13F4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A16AF7F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xBA9C6845 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xD96073CF EQ PUSH2 0x1AF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x11B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BA SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x420 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x656 PUSH1 0x0 SLOAD PUSH2 0x7DB JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B3 SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH2 0x6FF PUSH2 0x988 JUMP JUMPDEST PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x79B JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x7AE JUMPI PUSH2 0x7A9 DUP3 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x7BE JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7CC DUP2 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x814 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x84C JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x868 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x884 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x8C7 JUMPI PUSH2 0x8C6 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x8E0 JUMPI PUSH2 0x8DF PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x912 JUMPI PUSH2 0x911 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x944 JUMPI PUSH2 0x943 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0x97E DUP3 DUP4 DUP7 DUP2 PUSH2 0x978 JUMPI PUSH2 0x977 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV PUSH2 0xFBE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC31 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH2 0xD56 PUSH2 0x988 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB6 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2F SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE95 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH2 0xFBA PUSH2 0x988 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xFCD JUMPI DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1002 DUP3 PUSH2 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1012 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1009 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1046 DUP2 PUSH2 0x1033 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x1033 JUMP JUMPDEST DUP2 EQ PUSH2 0x1080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1092 DUP2 PUSH2 0x106C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x1067 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BD DUP6 DUP3 DUP7 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CE DUP6 DUP3 DUP7 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1009 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1110 DUP2 PUSH2 0x106C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1067 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x113A DUP5 DUP3 DUP6 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118A PUSH1 0x15 DUP4 PUSH2 0x1143 JUMP JUMPDEST SWAP2 POP PUSH2 0x1195 DUP3 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B9 DUP2 PUSH2 0x117D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11D5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1245 JUMPI PUSH2 0x1244 PUSH2 0x1067 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1253 DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1296 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A1 DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x12AF DUP2 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x125C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x12EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1330 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x133B DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1361 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x136C DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1384 JUMPI PUSH2 0x1383 PUSH2 0x125C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A0 DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x125C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xEE BALANCE LOG0 EXTCODECOPY DUP7 0xDE 0xB0 0xBC CALLDATACOPY 0xC4 0xD8 0x2B DUP11 CALLDATACOPY PUSH3 0x6F5548 0xA5 0x24 0xBD MUL 0xCD 0xB1 ADD SWAP11 DUP9 0xE7 PUSH8 0x76BB64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "136:2667:2:-:0;;;485:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;571:7;562:16;;;;;;;;;;597:7;588:16;;;;;;;;;;627:11;614:24;;;;;;;;;;485:160;;;136:2667;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;136:2667:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get0_853": {
									"entryPoint": 3418,
									"id": 853,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@get1_922": {
									"entryPoint": 2806,
									"id": 922,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@kLast_593": {
									"entryPoint": 513,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ltrAddress_591": {
									"entryPoint": 1859,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_42": {
									"entryPoint": 4030,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price0_599": {
									"entryPoint": 1853,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price1_601": {
									"entryPoint": 507,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@provideLiquidity_784": {
									"entryPoint": 519,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@reserve0_595": {
									"entryPoint": 495,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_597": {
									"entryPoint": 501,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_466": {
									"entryPoint": 2011,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_960": {
									"entryPoint": 1931,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token0_587": {
									"entryPoint": 459,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_589": {
									"entryPoint": 1895,
									"id": 589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@update_669": {
									"entryPoint": 2440,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6972:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:3",
														"type": ""
													}
												],
												"src": "593:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:3",
														"type": ""
													}
												],
												"src": "676:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:3",
														"type": ""
													}
												],
												"src": "800:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:3",
														"type": ""
													}
												],
												"src": "1028:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:3"
															},
															"nodeType": "YulIf",
															"src": "1408:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:3",
														"type": ""
													}
												],
												"src": "1355:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:3",
														"type": ""
													}
												],
												"src": "1483:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1711:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1757:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1759:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1759:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1732:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1724:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1724:32:3"
															},
															"nodeType": "YulIf",
															"src": "1721:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1850:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1865:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1879:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1869:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1894:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1929:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1940:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1925:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1925:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1949:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1904:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1904:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1894:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1977:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1992:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2006:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1996:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2022:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2057:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2053:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2053:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2077:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2032:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2022:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1673:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1684:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1696:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1704:6:3",
														"type": ""
													}
												],
												"src": "1628:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2244:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2280:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2405:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2418:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2429:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2414:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2414:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2361:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2361:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2361:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2198:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2210:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2218:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2229:4:3",
														"type": ""
													}
												],
												"src": "2108:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2509:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2519:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2534:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2528:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2519:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2577:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2550:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2550:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2487:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2495:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2503:5:3",
														"type": ""
													}
												],
												"src": "2446:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2672:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2718:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2720:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2720:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2693:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2714:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:32:3"
															},
															"nodeType": "YulIf",
															"src": "2682:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2811:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2826:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2830:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2855:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2901:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2912:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2897:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2897:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2921:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2865:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2865:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2855:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2642:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2653:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2665:6:3",
														"type": ""
													}
												],
												"src": "2595:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3048:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3058:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3058:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3086:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3105:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3110:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3086:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3020:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3025:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3036:11:3",
														"type": ""
													}
												],
												"src": "2952:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3233:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3255:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3263:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3251:14:3"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3267:23:3",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3244:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3225:6:3",
														"type": ""
													}
												],
												"src": "3127:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3450:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3460:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3531:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3467:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3460:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3632:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nodeType": "YulIdentifier",
																	"src": "3543:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3543:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3543:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3645:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3656:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3661:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3652:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3645:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3438:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3446:3:3",
														"type": ""
													}
												],
												"src": "3304:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3847:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3857:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3869:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3880:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3865:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3865:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3857:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3904:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3915:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3900:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3900:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3923:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3929:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3919:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3893:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3949:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4083:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3957:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3957:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3949:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3827:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3842:4:3",
														"type": ""
													}
												],
												"src": "3676:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4255:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4265:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4277:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4273:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4273:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4265:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4358:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4369:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4354:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4354:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4301:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4301:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4426:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4439:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4450:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4435:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4435:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4382:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4382:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4508:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4521:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4532:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4517:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4517:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4464:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4464:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4211:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4223:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4231:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4239:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4250:4:3",
														"type": ""
													}
												],
												"src": "4101:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4601:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4626:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4619:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4619:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4612:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4601:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4573:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4583:7:3",
														"type": ""
													}
												],
												"src": "4549:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4685:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4739:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4748:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4751:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4741:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4741:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4741:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4708:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4730:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4715:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4715:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4705:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4705:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4698:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:40:3"
															},
															"nodeType": "YulIf",
															"src": "4695:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4678:5:3",
														"type": ""
													}
												],
												"src": "4645:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4827:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4837:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4852:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4846:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4837:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4892:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4868:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4868:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4805:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4813:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4821:5:3",
														"type": ""
													}
												],
												"src": "4767:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4984:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5030:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5032:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5032:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5032:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5005:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5014:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5001:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5001:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5026:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4997:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:32:3"
															},
															"nodeType": "YulIf",
															"src": "4994:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5123:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5138:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5152:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5142:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5167:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5210:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5221:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5206:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5206:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5230:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5177:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5167:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4954:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4965:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4977:6:3",
														"type": ""
													}
												],
												"src": "4910:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5289:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5309:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5299:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5406:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5396:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5396:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5396:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5427:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5430:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5420:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5420:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5261:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5495:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5505:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5528:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5510:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5510:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5505:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5539:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5562:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5544:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5539:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5573:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5596:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5599:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5592:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "5577:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5610:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5639:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5621:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5610:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5828:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5830:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5830:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5830:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5761:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5754:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5754:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5784:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5791:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5800:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5787:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5787:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5781:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5781:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5734:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5734:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5714:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5714:113:3"
															},
															"nodeType": "YulIf",
															"src": "5711:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5478:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5481:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5487:7:3",
														"type": ""
													}
												],
												"src": "5447:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5989:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5999:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6011:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6022:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6007:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5999:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6079:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6092:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6103:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6035:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6035:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6160:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6173:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6184:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6116:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6116:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5953:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5965:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5973:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5984:4:3",
														"type": ""
													}
												],
												"src": "5863:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6229:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6246:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6249:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6239:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6343:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6346:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6336:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6336:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6336:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6370:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6360:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6360:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6201:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6429:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6439:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6462:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6444:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6439:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6473:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6496:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6478:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6473:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6520:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6522:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6522:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6522:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6517:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6510:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6510:9:3"
															},
															"nodeType": "YulIf",
															"src": "6507:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6552:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6561:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6564:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6552:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6418:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6421:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6427:1:3",
														"type": ""
													}
												],
												"src": "6387:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6622:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6632:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6655:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6637:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6637:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6632:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6666:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6689:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6671:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6671:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6666:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6700:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6711:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6714:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6707:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6700:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6740:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6742:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6742:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6742:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6732:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6735:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6729:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:10:3"
															},
															"nodeType": "YulIf",
															"src": "6726:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6609:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6612:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6618:3:3",
														"type": ""
													}
												],
												"src": "6578:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6820:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6830:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6853:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6835:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6830:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6864:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6887:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6869:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6864:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6898:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6910:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6913:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6906:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6906:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6898:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6940:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6942:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6942:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6942:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6931:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6937:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6928:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6928:11:3"
															},
															"nodeType": "YulIf",
															"src": "6925:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6806:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6809:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6815:4:3",
														"type": ""
													}
												],
												"src": "6775:194:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"587": [
									{
										"length": 32,
										"start": 461
									},
									{
										"length": 32,
										"start": 522
									},
									{
										"length": 32,
										"start": 965
									},
									{
										"length": 32,
										"start": 1441
									},
									{
										"length": 32,
										"start": 2442
									},
									{
										"length": 32,
										"start": 2809
									},
									{
										"length": 32,
										"start": 3030
									},
									{
										"length": 32,
										"start": 3861
									}
								],
								"589": [
									{
										"length": 32,
										"start": 744
									},
									{
										"length": 32,
										"start": 1126
									},
									{
										"length": 32,
										"start": 1287
									},
									{
										"length": 32,
										"start": 1897
									},
									{
										"length": 32,
										"start": 2602
									},
									{
										"length": 32,
										"start": 3249
									},
									{
										"length": 32,
										"start": 3421
									},
									{
										"length": 32,
										"start": 3642
									}
								],
								"591": [
									{
										"length": 32,
										"start": 1626
									},
									{
										"length": 32,
										"start": 1861
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A16AF7F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xBA9C6845 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xD96073CF EQ PUSH2 0x1AF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x11B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BA SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x420 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x656 PUSH1 0x0 SLOAD PUSH2 0x7DB JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B3 SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH2 0x6FF PUSH2 0x988 JUMP JUMPDEST PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x79B JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x7AE JUMPI PUSH2 0x7A9 DUP3 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x7BE JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7CC DUP2 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x7ED JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x814 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x84C JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x868 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x884 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x8C7 JUMPI PUSH2 0x8C6 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x8E0 JUMPI PUSH2 0x8DF PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x912 JUMPI PUSH2 0x911 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x944 JUMPI PUSH2 0x943 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0x97E DUP3 DUP4 DUP7 DUP2 PUSH2 0x978 JUMPI PUSH2 0x977 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DIV PUSH2 0xFBE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC31 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH2 0xD56 PUSH2 0x988 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB6 SWAP3 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2F SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE95 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x138A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP3 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB1 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST POP PUSH2 0xFBA PUSH2 0x988 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xFCD JUMPI DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1002 DUP3 PUSH2 0xFD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1012 DUP2 PUSH2 0xFF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1009 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1046 DUP2 PUSH2 0x1033 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1061 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x1033 JUMP JUMPDEST DUP2 EQ PUSH2 0x1080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1092 DUP2 PUSH2 0x106C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x1067 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BD DUP6 DUP3 DUP7 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CE DUP6 DUP3 DUP7 ADD PUSH2 0x1083 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1009 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1110 DUP2 PUSH2 0x106C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1067 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x113A DUP5 DUP3 DUP6 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118A PUSH1 0x15 DUP4 PUSH2 0x1143 JUMP JUMPDEST SWAP2 POP PUSH2 0x1195 DUP3 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B9 DUP2 PUSH2 0x117D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11D5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x11E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x11EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1245 JUMPI PUSH2 0x1244 PUSH2 0x1067 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1253 DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1296 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A1 DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x12AF DUP2 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x125C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x12EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x103D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1330 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x133B DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1361 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x136C DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1384 JUMPI PUSH2 0x1383 PUSH2 0x125C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP3 PUSH2 0x1033 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A0 DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x125C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xEE BALANCE LOG0 EXTCODECOPY DUP7 0xDE 0xB0 0xBC CALLDATACOPY 0xC4 0xD8 0x2B DUP11 CALLDATACOPY PUSH3 0x6F5548 0xA5 0x24 0xBD MUL 0xCD 0xB1 ADD SWAP11 DUP9 0xE7 PUSH8 0x76BB64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "136:2667:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;297:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;326;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;271:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;888:709;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;355:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;230:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;193:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;156:31;;;:::o;297:23::-;;;;:::o;326:::-;;;;:::o;382:21::-;;;;:::o;271:20::-;;;;:::o;888:709::-;1032:8;984:6;977:24;;;1002:10;1022:4;977:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;969:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1139:8;1091:6;1084:24;;;1109:10;1129:4;1084:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1076:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1190:6;1183:27;;;1211:10;1231:4;1238:8;1183:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1264:6;1257:27;;;1285:10;1305:4;1312:8;1257:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1388:6;1381:24;;;1414:4;1381:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1346:6;1339:24;;;1372:4;1339:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;;:::i;:::-;1331:5;:89;;;;1430:14;1447:16;1457:5;;1447:9;:16::i;:::-;1430:33;;1480:10;1473:27;;;1501:10;1513:6;1473:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1530:8;:6;:8::i;:::-;1553:37;1571:10;1583:6;1553:37;;;;;;;:::i;:::-;;;;;;;;959:638;888:709;;:::o;355:21::-;;;;:::o;230:35::-;;;:::o;193:31::-;;;:::o;2543:258::-;2622:1;2612:7;:11;:27;;;;;2638:1;2627:7;:12;2612:27;2608:187;;;2655:13;2660:7;2655:4;:13::i;:::-;2608:187;;;2699:1;2689:7;:11;:27;;;;;2715:1;2704:7;:12;2689:27;2685:110;;;2732:13;2737:7;2732:4;:13::i;:::-;2685:110;;;2776:8;;;2685:110;2608:187;2543:258;;:::o;6281:2206:0:-;6329:7;6357:1;6352;:6;6348:45;;6381:1;6374:8;;;;6348:45;7058:14;7075:1;7058:18;;7086:9;7098:1;7086:13;;7124:1;7118:3;7113:1;:8;;:12;7109:79;;;7147:3;7141:9;;;;;7175:2;7164:13;;;;;7109:79;7211:1;7206:2;7201:1;:7;;:11;7197:77;;;7234:2;7228:8;;;;;7261:2;7250:13;;;;;7197:77;7297:1;7292:2;7287:1;:7;;:11;7283:77;;;7320:2;7314:8;;;;;7347:2;7336:13;;;;;7283:77;7383:1;7378:2;7373:1;:7;;:11;7369:76;;;7406:2;7400:8;;;;;7433:1;7422:12;;;;;7369:76;7467:1;7463;7458;:6;;:10;7454:74;;;7490:1;7484:7;;;;;7516:1;7505:12;;;;;7454:74;7550:1;7546;7541;:6;;:10;7537:74;;;7573:1;7567:7;;;;;7599:1;7588:12;;;;;7537:74;7633:1;7629;7624;:6;;:10;7620:53;;;7661:1;7650:12;;;;;7620:53;8131:1;8120:6;8116:1;:10;;;;;:::i;:::-;;;8107:6;:19;8106:26;;8097:35;;8180:1;8169:6;8165:1;:10;;;;;:::i;:::-;;;8156:6;:19;8155:26;;8146:35;;8229:1;8218:6;8214:1;:10;;;;;:::i;:::-;;;8205:6;:19;8204:26;;8195:35;;8278:1;8267:6;8263:1;:10;;;;;:::i;:::-;;;8254:6;:19;8253:26;;8244:35;;8327:1;8316:6;8312:1;:10;;;;;:::i;:::-;;;8303:6;:19;8302:26;;8293:35;;8376:1;8365:6;8361:1;:10;;;;;:::i;:::-;;;8352:6;:19;8351:26;;8342:35;;8425:1;8414:6;8410:1;:10;;;;;:::i;:::-;;;8401:6;:19;8400:26;;8391:35;;8447:23;8451:6;8463;8459:1;:10;;;;;:::i;:::-;;;8447:3;:23::i;:::-;8440:30;;;;6281:2206;;;;:::o;651:229:2:-;705:6;698:24;;;731:4;698:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;687:8;:50;;;;765:6;758:24;;;791:4;758:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;747:8;:50;;;;827:8;;816;;:19;;;;:::i;:::-;807:6;:28;;;;865:8;;854;;:19;;;;:::i;:::-;845:6;:28;;;;651:229::o;2073:464::-;2186:8;2138:6;2131:24;;;2156:10;2176:4;2131:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;2123:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:6;2230:27;;;2258:10;2278:4;2285:8;2230:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2304:17;2356:8;2345;;:19;;;;:::i;:::-;2336:5;;:29;;;;:::i;:::-;2324:8;;:42;;;;:::i;:::-;2304:62;;2393:9;2381:8;;:21;2377:136;;2418:8;;;2377:136;2463:6;2456:23;;;2480:10;2492:9;2456:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2522:8;:6;:8::i;:::-;2113:424;2073:464;:::o;1603:::-;1716:8;1668:6;1661:24;;;1686:10;1706:4;1661:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1653:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:6;1760:27;;;1788:10;1808:4;1815:8;1760:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1834:17;1886:8;1875;;:19;;;;:::i;:::-;1866:5;;:29;;;;:::i;:::-;1854:8;;:42;;;;:::i;:::-;1834:62;;1922:9;1910:8;;:21;1906:136;;1947:8;;;1906:136;1992:6;1985:23;;;2009:10;2021:9;1985:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2052:8;:6;:8::i;:::-;1643:424;1603:464;:::o;589:104:0:-;647:7;677:1;673;:5;:13;;685:1;673:13;;;681:1;673:13;666:20;;589:104;;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:474::-;1696:6;1704;1753:2;1741:9;1732:7;1728:23;1724:32;1721:119;;;1759:79;;:::i;:::-;1721:119;1879:1;1904:53;1949:7;1940:6;1929:9;1925:22;1904:53;:::i;:::-;1894:63;;1850:117;2006:2;2032:53;2077:7;2068:6;2057:9;2053:22;2032:53;:::i;:::-;2022:63;;1977:118;1628:474;;;;;:::o;2108:332::-;2229:4;2267:2;2256:9;2252:18;2244:26;;2280:71;2348:1;2337:9;2333:17;2324:6;2280:71;:::i;:::-;2361:72;2429:2;2418:9;2414:18;2405:6;2361:72;:::i;:::-;2108:332;;;;;:::o;2446:143::-;2503:5;2534:6;2528:13;2519:22;;2550:33;2577:5;2550:33;:::i;:::-;2446:143;;;;:::o;2595:351::-;2665:6;2714:2;2702:9;2693:7;2689:23;2685:32;2682:119;;;2720:79;;:::i;:::-;2682:119;2840:1;2865:64;2921:7;2912:6;2901:9;2897:22;2865:64;:::i;:::-;2855:74;;2811:128;2595:351;;;;:::o;2952:169::-;3036:11;3070:6;3065:3;3058:19;3110:4;3105:3;3101:14;3086:29;;2952:169;;;;:::o;3127:171::-;3267:23;3263:1;3255:6;3251:14;3244:47;3127:171;:::o;3304:366::-;3446:3;3467:67;3531:2;3526:3;3467:67;:::i;:::-;3460:74;;3543:93;3632:3;3543:93;:::i;:::-;3661:2;3656:3;3652:12;3645:19;;3304:366;;;:::o;3676:419::-;3842:4;3880:2;3869:9;3865:18;3857:26;;3929:9;3923:4;3919:20;3915:1;3904:9;3900:17;3893:47;3957:131;4083:4;3957:131;:::i;:::-;3949:139;;3676:419;;;:::o;4101:442::-;4250:4;4288:2;4277:9;4273:18;4265:26;;4301:71;4369:1;4358:9;4354:17;4345:6;4301:71;:::i;:::-;4382:72;4450:2;4439:9;4435:18;4426:6;4382:72;:::i;:::-;4464;4532:2;4521:9;4517:18;4508:6;4464:72;:::i;:::-;4101:442;;;;;;:::o;4549:90::-;4583:7;4626:5;4619:13;4612:21;4601:32;;4549:90;;;:::o;4645:116::-;4715:21;4730:5;4715:21;:::i;:::-;4708:5;4705:32;4695:60;;4751:1;4748;4741:12;4695:60;4645:116;:::o;4767:137::-;4821:5;4852:6;4846:13;4837:22;;4868:30;4892:5;4868:30;:::i;:::-;4767:137;;;;:::o;4910:345::-;4977:6;5026:2;5014:9;5005:7;5001:23;4997:32;4994:119;;;5032:79;;:::i;:::-;4994:119;5152:1;5177:61;5230:7;5221:6;5210:9;5206:22;5177:61;:::i;:::-;5167:71;;5123:125;4910:345;;;;:::o;5261:180::-;5309:77;5306:1;5299:88;5406:4;5403:1;5396:15;5430:4;5427:1;5420:15;5447:410;5487:7;5510:20;5528:1;5510:20;:::i;:::-;5505:25;;5544:20;5562:1;5544:20;:::i;:::-;5539:25;;5599:1;5596;5592:9;5621:30;5639:11;5621:30;:::i;:::-;5610:41;;5800:1;5791:7;5787:15;5784:1;5781:22;5761:1;5754:9;5734:83;5711:139;;5830:18;;:::i;:::-;5711:139;5495:362;5447:410;;;;:::o;5863:332::-;5984:4;6022:2;6011:9;6007:18;5999:26;;6035:71;6103:1;6092:9;6088:17;6079:6;6035:71;:::i;:::-;6116:72;6184:2;6173:9;6169:18;6160:6;6116:72;:::i;:::-;5863:332;;;;;:::o;6201:180::-;6249:77;6246:1;6239:88;6346:4;6343:1;6336:15;6370:4;6367:1;6360:15;6387:185;6427:1;6444:20;6462:1;6444:20;:::i;:::-;6439:25;;6478:20;6496:1;6478:20;:::i;:::-;6473:25;;6517:1;6507:35;;6522:18;;:::i;:::-;6507:35;6564:1;6561;6557:9;6552:14;;6387:185;;;;:::o;6578:191::-;6618:3;6637:20;6655:1;6637:20;:::i;:::-;6632:25;;6671:20;6689:1;6671:20;:::i;:::-;6666:25;;6714:1;6711;6707:9;6700:16;;6735:3;6732:1;6729:10;6726:36;;;6742:18;;:::i;:::-;6726:36;6578:191;;;;:::o;6775:194::-;6815:4;6835:20;6853:1;6835:20;:::i;:::-;6830:25;;6869:20;6887:1;6869:20;:::i;:::-;6864:25;;6913:1;6910;6906:9;6898:17;;6937:1;6931:4;6928:11;6925:37;;;6942:18;;:::i;:::-;6925:37;6775:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1021600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"kLast()": "2518",
								"ltrAddress()": "infinite",
								"price0()": "2451",
								"price1()": "2496",
								"provideLiquidity(uint256,uint256)": "infinite",
								"reserve0()": "2452",
								"reserve1()": "2474",
								"swap(uint256,uint256)": "infinite",
								"token0()": "infinite",
								"token1()": "infinite"
							},
							"internal": {
								"get0(uint256)": "infinite",
								"get1(uint256)": "infinite",
								"update()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 645,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 645,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 485,
									"end": 645,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 485,
									"end": 645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 485,
									"end": 645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 571,
									"end": 578,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 562,
									"end": 578,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 562,
									"end": 578,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 562,
									"end": 578,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 562,
									"end": 578,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 597,
									"end": 604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 588,
									"end": 604,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 588,
									"end": 604,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 588,
									"end": 604,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 588,
									"end": 604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 588,
									"end": 604,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 588,
									"end": 604,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 588,
									"end": 604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 588,
									"end": 604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 588,
									"end": 604,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 588,
									"end": 604,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 627,
									"end": 638,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 614,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 614,
									"end": 638,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 614,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 614,
									"end": 638,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 614,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 614,
									"end": 638,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 614,
									"end": 638,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 614,
									"end": 638,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 614,
									"end": 638,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 614,
									"end": 638,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 485,
									"end": 645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "591"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "589"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "587"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 2803,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6ee31a03c86deb0bc37c4d82b8a37626f5548a524bd02cdb1019a88e76776bb64736f6c63430008110033",
									".code": [
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "7A16AF7F"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "7A16AF7F"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "A0A986F1"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "BA9C6845"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "D21220A7"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "D96073CF"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "DFE1681"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "443CB4BC"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "5A76F25E"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "6CAF25CE"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "7464FC3D"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 136,
											"end": 2803,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 156,
											"end": 187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 156,
											"end": 187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 326,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 326,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 382,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 382,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 271,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 271,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 888,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 888,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 355,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 355,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 230,
											"end": 265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 230,
											"end": 265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 193,
											"end": 224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 193,
											"end": 224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 156,
											"end": 187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 156,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 320,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 349,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 326,
											"end": 349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 382,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 984,
											"end": 990,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 977,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 977,
											"end": 1001,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 977,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 977,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 977,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 969,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 969,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1084,
											"end": 1108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1084,
											"end": 1108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1108,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1109,
											"end": 1119,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1084,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1084,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1084,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1076,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1076,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1196,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1183,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1183,
											"end": 1210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1210,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1211,
											"end": 1221,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1235,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1246,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1183,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1183,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1257,
											"end": 1284,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1284,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1285,
											"end": 1295,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1309,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1320,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1257,
											"end": 1321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1257,
											"end": 1321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1414,
											"end": 1418,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1381,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1381,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1381,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1339,
											"end": 1363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1363,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1372,
											"end": 1376,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1339,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1339,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1339,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1339,
											"end": 1420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1339,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1420,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1339,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1420,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1447,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1447,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1490,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "591"
										},
										{
											"begin": 1473,
											"end": 1500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1500,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1501,
											"end": 1511,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1530,
											"end": 1538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1538,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1530,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1571,
											"end": 1581,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1553,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1590,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 355,
											"end": 376,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "591"
										},
										{
											"begin": 230,
											"end": 265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 230,
											"end": 265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 193,
											"end": 224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 193,
											"end": 224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2639,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2639,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2612,
											"end": 2639,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2639,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2639,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2612,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2700,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2732,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2745,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2732,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2776,
											"end": 2784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2776,
											"end": 2784,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2685,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2608,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8116,
											"end": 8126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8165,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8214,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8263,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8312,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8361,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8410,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8459,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8447,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 880,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 651,
											"end": 880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 711,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 698,
											"end": 722,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 698,
											"end": 722,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 731,
											"end": 735,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 698,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 698,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 737,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 698,
											"end": 737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 737,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 765,
											"end": 771,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 758,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 782,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 758,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 791,
											"end": 795,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 758,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 758,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 758,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 747,
											"end": 797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 797,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 747,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 827,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 827,
											"end": 835,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 816,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 816,
											"end": 824,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 816,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 816,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 816,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 816,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 816,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 816,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 816,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 835,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 865,
											"end": 873,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 854,
											"end": 862,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 854,
											"end": 873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 854,
											"end": 873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 873,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 854,
											"end": 873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 845,
											"end": 851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 845,
											"end": 873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 845,
											"end": 873,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 845,
											"end": 873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 651,
											"end": 880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2073,
											"end": 2537,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2073,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2131,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2156,
											"end": 2166,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2131,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2131,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2131,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2123,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2123,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2230,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2293,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2230,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2230,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2353,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2345,
											"end": 2353,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2345,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2336,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2324,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2324,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2389,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2381,
											"end": 2389,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2402,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2377,
											"end": 2513,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2426,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2377,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2469,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 2456,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2480,
											"end": 2490,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2456,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2456,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2522,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2522,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2530,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2522,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2073,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2073,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1603,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1724,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1674,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1686,
											"end": 1696,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1710,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1661,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1661,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1661,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1724,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1724,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1653,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1653,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1760,
											"end": 1787,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1787,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1823,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1760,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1760,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1875,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1866,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1895,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1854,
											"end": 1862,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1854,
											"end": 1896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1854,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1896,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1854,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1918,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1910,
											"end": 1918,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1931,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1906,
											"end": 2042,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1955,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 2042,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1906,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1985,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2009,
											"end": 2019,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2030,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1985,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1985,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2052,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2052,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2052,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1724,
											"end": 1756,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1759,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1904,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2075,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2032,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2440,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2108,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2280,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2361,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2433,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2361,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2440,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2589,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2446,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2541,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2550,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2589,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2589,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2716,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 2712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2717,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2801,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2682,
											"end": 2801,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2720,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2720,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2801,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2682,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2897,
											"end": 2919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2865,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2929,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2865,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2929,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2952,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3076,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 3121,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 3121,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 3121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 3121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3127,
											"end": 3298,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3127,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3267,
											"end": 3290,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3127,
											"end": 3298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3127,
											"end": 3298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3670,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3304,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3531,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3526,
											"end": 3529,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3467,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3534,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3467,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3632,
											"end": 3635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3543,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3636,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3543,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3664,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 4095,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3676,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 3883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3939,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3917,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3940,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4083,
											"end": 4087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3957,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3957,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3949,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3949,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 4095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 4095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 4095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 4095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4277,
											"end": 4286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4367,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4345,
											"end": 4351,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4301,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4301,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4450,
											"end": 4452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4382,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4454,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4382,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 4532,
											"end": 4534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4521,
											"end": 4530,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4517,
											"end": 4535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4464,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4536,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 4464,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4619,
											"end": 4632,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4633,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4761,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4645,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 4730,
											"end": 4735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4715,
											"end": 4736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4736,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 4715,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4705,
											"end": 4737,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4695,
											"end": 4755,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4741,
											"end": 4753,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 4755,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4695,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4904,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4767,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4846,
											"end": 4859,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4892,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4868,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4904,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4910,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5005,
											"end": 5012,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5029,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5113,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4994,
											"end": 5113,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5032,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5032,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5111,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5032,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5113,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4994,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5177,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5238,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5177,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5255,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5255,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5441,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5261,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5386,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5410,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5403,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5396,
											"end": 5411,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5435,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5857,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5447,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5528,
											"end": 5529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5510,
											"end": 5530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5562,
											"end": 5563,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5544,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5539,
											"end": 5564,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5539,
											"end": 5564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5599,
											"end": 5600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5601,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5639,
											"end": 5650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5621,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5802,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5784,
											"end": 5785,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5781,
											"end": 5803,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5734,
											"end": 5817,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 5711,
											"end": 5850,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5830,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5850,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 5711,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 5857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5857,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 6195,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5863,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5984,
											"end": 5988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6024,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5999,
											"end": 6025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5999,
											"end": 6025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6103,
											"end": 6104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6088,
											"end": 6105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6035,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6106,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6035,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6116,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6184,
											"end": 6186,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6116,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6116,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6116,
											"end": 6188,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6116,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 6195,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 6195,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 6195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 6195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 6195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 6195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6201,
											"end": 6381,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6201,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6326,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6246,
											"end": 6247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6327,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6343,
											"end": 6344,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6336,
											"end": 6351,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6375,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6572,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6387,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 6428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6462,
											"end": 6463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6444,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6444,
											"end": 6464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6444,
											"end": 6464,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6444,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6478,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6496,
											"end": 6497,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6478,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6478,
											"end": 6498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6478,
											"end": 6498,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6478,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6473,
											"end": 6498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6473,
											"end": 6498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6517,
											"end": 6518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6507,
											"end": 6542,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6522,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6542,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6507,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6769,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6578,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6655,
											"end": 6656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6637,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6689,
											"end": 6690,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6671,
											"end": 6691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6666,
											"end": 6691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6666,
											"end": 6691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6739,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6726,
											"end": 6762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6742,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6762,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6726,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6969,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6775,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6853,
											"end": 6854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6835,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6835,
											"end": 6855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6835,
											"end": 6855,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6835,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6855,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6869,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6889,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6869,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6889,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 6915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6937,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 6939,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6962,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6925,
											"end": 6962,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6942,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6962,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6925,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6969,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"kLast()": "7464fc3d",
							"ltrAddress()": "ba9c6845",
							"price0()": "a0a986f1",
							"price1()": "6caf25ce",
							"provideLiquidity(uint256,uint256)": "7a16af7f",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(uint256,uint256)": "d96073cf",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ltrAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltrAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_token0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_token1\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0x7741108d7d78ec98e5e3df82f42ba5a0f3121a1a44c41894be75425eb24b40ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9eaee533c82ee8e9fcad67f160105b02ae963242ac01e98a873475da2c983b2\",\"dweb:/ipfs/QmeTtB1BKqdB5we85SFPkaUiHdivLFxL1F4zRX3TFWXCxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 593,
								"contract": "contracts/Pool.sol:Pool",
								"label": "kLast",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 595,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve0",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 597,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve1",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 599,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price0",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 601,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5960:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nameLocations": [
															"5817:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8732:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nameLocations": [
															"8612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 515,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 524,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 581,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 581,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 581,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 581,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 581,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 581,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2660:1"
				},
				"id": 1
			},
			"contracts/Pool.sol": {
				"ast": {
					"absolutePath": "contracts/Pool.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						],
						"Math": [
							503
						],
						"Pool": [
							961
						]
					},
					"id": 962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 962,
							"sourceUnit": 582,
							"src": "58:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 962,
							"sourceUnit": 504,
							"src": "81:53:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Pool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 961,
							"linearizedBaseContracts": [
								961
							],
							"name": "Pool",
							"nameLocation": "145:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 587,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "181:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "156:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 586,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "156:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 589,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "218:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "193:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "193:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba9c6845",
									"id": 591,
									"mutability": "immutable",
									"name": "ltrAddress",
									"nameLocation": "255:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "230:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7464fc3d",
									"id": 593,
									"mutability": "mutable",
									"name": "kLast",
									"nameLocation": "286:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "271:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "271:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 595,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "312:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "297:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 597,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "341:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "326:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 596,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0a986f1",
									"id": 599,
									"mutability": "mutable",
									"name": "price0",
									"nameLocation": "370:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "355:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "355:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6caf25ce",
									"id": 601,
									"mutability": "mutable",
									"name": "price1",
									"nameLocation": "397:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "382:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "382:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6",
									"id": 607,
									"name": "liquidityProvided",
									"nameLocation": "416:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "442:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "434:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:45:2"
									},
									"src": "410:69:2"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "552:93:2",
										"statements": [
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 616,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "562:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 617,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "571:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "562:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "562:16:2"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "588:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "597:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "588:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "588:16:2"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 624,
														"name": "ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "614:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 625,
														"name": "_ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "627:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "614:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "614:24:2"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "505:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "497:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "522:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "514:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_ltrAddress",
												"nameLocation": "539:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "531:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:55:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:0:2"
									},
									"scope": 961,
									"src": "485:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "677:203:2",
										"statements": [
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "687:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 639,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "731:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$961",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$961",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "723:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 637,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "723:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "723:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 634,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "705:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 633,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "698:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "698:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "713:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "698:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "698:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "687:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "687:50:2"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "747:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 651,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "791:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$961",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$961",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "783:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "783:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "783:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 646,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "765:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 645,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "758:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "758:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "773:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "758:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "758:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "747:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "747:50:2"
											},
											{
												"expression": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "price0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "807:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 657,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "816:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 658,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "827:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "816:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "807:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "807:28:2"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 662,
														"name": "price1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "845:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 663,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "854:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 664,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "865:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "854:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "845:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "845:28:2"
											}
										]
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "660:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:2:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:2"
									},
									"scope": 961,
									"src": "651:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "959:638:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 681,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1002:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1006:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1002:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 685,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1022:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1014:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1014:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1014:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 678,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "984:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 677,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "977:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "977:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "992:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "977:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "977:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 688,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1032:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "977:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1042:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "969:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "969:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 698,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1109:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1113:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1109:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 702,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1129:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1121:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1121:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1121:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 695,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1091:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 694,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1084:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1084:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1099:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1084:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1084:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 705,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1139:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1084:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1076:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1076:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 714,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1211:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1215:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1211:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 718,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1231:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1223:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1223:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1223:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1238:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 711,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1190:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 710,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1183:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1183:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1198:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1183:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1183:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "1183:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1285:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1289:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1285:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 731,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1305:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1297:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1297:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1297:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1312:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 724,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1264:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 723,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1257:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1257:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1272:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1257:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1257:64:2"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1331:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 743,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1372:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$961",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$961",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1364:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1364:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1364:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 738,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "1346:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 737,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1339:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1339:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1354:9:2",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1339:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1339:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 752,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1414:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$961",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$961",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1406:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 750,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1406:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1406:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 747,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "1388:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 746,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1381:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1381:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1396:9:2",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1381:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1339:81:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1331:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1331:89:2"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "1438:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "1430:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1430:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1457:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 760,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1447:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$503_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1452:4:2",
														"memberName": "sqrt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "1447:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1430:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1501:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1505:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1501:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1513:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 766,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1480:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 765,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1473:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1473:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1492:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1473:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "1473:47:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 774,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1530:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "1530:8:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 778,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1571:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1575:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1571:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1583:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1553:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1553:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "EmitStatement",
												"src": "1548:42:2"
											}
										]
									},
									"functionSelector": "7a16af7f",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "897:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "922:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "914:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "940:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "932:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:36:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:2"
									},
									"scope": 961,
									"src": "888:709:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "1643:424:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 794,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1686:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1690:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1686:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 798,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1706:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1698:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 796,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1698:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1698:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 791,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1668:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 790,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1661:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1661:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1676:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1661:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1661:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 801,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "1716:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1661:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1726:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1653:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1653:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1653:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1788:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1792:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1788:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 814,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1808:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1800:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1800:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1800:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "1815:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 807,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1767:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 806,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1760:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1760:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1775:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1760:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1760:64:2"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "1842:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "1834:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1834:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 830,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1854:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "1866:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 823,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "1875:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 824,
																				"name": "_amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 786,
																				"src": "1886:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1875:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1874:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1866:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 828,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1865:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1854:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1834:62:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1910:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 832,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1922:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1910:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 847,
													"nodeType": "Block",
													"src": "1971:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 842,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2009:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2013:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2009:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 844,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2021:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 839,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "1992:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 838,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1985:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1985:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2000:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "1985:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1985:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 846,
															"nodeType": "ExpressionStatement",
															"src": "1985:46:2"
														}
													]
												},
												"id": 848,
												"nodeType": "IfStatement",
												"src": "1906:136:2",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "1933:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 834,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1947:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1947:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "ExpressionStatement",
															"src": "1947:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 849,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2052:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "2052:8:2"
											}
										]
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get0",
									"nameLocation": "1612:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1625:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1617:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:18:2"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1643:0:2"
									},
									"scope": 961,
									"src": "1603:464:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2113:424:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 863,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2156:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2160:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2156:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 867,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2176:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$961",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2168:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2168:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2168:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 860,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2138:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 859,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2131:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2131:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2146:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "2131:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2131:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 870,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "2186:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2196:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2123:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "2123:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 879,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2258:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2262:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2258:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 883,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2278:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$961",
																		"typeString": "contract Pool"
																	}
																],
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2270:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 881,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2270:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2270:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "2285:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 876,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2237:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 875,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2230:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2230:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2245:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2230:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "2230:64:2"
											},
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "2312:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 921,
														"src": "2304:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2304:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2324:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 891,
																	"name": "kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "2336:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 892,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 595,
																				"src": "2345:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 893,
																				"name": "_amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "2356:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2345:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 895,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2344:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2336:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 897,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2335:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2324:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2304:62:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 900,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2381:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 901,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2393:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2381:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "2442:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 911,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2480:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2484:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2480:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 913,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "2492:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 908,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "2463:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 907,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2456:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2456:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2471:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2456:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2456:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 915,
															"nodeType": "ExpressionStatement",
															"src": "2456:46:2"
														}
													]
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "2377:136:2",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "2404:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 903,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2418:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2418:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "2418:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 918,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2522:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "2522:8:2"
											}
										]
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get1",
									"nameLocation": "2082:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2095:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2087:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:18:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:0:2"
									},
									"scope": 961,
									"src": "2073:464:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "2598:203:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 929,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "2612:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2622:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2612:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 932,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2627:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2638:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2627:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2612:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 941,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2689:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2699:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2689:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 944,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "2704:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2715:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2704:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2689:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 956,
														"nodeType": "Block",
														"src": "2762:33:2",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 953,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2776:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2776:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 955,
																"nodeType": "ExpressionStatement",
																"src": "2776:8:2"
															}
														]
													},
													"id": 957,
													"nodeType": "IfStatement",
													"src": "2685:110:2",
													"trueBody": {
														"id": 952,
														"nodeType": "Block",
														"src": "2718:38:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 949,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "2737:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 948,
																		"name": "get0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "2732:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2732:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 951,
																"nodeType": "ExpressionStatement",
																"src": "2732:13:2"
															}
														]
													}
												},
												"id": 958,
												"nodeType": "IfStatement",
												"src": "2608:187:2",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "2641:38:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 937,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "2660:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 936,
																	"name": "get1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "2655:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2655:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 939,
															"nodeType": "ExpressionStatement",
															"src": "2655:13:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d96073cf",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2552:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "2565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "2557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "2582:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "2574:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2556:34:2"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2598:0:2"
									},
									"scope": 961,
									"src": "2543:258:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 962,
							"src": "136:2667:2",
							"usedErrors": []
						}
					],
					"src": "33:2770:2"
				},
				"id": 2
			}
		}
	}
}