{
	"id": "62d35ab3a2a21762886b0de20fc47712",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\n\n1. We will need to know the addresses of the tokens held within the pool.\n2. \n\n\n*/\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ncontract Pool {\n    address public immutable token0;\n    address public immutable token1;\n    address public immutable ltrAddress;\n    uint256 public kLast;\n    uint256 public reserve0;\n    uint256 public reserve1;\n    uint256 public price0;\n    uint256 public price1;\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    constructor(address _token0, address _token1, address _ltrAddress) {\n        token0 = _token0;\n        token1 = _token1;\n        ltrAddress = _ltrAddress;\n    }\n\n    function update() private {\n        reserve0 = IERC20(token0).balanceOf(address(this));\n        reserve1 = IERC20(token1).balanceOf(address(this));\n        price0 = reserve1 / reserve0;\n        price1 = reserve0 / reserve1;\n    }\n\n\n\n    function provideLiquidity(uint256 _amount0, uint256 _amount1) external {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this));\n        uint256 shares = Math.sqrt(kLast);\n        IERC20(ltrAddress).transfer(msg.sender, shares);\n        update();\n        emit liquidityProvided(msg.sender, shares);\n    }\n\n    function get0(uint256 _amount1) public {\n        require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\");\n        IERC20(token1).transferFrom(msg.sender, address(this), _amount1);\n        uint256 amountOut = _amount1 * (reserve0 / reserve1);\n        if (reserve0 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token0).transfer(msg.sender, amountOut);\n        }\n\n        update();\n    }\n\n    function get1(uint256 _amount0) public {\n        require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\");\n        IERC20(token0).transferFrom(msg.sender, address(this), _amount0);\n        uint256 amountOut = _amount0 * (reserve1 / reserve0);\n        if (reserve1 <= amountOut) {\n            revert();\n        } else{\n            IERC20(token1).transfer(msg.sender, amountOut);\n        }\n\n        update();\n    }\n\n    // function swap(uint256 _amount0,) public {\n\n    // }\n\n}\n\n\n// DAI/ETH\n\n//  x * y = k\n\n//   x = DAI\n//   y = ETH\n\n//   x' = amount of DAI being swapped for eth\n//   y' = amount of ETH being swapped for DAI\n\n//   if y = 100ETH = eth_reserve\n//   then x = 150000 = dai_reserve\n\n//   price of eth based on the dai = dai_reserve / eth_reserve = 1500\n//   price of dai based on eth would be the inverse = 6.7 * 10^-4\n\n//   Let's try and swap 3000 Dai for eth\n\n//   x' = 3000\n//   y' = 3000 * 6.7 * 10^-4 = 2\n\n//   x' = y' * dai_reserve / eth_reserve\n//   y' = x' * eth_reserve / dai_reserve\n\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207bd90a3f79cc163eeb0d4733a82d4274a387089f06de03fe0dd89eae4801f43364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd90a3f79cc163eeb0d4733a82d4274a387089f06de03fe0dd89eae4801f43364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD90A3F79CC163EEB0D4733A82D4274A387089F06DE03FE0DD89EAE48 ADD DELEGATECALL CALLER PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd90a3f79cc163eeb0d4733a82d4274a387089f06de03fe0dd89eae4801f43364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD90A3F79CC163EEB0D4733A82D4274A387089F06DE03FE0DD89EAE48 ADD DELEGATECALL CALLER PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bd90a3f79cc163eeb0d4733a82d4274a387089f06de03fe0dd89eae4801f43364736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pool.sol": {
				"Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ltrAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "get0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								}
							],
							"name": "get1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ltrAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pool.sol\":224:2666  contract Pool {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/Pool.sol\":573:733  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Pool.sol\":659:666  _token0 */\n  dup3\n    /* \"contracts/Pool.sol\":650:666  token0 = _token0 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":685:692  _token1 */\n  dup2\n    /* \"contracts/Pool.sol\":676:692  token1 = _token1 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":715:726  _ltrAddress */\n  dup1\n    /* \"contracts/Pool.sol\":702:726  ltrAddress = _ltrAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Pool.sol\":573:733  constructor(address _token0, address _token1, address _ltrAddress) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Pool.sol\":224:2666  contract Pool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:819   */\ntag_3:\n    /* \"#utility.yul\":244:250   */\n  0x00\n    /* \"#utility.yul\":252:258   */\n  dup1\n    /* \"#utility.yul\":260:266   */\n  0x00\n    /* \"#utility.yul\":309:311   */\n  0x60\n    /* \"#utility.yul\":297:306   */\n  dup5\n    /* \"#utility.yul\":288:295   */\n  dup7\n    /* \"#utility.yul\":284:307   */\n  sub\n    /* \"#utility.yul\":280:312   */\n  slt\n    /* \"#utility.yul\":277:396   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":315:394   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":277:396   */\ntag_13:\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":460:524   */\n  tag_16\n    /* \"#utility.yul\":516:523   */\n  dup7\n    /* \"#utility.yul\":507:513   */\n  dup3\n    /* \"#utility.yul\":496:505   */\n  dup8\n    /* \"#utility.yul\":492:514   */\n  add\n    /* \"#utility.yul\":460:524   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":450:524   */\n  swap4\n  pop\n    /* \"#utility.yul\":406:534   */\n  pop\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":599:663   */\n  tag_17\n    /* \"#utility.yul\":655:662   */\n  dup7\n    /* \"#utility.yul\":646:652   */\n  dup3\n    /* \"#utility.yul\":635:644   */\n  dup8\n    /* \"#utility.yul\":631:653   */\n  add\n    /* \"#utility.yul\":599:663   */\n  tag_8\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":589:663   */\n  swap3\n  pop\n    /* \"#utility.yul\":544:673   */\n  pop\n    /* \"#utility.yul\":712:714   */\n  0x40\n    /* \"#utility.yul\":738:802   */\n  tag_18\n    /* \"#utility.yul\":794:801   */\n  dup7\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":774:783   */\n  dup8\n    /* \"#utility.yul\":770:792   */\n  add\n    /* \"#utility.yul\":738:802   */\n  tag_8\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":728:802   */\n  swap2\n  pop\n    /* \"#utility.yul\":683:812   */\n  pop\n    /* \"#utility.yul\":156:819   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":906:1002   */\ntag_21:\n    /* \"#utility.yul\":943:950   */\n  0x00\n    /* \"#utility.yul\":972:996   */\n  tag_23\n    /* \"#utility.yul\":990:995   */\n  dup3\n    /* \"#utility.yul\":972:996   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":961:996   */\n  swap1\n  pop\n    /* \"#utility.yul\":906:1002   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1008:1134   */\ntag_24:\n    /* \"#utility.yul\":1045:1052   */\n  0x00\n    /* \"#utility.yul\":1085:1127   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1078:1083   */\n  dup3\n    /* \"#utility.yul\":1074:1128   */\n  and\n    /* \"#utility.yul\":1063:1128   */\n  swap1\n  pop\n    /* \"#utility.yul\":1008:1134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1263:1380   */\ntag_15:\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1369:1370   */\n  dup1\n    /* \"#utility.yul\":1362:1374   */\n  revert\n    /* \"#utility.yul\":1386:1508   */\ntag_11:\n    /* \"#utility.yul\":1459:1483   */\n  tag_30\n    /* \"#utility.yul\":1477:1482   */\n  dup2\n    /* \"#utility.yul\":1459:1483   */\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1452:1457   */\n  dup2\n    /* \"#utility.yul\":1449:1484   */\n  eq\n    /* \"#utility.yul\":1439:1502   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1498:1499   */\n  0x00\n    /* \"#utility.yul\":1495:1496   */\n  dup1\n    /* \"#utility.yul\":1488:1500   */\n  revert\n    /* \"#utility.yul\":1439:1502   */\ntag_31:\n    /* \"#utility.yul\":1386:1508   */\n  pop\n  jump\t// out\n    /* \"contracts/Pool.sol\":224:2666  contract Pool {... */\ntag_6:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  shr(0x60, mload(0xc0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n  0x00\n  assignImmutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n  0x00\n  assignImmutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pool.sol\":224:2666  contract Pool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7464fc3d\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7a16af7f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9c117f0f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0a986f1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xba9c6845\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2af4ec36\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6caf25ce\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":244:275  address public immutable token0 */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":1691:2144  function get0(uint256 _amount1) public {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/Pool.sol\":385:408  uint256 public reserve0 */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":414:437  uint256 public reserve1 */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":470:491  uint256 public price1 */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":359:379  uint256 public kLast */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":976:1685  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Pool.sol\":2150:2603  function get1(uint256 _amount0) public {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/Pool.sol\":443:464  uint256 public price0 */\n    tag_11:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":318:353  address public immutable ltrAddress */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":281:312  address public immutable token1 */\n    tag_13:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":244:275  address public immutable token0 */\n    tag_16:\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":1691:2144  function get0(uint256 _amount1) public {... */\n    tag_22:\n        /* \"contracts/Pool.sol\":1803:1811  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1755:1761  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1748:1772  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1773:1783  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1793:1797  this */\n      address\n        /* \"contracts/Pool.sol\":1748:1799  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/Pool.sol\":1748:1811  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1740:1837  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/Pool.sol\":1854:1860  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1847:1874  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1875:1885  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1895:1899  this */\n      address\n        /* \"contracts/Pool.sol\":1902:1910  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1847:1911  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      pop\n        /* \"contracts/Pool.sol\":1921:1938  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":1964:1972  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":1953:1961  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1953:1972  reserve0 / reserve1 */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/Pool.sol\":1941:1949  _amount1 */\n      dup3\n        /* \"contracts/Pool.sol\":1941:1973  _amount1 * (reserve0 / reserve1) */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/Pool.sol\":1921:1973  uint256 amountOut = _amount1 * (reserve0 / reserve1) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1999:2008  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":1987:1995  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1987:2008  reserve0 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":1983:2119  if (reserve0 <= amountOut) {... */\n      tag_74\n      jumpi\n        /* \"contracts/Pool.sol\":2024:2032  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":1983:2119  if (reserve0 <= amountOut) {... */\n    tag_74:\n        /* \"contracts/Pool.sol\":2069:2075  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2062:2085  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2086:2096  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2098:2107  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":2062:2108  IERC20(token0).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_81:\n      pop\n        /* \"contracts/Pool.sol\":2129:2137  update() */\n      tag_82\n        /* \"contracts/Pool.sol\":2129:2135  update */\n      tag_83\n        /* \"contracts/Pool.sol\":2129:2137  update() */\n      jump\t// in\n    tag_82:\n        /* \"contracts/Pool.sol\":1730:2144  {... */\n      pop\n        /* \"contracts/Pool.sol\":1691:2144  function get0(uint256 _amount1) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":385:408  uint256 public reserve0 */\n    tag_24:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":414:437  uint256 public reserve1 */\n    tag_28:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":470:491  uint256 public price1 */\n    tag_31:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":359:379  uint256 public kLast */\n    tag_34:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":976:1685  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n    tag_39:\n        /* \"contracts/Pool.sol\":1120:1128  _amount0 */\n      dup2\n        /* \"contracts/Pool.sol\":1072:1078  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1065:1089  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1090:1100  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1110:1114  this */\n      address\n        /* \"contracts/Pool.sol\":1065:1116  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_89:\n        /* \"contracts/Pool.sol\":1065:1128  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1057:1154  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_62\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/Pool.sol\":1227:1235  _amount1 */\n      dup1\n        /* \"contracts/Pool.sol\":1179:1185  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1172:1196  IERC20(token1).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1197:1207  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1217:1221  this */\n      address\n        /* \"contracts/Pool.sol\":1172:1223  IERC20(token1).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_92:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_96:\n        /* \"contracts/Pool.sol\":1172:1235  IERC20(token1).allowance(msg.sender, address(this)) >= _amount1 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1164:1261  require(IERC20(token1).allowance(msg.sender, address(this)) >= _amount1, \"Contract not approved\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_62\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/Pool.sol\":1278:1284  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1271:1298  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1299:1309  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1319:1323  this */\n      address\n        /* \"contracts/Pool.sol\":1326:1334  _amount0 */\n      dup6\n        /* \"contracts/Pool.sol\":1271:1335  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_103:\n      pop\n        /* \"contracts/Pool.sol\":1352:1358  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1345:1372  IERC20(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1373:1383  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1393:1397  this */\n      address\n        /* \"contracts/Pool.sol\":1400:1408  _amount1 */\n      dup5\n        /* \"contracts/Pool.sol\":1345:1409  IERC20(token1).transferFrom(msg.sender, address(this), _amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_108:\n      pop\n        /* \"contracts/Pool.sol\":1476:1482  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":1469:1493  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1502:1506  this */\n      address\n        /* \"contracts/Pool.sol\":1469:1508  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_113:\n        /* \"contracts/Pool.sol\":1434:1440  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":1427:1451  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1460:1464  this */\n      address\n        /* \"contracts/Pool.sol\":1427:1466  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_118:\n        /* \"contracts/Pool.sol\":1427:1508  IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      tag_119\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_119:\n        /* \"contracts/Pool.sol\":1419:1424  kLast */\n      0x00\n        /* \"contracts/Pool.sol\":1419:1508  kLast = IERC20(token0).balanceOf(address(this)) * IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":1518:1532  uint256 shares */\n      0x00\n        /* \"contracts/Pool.sol\":1535:1551  Math.sqrt(kLast) */\n      tag_120\n        /* \"contracts/Pool.sol\":1545:1550  kLast */\n      sload(0x00)\n        /* \"contracts/Pool.sol\":1535:1544  Math.sqrt */\n      tag_121\n        /* \"contracts/Pool.sol\":1535:1551  Math.sqrt(kLast) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/Pool.sol\":1518:1551  uint256 shares = Math.sqrt(kLast) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1568:1578  ltrAddress */\n      immutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n        /* \"contracts/Pool.sol\":1561:1588  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":1589:1599  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1601:1607  shares */\n      dup4\n        /* \"contracts/Pool.sol\":1561:1608  IERC20(ltrAddress).transfer(msg.sender, shares) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_122:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_126:\n      pop\n        /* \"contracts/Pool.sol\":1618:1626  update() */\n      tag_127\n        /* \"contracts/Pool.sol\":1618:1624  update */\n      tag_83\n        /* \"contracts/Pool.sol\":1618:1626  update() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Pool.sol\":1641:1678  liquidityProvided(msg.sender, shares) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/Pool.sol\":1659:1669  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1671:1677  shares */\n      dup3\n        /* \"contracts/Pool.sol\":1641:1678  liquidityProvided(msg.sender, shares) */\n      mload(0x40)\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pool.sol\":1047:1685  {... */\n      pop\n        /* \"contracts/Pool.sol\":976:1685  function provideLiquidity(uint256 _amount0, uint256 _amount1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":2150:2603  function get1(uint256 _amount0) public {... */\n    tag_42:\n        /* \"contracts/Pool.sol\":2262:2270  _amount0 */\n      dup1\n        /* \"contracts/Pool.sol\":2214:2220  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2207:2231  IERC20(token0).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":2232:2242  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2252:2256  this */\n      address\n        /* \"contracts/Pool.sol\":2207:2258  IERC20(token0).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_134:\n        /* \"contracts/Pool.sol\":2207:2270  IERC20(token0).allowance(msg.sender, address(this)) >= _amount0 */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":2199:2296  require(IERC20(token0).allowance(msg.sender, address(this)) >= _amount0, \"Contract not approved\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_62\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/Pool.sol\":2313:2319  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":2306:2333  IERC20(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":2334:2344  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2354:2358  this */\n      address\n        /* \"contracts/Pool.sol\":2361:2369  _amount0 */\n      dup5\n        /* \"contracts/Pool.sol\":2306:2370  IERC20(token0).transferFrom(msg.sender, address(this), _amount0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_141:\n      pop\n        /* \"contracts/Pool.sol\":2380:2397  uint256 amountOut */\n      0x00\n        /* \"contracts/Pool.sol\":2423:2431  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":2412:2420  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2412:2431  reserve1 / reserve0 */\n      tag_142\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_142:\n        /* \"contracts/Pool.sol\":2400:2408  _amount0 */\n      dup3\n        /* \"contracts/Pool.sol\":2400:2432  _amount0 * (reserve1 / reserve0) */\n      tag_143\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_143:\n        /* \"contracts/Pool.sol\":2380:2432  uint256 amountOut = _amount0 * (reserve1 / reserve0) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":2458:2467  amountOut */\n      dup1\n        /* \"contracts/Pool.sol\":2446:2454  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":2446:2467  reserve1 <= amountOut */\n      gt\n        /* \"contracts/Pool.sol\":2442:2578  if (reserve1 <= amountOut) {... */\n      tag_144\n      jumpi\n        /* \"contracts/Pool.sol\":2483:2491  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":2442:2578  if (reserve1 <= amountOut) {... */\n    tag_144:\n        /* \"contracts/Pool.sol\":2528:2534  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":2521:2544  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2545:2555  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2557:2566  amountOut */\n      dup4\n        /* \"contracts/Pool.sol\":2521:2567  IERC20(token1).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_146:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_150:\n      pop\n        /* \"contracts/Pool.sol\":2588:2596  update() */\n      tag_151\n        /* \"contracts/Pool.sol\":2588:2594  update */\n      tag_83\n        /* \"contracts/Pool.sol\":2588:2596  update() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/Pool.sol\":2189:2603  {... */\n      pop\n        /* \"contracts/Pool.sol\":2150:2603  function get1(uint256 _amount0) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":443:464  uint256 public price0 */\n    tag_44:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":318:353  address public immutable ltrAddress */\n    tag_47:\n      immutable(\"0xd76482dbf35305fc91ee39a65e61582d738cabad2061a7d338ce335afa2bb483\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":281:312  address public immutable token1 */\n    tag_50:\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":739:968  function update() private {... */\n    tag_83:\n        /* \"contracts/Pool.sol\":793:799  token0 */\n      immutable(\"0x7c4b9619c581b88a141b2eb4807c7231fe75a5bedaa863d4150e3dabc19d88ab\")\n        /* \"contracts/Pool.sol\":786:810  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":819:823  this */\n      address\n        /* \"contracts/Pool.sol\":786:825  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_157:\n        /* \"contracts/Pool.sol\":775:783  reserve0 */\n      0x01\n        /* \"contracts/Pool.sol\":775:825  reserve0 = IERC20(token0).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":853:859  token1 */\n      immutable(\"0x8568f76a03b01e78020c34eaf7d99444bdfcfc02740b9216953e88c42652898d\")\n        /* \"contracts/Pool.sol\":846:870  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":879:883  this */\n      address\n        /* \"contracts/Pool.sol\":846:885  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_158:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_162:\n        /* \"contracts/Pool.sol\":835:843  reserve1 */\n      0x02\n        /* \"contracts/Pool.sol\":835:885  reserve1 = IERC20(token1).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":915:923  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":904:912  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":904:923  reserve1 / reserve0 */\n      tag_163\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_163:\n        /* \"contracts/Pool.sol\":895:901  price0 */\n      0x03\n        /* \"contracts/Pool.sol\":895:923  price0 = reserve1 / reserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":953:961  reserve1 */\n      sload(0x02)\n        /* \"contracts/Pool.sol\":942:950  reserve0 */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":942:961  reserve0 / reserve1 */\n      tag_164\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_164:\n        /* \"contracts/Pool.sol\":933:939  price1 */\n      0x04\n        /* \"contracts/Pool.sol\":933:961  price1 = reserve0 / reserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":739:968  function update() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6336  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6357:6358  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6353  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6358  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6374:6382  return 0 */\n      swap1\n      pop\n      jump(tag_165)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7072  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7075:7076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7076  uint256 result = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7095  uint256 x */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7098:7099  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7099  uint256 x = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7124:7125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7118:7121  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7114  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7121  x >> 128 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7125  x >> 128 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7147:7150  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7141:7150  x >>= 128 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7175:7177  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7164:7177  result <<= 64 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7211:7212  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7206:7208  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7202  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7208  x >> 64 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7212  x >> 64 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7234:7236  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7228:7236  x >>= 64 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7261:7263  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7250:7263  result <<= 32 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7297:7298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7292:7294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7288  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7294  x >> 32 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7298  x >> 32 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7320:7322  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7314:7322  x >>= 32 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7347:7349  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7336:7349  result <<= 16 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7383:7384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7378:7380  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7374  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7380  x >> 16 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7384  x >> 16 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7406:7408  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7400:7408  x >>= 16 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7433:7434  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7422:7434  result <<= 8 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7467:7468  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7463:7464  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7459  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7464  x >> 8 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7468  x >> 8 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7490:7491  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7484:7491  x >>= 8 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7516:7517  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7505:7517  result <<= 4 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7550:7551  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7546:7547  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7542  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7547  x >> 4 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7551  x >> 4 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7573:7574  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7567:7574  x >>= 4 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7599:7600  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7588:7600  result <<= 2 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7633:7634  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7629:7630  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7625  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7630  x >> 2 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7634  x >> 2 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7661:7662  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7650:7662  result <<= 1 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8131:8132  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8120:8126  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8117  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8126  a / result */\n      dup2\n      tag_174\n      jumpi\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n    tag_174:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8113  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8126  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8106:8132  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8097:8132  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8180:8181  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8169:8175  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8166  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8175  a / result */\n      dup2\n      tag_177\n      jumpi\n      tag_178\n      tag_176\n      jump\t// in\n    tag_178:\n    tag_177:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8162  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8175  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8155:8181  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8146:8181  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8229:8230  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8218:8224  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8215  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8224  a / result */\n      dup2\n      tag_179\n      jumpi\n      tag_180\n      tag_176\n      jump\t// in\n    tag_180:\n    tag_179:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8211  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8224  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8204:8230  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8195:8230  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8278:8279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8267:8273  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8264  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8273  a / result */\n      dup2\n      tag_181\n      jumpi\n      tag_182\n      tag_176\n      jump\t// in\n    tag_182:\n    tag_181:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8260  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8273  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8253:8279  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8244:8279  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8327:8328  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8316:8322  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8313  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8322  a / result */\n      dup2\n      tag_183\n      jumpi\n      tag_184\n      tag_176\n      jump\t// in\n    tag_184:\n    tag_183:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8309  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8322  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8302:8328  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8293:8328  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8376:8377  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8365:8371  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8362  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8371  a / result */\n      dup2\n      tag_185\n      jumpi\n      tag_186\n      tag_176\n      jump\t// in\n    tag_186:\n    tag_185:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8358  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8371  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8351:8377  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8342:8377  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8425:8426  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8414:8420  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8411  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8420  a / result */\n      dup2\n      tag_187\n      jumpi\n      tag_188\n      tag_176\n      jump\t// in\n    tag_188:\n    tag_187:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8407  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8420  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8400:8426  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8391:8426  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8451:8457  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8463:8469  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8460  a */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8469  a / result */\n      dup2\n      tag_190\n      jumpi\n      tag_191\n      tag_176\n      jump\t// in\n    tag_191:\n    tag_190:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8450  min */\n      tag_192\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8440:8470  return min(result, a / result) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_165:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":647:654  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":677:678  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:674  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:678  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":685:686  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      jump(tag_195)\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":681:682  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":666:686  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_197:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_199\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_201:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_203\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:438   */\n    tag_205:\n        /* \"#utility.yul\":352:357   */\n      0x00\n        /* \"#utility.yul\":383:389   */\n      dup2\n        /* \"#utility.yul\":377:390   */\n      mload\n        /* \"#utility.yul\":368:390   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:432   */\n      tag_207\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":399:432   */\n      tag_204\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":295:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:789   */\n    tag_69:\n        /* \"#utility.yul\":511:517   */\n      0x00\n        /* \"#utility.yul\":560:562   */\n      0x20\n        /* \"#utility.yul\":548:557   */\n      dup3\n        /* \"#utility.yul\":539:546   */\n      dup5\n        /* \"#utility.yul\":535:558   */\n      sub\n        /* \"#utility.yul\":531:563   */\n      slt\n        /* \"#utility.yul\":528:647   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":566:645   */\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":528:647   */\n    tag_209:\n        /* \"#utility.yul\":686:687   */\n      0x00\n        /* \"#utility.yul\":711:772   */\n      tag_212\n        /* \"#utility.yul\":764:771   */\n      dup5\n        /* \"#utility.yul\":755:761   */\n      dup3\n        /* \"#utility.yul\":744:753   */\n      dup6\n        /* \"#utility.yul\":740:762   */\n      add\n        /* \"#utility.yul\":711:772   */\n      tag_197\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":701:772   */\n      swap2\n      pop\n        /* \"#utility.yul\":657:782   */\n      pop\n        /* \"#utility.yul\":444:789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":795:1124   */\n    tag_21:\n        /* \"#utility.yul\":854:860   */\n      0x00\n        /* \"#utility.yul\":903:905   */\n      0x20\n        /* \"#utility.yul\":891:900   */\n      dup3\n        /* \"#utility.yul\":882:889   */\n      dup5\n        /* \"#utility.yul\":878:901   */\n      sub\n        /* \"#utility.yul\":874:906   */\n      slt\n        /* \"#utility.yul\":871:990   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":909:988   */\n      tag_215\n      tag_211\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":871:990   */\n    tag_214:\n        /* \"#utility.yul\":1029:1030   */\n      0x00\n        /* \"#utility.yul\":1054:1107   */\n      tag_216\n        /* \"#utility.yul\":1099:1106   */\n      dup5\n        /* \"#utility.yul\":1090:1096   */\n      dup3\n        /* \"#utility.yul\":1079:1088   */\n      dup6\n        /* \"#utility.yul\":1075:1097   */\n      add\n        /* \"#utility.yul\":1054:1107   */\n      tag_201\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1044:1107   */\n      swap2\n      pop\n        /* \"#utility.yul\":1000:1117   */\n      pop\n        /* \"#utility.yul\":795:1124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1481   */\n    tag_59:\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1336   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1255:1334   */\n      tag_219\n      tag_211\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1217:1336   */\n    tag_218:\n        /* \"#utility.yul\":1375:1376   */\n      0x00\n        /* \"#utility.yul\":1400:1464   */\n      tag_220\n        /* \"#utility.yul\":1456:1463   */\n      dup5\n        /* \"#utility.yul\":1447:1453   */\n      dup3\n        /* \"#utility.yul\":1436:1445   */\n      dup6\n        /* \"#utility.yul\":1432:1454   */\n      add\n        /* \"#utility.yul\":1400:1464   */\n      tag_205\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1390:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1346:1474   */\n      pop\n        /* \"#utility.yul\":1130:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1961   */\n    tag_38:\n        /* \"#utility.yul\":1555:1561   */\n      0x00\n        /* \"#utility.yul\":1563:1569   */\n      dup1\n        /* \"#utility.yul\":1612:1614   */\n      0x40\n        /* \"#utility.yul\":1600:1609   */\n      dup4\n        /* \"#utility.yul\":1591:1598   */\n      dup6\n        /* \"#utility.yul\":1587:1610   */\n      sub\n        /* \"#utility.yul\":1583:1615   */\n      slt\n        /* \"#utility.yul\":1580:1699   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":1618:1697   */\n      tag_223\n      tag_211\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1580:1699   */\n    tag_222:\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1763:1816   */\n      tag_224\n        /* \"#utility.yul\":1808:1815   */\n      dup6\n        /* \"#utility.yul\":1799:1805   */\n      dup3\n        /* \"#utility.yul\":1788:1797   */\n      dup7\n        /* \"#utility.yul\":1784:1806   */\n      add\n        /* \"#utility.yul\":1763:1816   */\n      tag_201\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1753:1816   */\n      swap3\n      pop\n        /* \"#utility.yul\":1709:1826   */\n      pop\n        /* \"#utility.yul\":1865:1867   */\n      0x20\n        /* \"#utility.yul\":1891:1944   */\n      tag_225\n        /* \"#utility.yul\":1936:1943   */\n      dup6\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup7\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1891:1944   */\n      tag_201\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1881:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1836:1954   */\n      pop\n        /* \"#utility.yul\":1487:1961   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2085   */\n    tag_226:\n        /* \"#utility.yul\":2054:2078   */\n      tag_228\n        /* \"#utility.yul\":2072:2077   */\n      dup2\n        /* \"#utility.yul\":2054:2078   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2049:2052   */\n      dup3\n        /* \"#utility.yul\":2042:2079   */\n      mstore\n        /* \"#utility.yul\":1967:2085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2457   */\n    tag_230:\n        /* \"#utility.yul\":2233:2236   */\n      0x00\n        /* \"#utility.yul\":2254:2321   */\n      tag_232\n        /* \"#utility.yul\":2318:2320   */\n      0x15\n        /* \"#utility.yul\":2313:2316   */\n      dup4\n        /* \"#utility.yul\":2254:2321   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2247:2321   */\n      swap2\n      pop\n        /* \"#utility.yul\":2330:2423   */\n      tag_234\n        /* \"#utility.yul\":2419:2422   */\n      dup3\n        /* \"#utility.yul\":2330:2423   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2448:2450   */\n      0x20\n        /* \"#utility.yul\":2443:2446   */\n      dup3\n        /* \"#utility.yul\":2439:2451   */\n      add\n        /* \"#utility.yul\":2432:2451   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2463:2581   */\n    tag_236:\n        /* \"#utility.yul\":2550:2574   */\n      tag_238\n        /* \"#utility.yul\":2568:2573   */\n      dup2\n        /* \"#utility.yul\":2550:2574   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2545:2548   */\n      dup3\n        /* \"#utility.yul\":2538:2575   */\n      mstore\n        /* \"#utility.yul\":2463:2581   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:2809   */\n    tag_18:\n        /* \"#utility.yul\":2680:2684   */\n      0x00\n        /* \"#utility.yul\":2718:2720   */\n      0x20\n        /* \"#utility.yul\":2707:2716   */\n      dup3\n        /* \"#utility.yul\":2703:2721   */\n      add\n        /* \"#utility.yul\":2695:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2731:2802   */\n      tag_241\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2788:2797   */\n      dup4\n        /* \"#utility.yul\":2784:2801   */\n      add\n        /* \"#utility.yul\":2775:2781   */\n      dup5\n        /* \"#utility.yul\":2731:2802   */\n      tag_226\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2587:2809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2815:3147   */\n    tag_54:\n        /* \"#utility.yul\":2936:2940   */\n      0x00\n        /* \"#utility.yul\":2974:2976   */\n      0x40\n        /* \"#utility.yul\":2963:2972   */\n      dup3\n        /* \"#utility.yul\":2959:2977   */\n      add\n        /* \"#utility.yul\":2951:2977   */\n      swap1\n      pop\n        /* \"#utility.yul\":2987:3058   */\n      tag_243\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3044:3053   */\n      dup4\n        /* \"#utility.yul\":3040:3057   */\n      add\n        /* \"#utility.yul\":3031:3037   */\n      dup6\n        /* \"#utility.yul\":2987:3058   */\n      tag_226\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3068:3140   */\n      tag_244\n        /* \"#utility.yul\":3136:3138   */\n      0x20\n        /* \"#utility.yul\":3125:3134   */\n      dup4\n        /* \"#utility.yul\":3121:3139   */\n      add\n        /* \"#utility.yul\":3112:3118   */\n      dup5\n        /* \"#utility.yul\":3068:3140   */\n      tag_226\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2815:3147   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3153:3595   */\n    tag_64:\n        /* \"#utility.yul\":3302:3306   */\n      0x00\n        /* \"#utility.yul\":3340:3342   */\n      0x60\n        /* \"#utility.yul\":3329:3338   */\n      dup3\n        /* \"#utility.yul\":3325:3343   */\n      add\n        /* \"#utility.yul\":3317:3343   */\n      swap1\n      pop\n        /* \"#utility.yul\":3353:3424   */\n      tag_246\n        /* \"#utility.yul\":3421:3422   */\n      0x00\n        /* \"#utility.yul\":3410:3419   */\n      dup4\n        /* \"#utility.yul\":3406:3423   */\n      add\n        /* \"#utility.yul\":3397:3403   */\n      dup7\n        /* \"#utility.yul\":3353:3424   */\n      tag_226\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3434:3506   */\n      tag_247\n        /* \"#utility.yul\":3502:3504   */\n      0x20\n        /* \"#utility.yul\":3491:3500   */\n      dup4\n        /* \"#utility.yul\":3487:3505   */\n      add\n        /* \"#utility.yul\":3478:3484   */\n      dup6\n        /* \"#utility.yul\":3434:3506   */\n      tag_226\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3516:3588   */\n      tag_248\n        /* \"#utility.yul\":3584:3586   */\n      0x40\n        /* \"#utility.yul\":3573:3582   */\n      dup4\n        /* \"#utility.yul\":3569:3587   */\n      add\n        /* \"#utility.yul\":3560:3566   */\n      dup5\n        /* \"#utility.yul\":3516:3588   */\n      tag_236\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3153:3595   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3601:3933   */\n    tag_77:\n        /* \"#utility.yul\":3722:3726   */\n      0x00\n        /* \"#utility.yul\":3760:3762   */\n      0x40\n        /* \"#utility.yul\":3749:3758   */\n      dup3\n        /* \"#utility.yul\":3745:3763   */\n      add\n        /* \"#utility.yul\":3737:3763   */\n      swap1\n      pop\n        /* \"#utility.yul\":3773:3844   */\n      tag_250\n        /* \"#utility.yul\":3841:3842   */\n      0x00\n        /* \"#utility.yul\":3830:3839   */\n      dup4\n        /* \"#utility.yul\":3826:3843   */\n      add\n        /* \"#utility.yul\":3817:3823   */\n      dup6\n        /* \"#utility.yul\":3773:3844   */\n      tag_226\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3854:3926   */\n      tag_251\n        /* \"#utility.yul\":3922:3924   */\n      0x20\n        /* \"#utility.yul\":3911:3920   */\n      dup4\n        /* \"#utility.yul\":3907:3925   */\n      add\n        /* \"#utility.yul\":3898:3904   */\n      dup5\n        /* \"#utility.yul\":3854:3926   */\n      tag_236\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3601:3933   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3939:4358   */\n    tag_62:\n        /* \"#utility.yul\":4105:4109   */\n      0x00\n        /* \"#utility.yul\":4143:4145   */\n      0x20\n        /* \"#utility.yul\":4132:4141   */\n      dup3\n        /* \"#utility.yul\":4128:4146   */\n      add\n        /* \"#utility.yul\":4120:4146   */\n      swap1\n      pop\n        /* \"#utility.yul\":4192:4201   */\n      dup2\n        /* \"#utility.yul\":4186:4190   */\n      dup2\n        /* \"#utility.yul\":4182:4202   */\n      sub\n        /* \"#utility.yul\":4178:4179   */\n      0x00\n        /* \"#utility.yul\":4167:4176   */\n      dup4\n        /* \"#utility.yul\":4163:4180   */\n      add\n        /* \"#utility.yul\":4156:4203   */\n      mstore\n        /* \"#utility.yul\":4220:4351   */\n      tag_253\n        /* \"#utility.yul\":4346:4350   */\n      dup2\n        /* \"#utility.yul\":4220:4351   */\n      tag_230\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4212:4351   */\n      swap1\n      pop\n        /* \"#utility.yul\":3939:4358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4364:4586   */\n    tag_26:\n        /* \"#utility.yul\":4457:4461   */\n      0x00\n        /* \"#utility.yul\":4495:4497   */\n      0x20\n        /* \"#utility.yul\":4484:4493   */\n      dup3\n        /* \"#utility.yul\":4480:4498   */\n      add\n        /* \"#utility.yul\":4472:4498   */\n      swap1\n      pop\n        /* \"#utility.yul\":4508:4579   */\n      tag_255\n        /* \"#utility.yul\":4576:4577   */\n      0x00\n        /* \"#utility.yul\":4565:4574   */\n      dup4\n        /* \"#utility.yul\":4561:4578   */\n      add\n        /* \"#utility.yul\":4552:4558   */\n      dup5\n        /* \"#utility.yul\":4508:4579   */\n      tag_236\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4364:4586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4673:4842   */\n    tag_233:\n        /* \"#utility.yul\":4757:4768   */\n      0x00\n        /* \"#utility.yul\":4791:4797   */\n      dup3\n        /* \"#utility.yul\":4786:4789   */\n      dup3\n        /* \"#utility.yul\":4779:4798   */\n      mstore\n        /* \"#utility.yul\":4831:4835   */\n      0x20\n        /* \"#utility.yul\":4826:4829   */\n      dup3\n        /* \"#utility.yul\":4822:4836   */\n      add\n        /* \"#utility.yul\":4807:4836   */\n      swap1\n      pop\n        /* \"#utility.yul\":4673:4842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4848:5033   */\n    tag_71:\n        /* \"#utility.yul\":4888:4889   */\n      0x00\n        /* \"#utility.yul\":4905:4925   */\n      tag_260\n        /* \"#utility.yul\":4923:4924   */\n      dup3\n        /* \"#utility.yul\":4905:4925   */\n      tag_239\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4900:4925   */\n      swap2\n      pop\n        /* \"#utility.yul\":4939:4959   */\n      tag_261\n        /* \"#utility.yul\":4957:4958   */\n      dup4\n        /* \"#utility.yul\":4939:4959   */\n      tag_239\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4934:4959   */\n      swap3\n      pop\n        /* \"#utility.yul\":4978:4979   */\n      dup3\n        /* \"#utility.yul\":4968:5003   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":4983:5001   */\n      tag_263\n      tag_176\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4968:5003   */\n    tag_262:\n        /* \"#utility.yul\":5025:5026   */\n      dup3\n        /* \"#utility.yul\":5022:5023   */\n      dup3\n        /* \"#utility.yul\":5018:5027   */\n      div\n        /* \"#utility.yul\":5013:5027   */\n      swap1\n      pop\n        /* \"#utility.yul\":4848:5033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5039:5387   */\n    tag_73:\n        /* \"#utility.yul\":5079:5086   */\n      0x00\n        /* \"#utility.yul\":5102:5122   */\n      tag_265\n        /* \"#utility.yul\":5120:5121   */\n      dup3\n        /* \"#utility.yul\":5102:5122   */\n      tag_239\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5097:5122   */\n      swap2\n      pop\n        /* \"#utility.yul\":5136:5156   */\n      tag_266\n        /* \"#utility.yul\":5154:5155   */\n      dup4\n        /* \"#utility.yul\":5136:5156   */\n      tag_239\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5131:5156   */\n      swap3\n      pop\n        /* \"#utility.yul\":5324:5325   */\n      dup2\n        /* \"#utility.yul\":5256:5322   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5252:5326   */\n      div\n        /* \"#utility.yul\":5249:5250   */\n      dup4\n        /* \"#utility.yul\":5246:5327   */\n      gt\n        /* \"#utility.yul\":5241:5242   */\n      dup3\n        /* \"#utility.yul\":5234:5243   */\n      iszero\n        /* \"#utility.yul\":5227:5244   */\n      iszero\n        /* \"#utility.yul\":5223:5328   */\n      and\n        /* \"#utility.yul\":5220:5351   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":5331:5349   */\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5220:5351   */\n    tag_267:\n        /* \"#utility.yul\":5379:5380   */\n      dup3\n        /* \"#utility.yul\":5376:5377   */\n      dup3\n        /* \"#utility.yul\":5372:5381   */\n      mul\n        /* \"#utility.yul\":5361:5381   */\n      swap1\n      pop\n        /* \"#utility.yul\":5039:5387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:5489   */\n    tag_229:\n        /* \"#utility.yul\":5430:5437   */\n      0x00\n        /* \"#utility.yul\":5459:5483   */\n      tag_271\n        /* \"#utility.yul\":5477:5482   */\n      dup3\n        /* \"#utility.yul\":5459:5483   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5448:5483   */\n      swap1\n      pop\n        /* \"#utility.yul\":5393:5489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5495:5585   */\n    tag_273:\n        /* \"#utility.yul\":5529:5536   */\n      0x00\n        /* \"#utility.yul\":5572:5577   */\n      dup2\n        /* \"#utility.yul\":5565:5578   */\n      iszero\n        /* \"#utility.yul\":5558:5579   */\n      iszero\n        /* \"#utility.yul\":5547:5579   */\n      swap1\n      pop\n        /* \"#utility.yul\":5495:5585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5591:5717   */\n    tag_272:\n        /* \"#utility.yul\":5628:5635   */\n      0x00\n        /* \"#utility.yul\":5668:5710   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5661:5666   */\n      dup3\n        /* \"#utility.yul\":5657:5711   */\n      and\n        /* \"#utility.yul\":5646:5711   */\n      swap1\n      pop\n        /* \"#utility.yul\":5591:5717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5723:5800   */\n    tag_239:\n        /* \"#utility.yul\":5760:5767   */\n      0x00\n        /* \"#utility.yul\":5789:5794   */\n      dup2\n        /* \"#utility.yul\":5778:5794   */\n      swap1\n      pop\n        /* \"#utility.yul\":5723:5800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5806:5986   */\n    tag_269:\n        /* \"#utility.yul\":5854:5931   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5851:5852   */\n      0x00\n        /* \"#utility.yul\":5844:5932   */\n      mstore\n        /* \"#utility.yul\":5951:5955   */\n      0x11\n        /* \"#utility.yul\":5948:5949   */\n      0x04\n        /* \"#utility.yul\":5941:5956   */\n      mstore\n        /* \"#utility.yul\":5975:5979   */\n      0x24\n        /* \"#utility.yul\":5972:5973   */\n      0x00\n        /* \"#utility.yul\":5965:5980   */\n      revert\n        /* \"#utility.yul\":5992:6172   */\n    tag_176:\n        /* \"#utility.yul\":6040:6117   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6037:6038   */\n      0x00\n        /* \"#utility.yul\":6030:6118   */\n      mstore\n        /* \"#utility.yul\":6137:6141   */\n      0x12\n        /* \"#utility.yul\":6134:6135   */\n      0x04\n        /* \"#utility.yul\":6127:6142   */\n      mstore\n        /* \"#utility.yul\":6161:6165   */\n      0x24\n        /* \"#utility.yul\":6158:6159   */\n      0x00\n        /* \"#utility.yul\":6151:6166   */\n      revert\n        /* \"#utility.yul\":6301:6418   */\n    tag_211:\n        /* \"#utility.yul\":6410:6411   */\n      0x00\n        /* \"#utility.yul\":6407:6408   */\n      dup1\n        /* \"#utility.yul\":6400:6412   */\n      revert\n        /* \"#utility.yul\":6424:6595   */\n    tag_235:\n        /* \"#utility.yul\":6564:6587   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":6560:6561   */\n      0x00\n        /* \"#utility.yul\":6552:6558   */\n      dup3\n        /* \"#utility.yul\":6548:6562   */\n      add\n        /* \"#utility.yul\":6541:6588   */\n      mstore\n        /* \"#utility.yul\":6424:6595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6601:6717   */\n    tag_200:\n        /* \"#utility.yul\":6671:6692   */\n      tag_284\n        /* \"#utility.yul\":6686:6691   */\n      dup2\n        /* \"#utility.yul\":6671:6692   */\n      tag_273\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6664:6669   */\n      dup2\n        /* \"#utility.yul\":6661:6693   */\n      eq\n        /* \"#utility.yul\":6651:6711   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":6707:6708   */\n      0x00\n        /* \"#utility.yul\":6704:6705   */\n      dup1\n        /* \"#utility.yul\":6697:6709   */\n      revert\n        /* \"#utility.yul\":6651:6711   */\n    tag_285:\n        /* \"#utility.yul\":6601:6717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6723:6845   */\n    tag_204:\n        /* \"#utility.yul\":6796:6820   */\n      tag_287\n        /* \"#utility.yul\":6814:6819   */\n      dup2\n        /* \"#utility.yul\":6796:6820   */\n      tag_239\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6789:6794   */\n      dup2\n        /* \"#utility.yul\":6786:6821   */\n      eq\n        /* \"#utility.yul\":6776:6839   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":6835:6836   */\n      0x00\n        /* \"#utility.yul\":6832:6833   */\n      dup1\n        /* \"#utility.yul\":6825:6837   */\n      revert\n        /* \"#utility.yul\":6776:6839   */\n    tag_288:\n        /* \"#utility.yul\":6723:6845   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220446d95eedec98e6b834df55bcb0fbd47edbd1ebfedc23024c0fb45289c0ae22864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_629": {
									"entryPoint": null,
									"id": 629,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:552:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "313:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "315:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "315:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "315:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "288:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "297:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "284:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "284:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "280:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:32:3"
															},
															"nodeType": "YulIf",
															"src": "277:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "406:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "421:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "435:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "425:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "450:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "496:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "507:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "492:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "492:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "460:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "460:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "450:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "544:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "559:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "573:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "563:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "589:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "635:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "646:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "631:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "631:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "599:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "589:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "683:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "698:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "702:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "728:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "774:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "770:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "770:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "738:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "728:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "232:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "244:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "252:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "260:6:3",
														"type": ""
													}
												],
												"src": "156:663:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "865:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "875:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "858:6:3",
														"type": ""
													}
												],
												"src": "825:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "961:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "990:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "972:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "961:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "933:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "943:7:3",
														"type": ""
													}
												],
												"src": "906:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1053:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1063:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1078:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1063:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1045:7:3",
														"type": ""
													}
												],
												"src": "1008:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1140:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1352:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1263:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1429:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:43:3"
															},
															"nodeType": "YulIf",
															"src": "1439:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1422:5:3",
														"type": ""
													}
												],
												"src": "1386:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040523480156200001157600080fd5b50604051620016bd380380620016bd8339818101604052810190620000379190620000fc565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050620001ab565b600081519050620000f68162000191565b92915050565b6000806000606084860312156200011857620001176200018c565b5b60006200012886828701620000e5565b93505060206200013b86828701620000e5565b92505060406200014e86828701620000e5565b9150509250925092565b600062000165826200016c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200019c8162000158565b8114620001a857600080fd5b50565b60805160601c60a05160601c60c05160601c6114706200024d6000396000818161095f0152610cdd01526000818161021901528181610305015281816105a20152818161073e015281816107ee01528181610c1d01528181610d010152610dd40152600081816101f4015281816103e2015281816104b50152818161068e0152818161089701528181610a5401528181610b400152610d2501526114706000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637464fc3d116100715780637464fc3d146101425780637a16af7f146101605780639c117f0f1461017c578063a0a986f114610198578063ba9c6845146101b6578063d21220a7146101d4576100a9565b80630dfe1681146100ae5780632af4ec36146100cc578063443cb4bc146100e85780635a76f25e146101065780636caf25ce14610124575b600080fd5b6100b66101f2565b6040516100c391906111bd565b60405180910390f35b6100e660048036038101906100e191906110e2565b610216565b005b6100f061049a565b6040516100fd9190611281565b60405180910390f35b61010e6104a0565b60405161011b9190611281565b60405180910390f35b61012c6104a6565b6040516101399190611281565b60405180910390f35b61014a6104ac565b6040516101579190611281565b60405180910390f35b61017a6004803603810190610175919061113c565b6104b2565b005b610196600480360381019061019191906110e2565b610a51565b005b6101a0610cd5565b6040516101ad9190611281565b60405180910390f35b6101be610cdb565b6040516101cb91906111bd565b60405180910390f35b6101dc610cff565b6040516101e991906111bd565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102729291906111d8565b60206040518083038186803b15801561028a57600080fd5b505afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c2919061110f565b1015610303576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fa90611261565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161036093929190611201565b602060405180830381600087803b15801561037a57600080fd5b505af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906110b5565b5060006002546001546103c591906112ad565b826103d091906112de565b905080600154116103e057600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161043b929190611238565b602060405180830381600087803b15801561045557600080fd5b505af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906110b5565b50610496610d23565b5050565b60015481565b60025481565b60045481565b60005481565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161050e9291906111d8565b60206040518083038186803b15801561052657600080fd5b505afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e919061110f565b101561059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690611261565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016105fb9291906111d8565b60206040518083038186803b15801561061357600080fd5b505afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b919061110f565b101561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611261565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106e993929190611201565b602060405180830381600087803b15801561070357600080fd5b505af1158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b91906110b5565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161079993929190611201565b602060405180830381600087803b1580156107b357600080fd5b505af11580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb91906110b5565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161084591906111bd565b60206040518083038186803b15801561085d57600080fd5b505afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610895919061110f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ee91906111bd565b60206040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e919061110f565b61094891906112de565b600081905550600061095b600054610eaf565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109b8929190611238565b602060405180830381600087803b1580156109d257600080fd5b505af11580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a91906110b5565b50610a13610d23565b7fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da63382604051610a44929190611238565b60405180910390a1505050565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610aad9291906111d8565b60206040518083038186803b158015610ac557600080fd5b505afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd919061110f565b1015610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3590611261565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b9b93929190611201565b602060405180830381600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed91906110b5565b506000600154600254610c0091906112ad565b82610c0b91906112de565b90508060025411610c1b57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c76929190611238565b602060405180830381600087803b158015610c9057600080fd5b505af1158015610ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc891906110b5565b50610cd1610d23565b5050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d7c91906111bd565b60206040518083038186803b158015610d9457600080fd5b505afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc919061110f565b6001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e2b91906111bd565b60206040518083038186803b158015610e4357600080fd5b505afa158015610e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7b919061110f565b600281905550600154600254610e9191906112ad565b600381905550600254600154610ea791906112ad565b600481905550565b600080821415610ec25760009050611058565b60006001905060008390506000608082901c1115610ee957608081901c9050604082901b91505b6000604082901c1115610f0557604081901c9050602082901b91505b6000602082901c1115610f2157602081901c9050601082901b91505b6000601082901c1115610f3d57601081901c9050600882901b91505b6000600882901c1115610f5957600881901c9050600482901b91505b6000600482901c1115610f7557600481901c9050600282901b91505b6000600282901c1115610f8a57600182901b91505b6001828581610f9c57610f9b6113af565b5b048301901c91506001828581610fb557610fb46113af565b5b048301901c91506001828581610fce57610fcd6113af565b5b048301901c91506001828581610fe757610fe66113af565b5b048301901c9150600182858161100057610fff6113af565b5b048301901c91506001828581611019576110186113af565b5b048301901c91506001828581611032576110316113af565b5b048301901c91506110538283868161104d5761104c6113af565b5b0461105d565b925050505b919050565b600081831061106c578161106e565b825b905092915050565b6000815190506110858161140c565b92915050565b60008135905061109a81611423565b92915050565b6000815190506110af81611423565b92915050565b6000602082840312156110cb576110ca6113de565b5b60006110d984828501611076565b91505092915050565b6000602082840312156110f8576110f76113de565b5b60006111068482850161108b565b91505092915050565b600060208284031215611125576111246113de565b5b6000611133848285016110a0565b91505092915050565b60008060408385031215611153576111526113de565b5b60006111618582860161108b565b92505060206111728582860161108b565b9150509250929050565b61118581611338565b82525050565b600061119860158361129c565b91506111a3826113e3565b602082019050919050565b6111b781611376565b82525050565b60006020820190506111d2600083018461117c565b92915050565b60006040820190506111ed600083018561117c565b6111fa602083018461117c565b9392505050565b6000606082019050611216600083018661117c565b611223602083018561117c565b61123060408301846111ae565b949350505050565b600060408201905061124d600083018561117c565b61125a60208301846111ae565b9392505050565b6000602082019050818103600083015261127a8161118b565b9050919050565b600060208201905061129660008301846111ae565b92915050565b600082825260208201905092915050565b60006112b882611376565b91506112c383611376565b9250826112d3576112d26113af565b5b828204905092915050565b60006112e982611376565b91506112f483611376565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561132d5761132c611380565b5b828202905092915050565b600061134382611356565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6114158161134a565b811461142057600080fd5b50565b61142c81611376565b811461143757600080fd5b5056fea2646970667358221220446d95eedec98e6b834df55bcb0fbd47edbd1ebfedc23024c0fb45289c0ae22864736f6c63430008070033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16BD CODESIZE SUB DUP1 PUSH3 0x16BD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP PUSH3 0x1AB JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xF6 DUP2 PUSH3 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x118 JUMPI PUSH3 0x117 PUSH3 0x18C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x128 DUP7 DUP3 DUP8 ADD PUSH3 0xE5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x13B DUP7 DUP3 DUP8 ADD PUSH3 0xE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x14E DUP7 DUP3 DUP8 ADD PUSH3 0xE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x165 DUP3 PUSH3 0x16C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x19C DUP2 PUSH3 0x158 JUMP JUMPDEST DUP2 EQ PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x1470 PUSH3 0x24D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x95F ADD MSTORE PUSH2 0xCDD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x219 ADD MSTORE DUP2 DUP2 PUSH2 0x305 ADD MSTORE DUP2 DUP2 PUSH2 0x5A2 ADD MSTORE DUP2 DUP2 PUSH2 0x73E ADD MSTORE DUP2 DUP2 PUSH2 0x7EE ADD MSTORE DUP2 DUP2 PUSH2 0xC1D ADD MSTORE DUP2 DUP2 PUSH2 0xD01 ADD MSTORE PUSH2 0xDD4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1F4 ADD MSTORE DUP2 DUP2 PUSH2 0x3E2 ADD MSTORE DUP2 DUP2 PUSH2 0x4B5 ADD MSTORE DUP2 DUP2 PUSH2 0x68E ADD MSTORE DUP2 DUP2 PUSH2 0x897 ADD MSTORE DUP2 DUP2 PUSH2 0xA54 ADD MSTORE DUP2 DUP2 PUSH2 0xB40 ADD MSTORE PUSH2 0xD25 ADD MSTORE PUSH2 0x1470 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7464FC3D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x9C117F0F EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xBA9C6845 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1D4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2AF4EC36 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF0 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x360 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST DUP3 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH2 0x496 PUSH2 0xD23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FB SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x717 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93E SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x95B PUSH1 0x0 SLOAD PUSH2 0xEAF JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH2 0xA13 PUSH2 0xD23 JUMP JUMPDEST PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA44 SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAD SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST DUP3 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC76 SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH2 0xCD1 PUSH2 0xD23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xEA7 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xEE9 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF05 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF21 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF3D JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF59 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF75 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x1000 JUMPI PUSH2 0xFFF PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0x1053 DUP3 DUP4 DUP7 DUP2 PUSH2 0x104D JUMPI PUSH2 0x104C PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x106C JUMPI DUP2 PUSH2 0x106E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1085 DUP2 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109A DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10AF DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10D9 DUP5 DUP3 DUP6 ADD PUSH2 0x1076 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1106 DUP5 DUP3 DUP6 ADD PUSH2 0x108B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1133 DUP5 DUP3 DUP6 ADD PUSH2 0x10A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP6 DUP3 DUP7 ADD PUSH2 0x108B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1172 DUP6 DUP3 DUP7 ADD PUSH2 0x108B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1198 PUSH1 0x15 DUP4 PUSH2 0x129C JUMP JUMPDEST SWAP2 POP PUSH2 0x11A3 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x1376 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x11FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1216 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x1223 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x1230 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x124D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x125A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x127A DUP2 PUSH2 0x118B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1296 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B8 DUP3 PUSH2 0x1376 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C3 DUP4 PUSH2 0x1376 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E9 DUP3 PUSH2 0x1376 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F4 DUP4 PUSH2 0x1376 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x1380 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1343 DUP3 PUSH2 0x1356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1415 DUP2 PUSH2 0x134A JUMP JUMPDEST DUP2 EQ PUSH2 0x1420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x142C DUP2 PUSH2 0x1376 JUMP JUMPDEST DUP2 EQ PUSH2 0x1437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH14 0x95EEDEC98E6B834DF55BCB0FBD47 0xED 0xBD 0x1E 0xBF 0xED 0xC2 ADDRESS 0x24 0xC0 0xFB GASLIMIT 0x28 SWAP13 EXP 0xE2 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "224:2442:2:-:0;;;573:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;659:7;650:16;;;;;;;;;;;;685:7;676:16;;;;;;;;;;;;715:11;702:24;;;;;;;;;;;;573:160;;;224:2442;;7:143:3;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;224:2442:2:-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get0_850": {
									"entryPoint": 534,
									"id": 850,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@get1_916": {
									"entryPoint": 2641,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@kLast_593": {
									"entryPoint": 1196,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ltrAddress_591": {
									"entryPoint": 3291,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_42": {
									"entryPoint": 4189,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price0_599": {
									"entryPoint": 3285,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price1_601": {
									"entryPoint": 1190,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@provideLiquidity_784": {
									"entryPoint": 1202,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@reserve0_595": {
									"entryPoint": 1178,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_597": {
									"entryPoint": 1184,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_466": {
									"entryPoint": 3759,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token0_587": {
									"entryPoint": 498,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_589": {
									"entryPoint": 3327,
									"id": 589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@update_669": {
									"entryPoint": 3363,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4609,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4664,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6848:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:3",
														"type": ""
													}
												],
												"src": "7:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:3",
														"type": ""
													}
												],
												"src": "150:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "358:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "368:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "383:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "377:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "368:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "399:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "336:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "344:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "352:5:3",
														"type": ""
													}
												],
												"src": "295:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "518:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "564:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "566:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "566:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "566:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "539:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "548:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "535:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "535:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "560:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "531:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:32:3"
															},
															"nodeType": "YulIf",
															"src": "528:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "657:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "672:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "686:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "676:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "701:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "744:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "755:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "740:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "740:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "764:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "711:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "701:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "488:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "499:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "511:6:3",
														"type": ""
													}
												],
												"src": "444:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "861:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "907:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "909:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "909:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "909:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "882:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "891:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "878:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "874:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:32:3"
															},
															"nodeType": "YulIf",
															"src": "871:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1000:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1015:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1029:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1019:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1044:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1079:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1090:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1054:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1054:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1044:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "831:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "842:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "854:6:3",
														"type": ""
													}
												],
												"src": "795:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1255:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:3"
															},
															"nodeType": "YulIf",
															"src": "1217:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1346:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1361:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1365:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1390:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1436:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1447:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1432:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1432:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1456:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1400:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1390:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1188:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:3",
														"type": ""
													}
												],
												"src": "1130:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1616:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1618:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1618:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1618:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1591:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1600:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1587:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1587:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1612:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1583:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:32:3"
															},
															"nodeType": "YulIf",
															"src": "1580:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1709:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1724:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1738:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1728:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1753:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1788:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1799:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1784:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1784:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1808:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1763:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1763:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1753:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1836:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1851:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1865:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1855:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1881:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1891:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1891:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1881:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1532:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1543:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1555:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1563:6:3",
														"type": ""
													}
												],
												"src": "1487:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2049:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2072:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2054:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2020:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2027:3:3",
														"type": ""
													}
												],
												"src": "1967:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2237:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2247:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2313:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2254:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2419:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nodeType": "YulIdentifier",
																	"src": "2330:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2432:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2443:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2448:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2432:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2225:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2233:3:3",
														"type": ""
													}
												],
												"src": "2091:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2528:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2568:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2550:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2550:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2538:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2538:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2516:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2523:3:3",
														"type": ""
													}
												],
												"src": "2463:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2685:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2695:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2707:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2718:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2695:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2775:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2788:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2799:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2784:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2784:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2731:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2731:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2657:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2669:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2680:4:3",
														"type": ""
													}
												],
												"src": "2587:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2951:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2963:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2974:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2959:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2951:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3031:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3044:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3055:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2987:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2987:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3112:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3068:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3068:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3068:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2905:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2917:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2925:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2936:4:3",
														"type": ""
													}
												],
												"src": "2815:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3307:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3317:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3329:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3340:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3325:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3317:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3397:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3410:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3421:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3406:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3353:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3353:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3491:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3502:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3434:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3434:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3560:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3584:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3516:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3516:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3263:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3275:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3283:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3291:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3302:4:3",
														"type": ""
													}
												],
												"src": "3153:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3727:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3737:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3749:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3760:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3745:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3745:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3737:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3817:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3830:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3841:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3826:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3826:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3773:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3773:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3898:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3911:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3922:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3854:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3854:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3854:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3691:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3703:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3711:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3722:4:3",
														"type": ""
													}
												],
												"src": "3601:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4110:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4120:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4132:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4120:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4167:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4178:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4163:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4186:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4182:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4182:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4156:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4212:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4346:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4220:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4212:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4090:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4105:4:3",
														"type": ""
													}
												],
												"src": "3939:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4462:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4472:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4484:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4495:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4472:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4552:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4565:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4576:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4561:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4561:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4508:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4508:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4434:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4446:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4457:4:3",
														"type": ""
													}
												],
												"src": "4364:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4632:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4642:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4652:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4625:6:3",
														"type": ""
													}
												],
												"src": "4592:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4786:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4791:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4779:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4779:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4779:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4807:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4826:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4831:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4807:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4741:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4746:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4757:11:3",
														"type": ""
													}
												],
												"src": "4673:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4890:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4900:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4923:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4905:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4905:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4900:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4934:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4957:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4939:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4934:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4981:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4983:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4983:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4983:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4978:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4971:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:9:3"
															},
															"nodeType": "YulIf",
															"src": "4968:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5013:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5022:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5025:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5018:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5013:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4879:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4882:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4888:1:3",
														"type": ""
													}
												],
												"src": "4848:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5087:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5097:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5120:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5102:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5102:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5097:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5131:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5154:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5136:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5131:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5329:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5331:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5331:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5331:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5241:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5234:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5234:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5227:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5227:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5249:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5256:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5324:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5252:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5246:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5246:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5223:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:105:3"
															},
															"nodeType": "YulIf",
															"src": "5220:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5361:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5376:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5379:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5361:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5070:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5073:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5079:7:3",
														"type": ""
													}
												],
												"src": "5039:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5438:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5448:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5477:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5459:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5448:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5420:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5430:7:3",
														"type": ""
													}
												],
												"src": "5393:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5537:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5547:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5572:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5565:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5565:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5558:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5547:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5519:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5529:7:3",
														"type": ""
													}
												],
												"src": "5495:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5636:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5646:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5661:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5668:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5657:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5646:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5618:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5628:7:3",
														"type": ""
													}
												],
												"src": "5591:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5768:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5778:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5789:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5778:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5750:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5760:7:3",
														"type": ""
													}
												],
												"src": "5723:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5851:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5854:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5844:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5951:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5941:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5941:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5972:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5965:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5965:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5965:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5806:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6020:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6037:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6040:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6030:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6134:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6137:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6127:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6127:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6127:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6161:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6151:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6151:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6151:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5992:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6267:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6284:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6277:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6277:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6178:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6390:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6407:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6410:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6400:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6400:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6301:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6530:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6552:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6560:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6548:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6548:14:3"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6564:23:3",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6541:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6541:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6541:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6522:6:3",
														"type": ""
													}
												],
												"src": "6424:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6641:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6695:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6704:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6707:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6697:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6697:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6697:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6664:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6686:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6671:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6671:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6661:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6661:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6654:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6654:40:3"
															},
															"nodeType": "YulIf",
															"src": "6651:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6634:5:3",
														"type": ""
													}
												],
												"src": "6601:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6766:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6823:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6832:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6835:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6825:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6825:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6825:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6789:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6796:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6796:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6786:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6786:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6779:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:43:3"
															},
															"nodeType": "YulIf",
															"src": "6776:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6759:5:3",
														"type": ""
													}
												],
												"src": "6723:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"587": [
									{
										"length": 32,
										"start": 500
									},
									{
										"length": 32,
										"start": 994
									},
									{
										"length": 32,
										"start": 1205
									},
									{
										"length": 32,
										"start": 1678
									},
									{
										"length": 32,
										"start": 2199
									},
									{
										"length": 32,
										"start": 2644
									},
									{
										"length": 32,
										"start": 2880
									},
									{
										"length": 32,
										"start": 3365
									}
								],
								"589": [
									{
										"length": 32,
										"start": 537
									},
									{
										"length": 32,
										"start": 773
									},
									{
										"length": 32,
										"start": 1442
									},
									{
										"length": 32,
										"start": 1854
									},
									{
										"length": 32,
										"start": 2030
									},
									{
										"length": 32,
										"start": 3101
									},
									{
										"length": 32,
										"start": 3329
									},
									{
										"length": 32,
										"start": 3540
									}
								],
								"591": [
									{
										"length": 32,
										"start": 2399
									},
									{
										"length": 32,
										"start": 3293
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80637464fc3d116100715780637464fc3d146101425780637a16af7f146101605780639c117f0f1461017c578063a0a986f114610198578063ba9c6845146101b6578063d21220a7146101d4576100a9565b80630dfe1681146100ae5780632af4ec36146100cc578063443cb4bc146100e85780635a76f25e146101065780636caf25ce14610124575b600080fd5b6100b66101f2565b6040516100c391906111bd565b60405180910390f35b6100e660048036038101906100e191906110e2565b610216565b005b6100f061049a565b6040516100fd9190611281565b60405180910390f35b61010e6104a0565b60405161011b9190611281565b60405180910390f35b61012c6104a6565b6040516101399190611281565b60405180910390f35b61014a6104ac565b6040516101579190611281565b60405180910390f35b61017a6004803603810190610175919061113c565b6104b2565b005b610196600480360381019061019191906110e2565b610a51565b005b6101a0610cd5565b6040516101ad9190611281565b60405180910390f35b6101be610cdb565b6040516101cb91906111bd565b60405180910390f35b6101dc610cff565b6040516101e991906111bd565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102729291906111d8565b60206040518083038186803b15801561028a57600080fd5b505afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c2919061110f565b1015610303576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fa90611261565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161036093929190611201565b602060405180830381600087803b15801561037a57600080fd5b505af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906110b5565b5060006002546001546103c591906112ad565b826103d091906112de565b905080600154116103e057600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161043b929190611238565b602060405180830381600087803b15801561045557600080fd5b505af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906110b5565b50610496610d23565b5050565b60015481565b60025481565b60045481565b60005481565b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161050e9291906111d8565b60206040518083038186803b15801561052657600080fd5b505afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e919061110f565b101561059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690611261565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016105fb9291906111d8565b60206040518083038186803b15801561061357600080fd5b505afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b919061110f565b101561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611261565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106e993929190611201565b602060405180830381600087803b15801561070357600080fd5b505af1158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b91906110b5565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161079993929190611201565b602060405180830381600087803b1580156107b357600080fd5b505af11580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb91906110b5565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161084591906111bd565b60206040518083038186803b15801561085d57600080fd5b505afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610895919061110f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ee91906111bd565b60206040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e919061110f565b61094891906112de565b600081905550600061095b600054610eaf565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109b8929190611238565b602060405180830381600087803b1580156109d257600080fd5b505af11580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a91906110b5565b50610a13610d23565b7fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da63382604051610a44929190611238565b60405180910390a1505050565b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610aad9291906111d8565b60206040518083038186803b158015610ac557600080fd5b505afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd919061110f565b1015610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3590611261565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b9b93929190611201565b602060405180830381600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed91906110b5565b506000600154600254610c0091906112ad565b82610c0b91906112de565b90508060025411610c1b57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c76929190611238565b602060405180830381600087803b158015610c9057600080fd5b505af1158015610ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc891906110b5565b50610cd1610d23565b5050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d7c91906111bd565b60206040518083038186803b158015610d9457600080fd5b505afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc919061110f565b6001819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e2b91906111bd565b60206040518083038186803b158015610e4357600080fd5b505afa158015610e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7b919061110f565b600281905550600154600254610e9191906112ad565b600381905550600254600154610ea791906112ad565b600481905550565b600080821415610ec25760009050611058565b60006001905060008390506000608082901c1115610ee957608081901c9050604082901b91505b6000604082901c1115610f0557604081901c9050602082901b91505b6000602082901c1115610f2157602081901c9050601082901b91505b6000601082901c1115610f3d57601081901c9050600882901b91505b6000600882901c1115610f5957600881901c9050600482901b91505b6000600482901c1115610f7557600481901c9050600282901b91505b6000600282901c1115610f8a57600182901b91505b6001828581610f9c57610f9b6113af565b5b048301901c91506001828581610fb557610fb46113af565b5b048301901c91506001828581610fce57610fcd6113af565b5b048301901c91506001828581610fe757610fe66113af565b5b048301901c9150600182858161100057610fff6113af565b5b048301901c91506001828581611019576110186113af565b5b048301901c91506001828581611032576110316113af565b5b048301901c91506110538283868161104d5761104c6113af565b5b0461105d565b925050505b919050565b600081831061106c578161106e565b825b905092915050565b6000815190506110858161140c565b92915050565b60008135905061109a81611423565b92915050565b6000815190506110af81611423565b92915050565b6000602082840312156110cb576110ca6113de565b5b60006110d984828501611076565b91505092915050565b6000602082840312156110f8576110f76113de565b5b60006111068482850161108b565b91505092915050565b600060208284031215611125576111246113de565b5b6000611133848285016110a0565b91505092915050565b60008060408385031215611153576111526113de565b5b60006111618582860161108b565b92505060206111728582860161108b565b9150509250929050565b61118581611338565b82525050565b600061119860158361129c565b91506111a3826113e3565b602082019050919050565b6111b781611376565b82525050565b60006020820190506111d2600083018461117c565b92915050565b60006040820190506111ed600083018561117c565b6111fa602083018461117c565b9392505050565b6000606082019050611216600083018661117c565b611223602083018561117c565b61123060408301846111ae565b949350505050565b600060408201905061124d600083018561117c565b61125a60208301846111ae565b9392505050565b6000602082019050818103600083015261127a8161118b565b9050919050565b600060208201905061129660008301846111ae565b92915050565b600082825260208201905092915050565b60006112b882611376565b91506112c383611376565b9250826112d3576112d26113af565b5b828204905092915050565b60006112e982611376565b91506112f483611376565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561132d5761132c611380565b5b828202905092915050565b600061134382611356565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6114158161134a565b811461142057600080fd5b50565b61142c81611376565b811461143757600080fd5b5056fea2646970667358221220446d95eedec98e6b834df55bcb0fbd47edbd1ebfedc23024c0fb45289c0ae22864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7464FC3D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x7A16AF7F EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x9C117F0F EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA0A986F1 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xBA9C6845 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1D4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2AF4EC36 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x6CAF25CE EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF0 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x272 SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x360 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST DUP3 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH2 0x496 PUSH2 0xD23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FB SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x717 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93E SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x95B PUSH1 0x0 SLOAD PUSH2 0xEAF JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH2 0xA13 PUSH2 0xD23 JUMP JUMPDEST PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA44 SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAD SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST LT ISZERO PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB35 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST DUP3 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD GT PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC76 SWAP3 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST POP PUSH2 0xCD1 PUSH2 0xD23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7B SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0xEA7 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xEE9 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF05 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF21 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF3D JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF59 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF75 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFCE JUMPI PUSH2 0xFCD PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x1000 JUMPI PUSH2 0xFFF PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0x1053 DUP3 DUP4 DUP7 DUP2 PUSH2 0x104D JUMPI PUSH2 0x104C PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DIV PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x106C JUMPI DUP2 PUSH2 0x106E JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1085 DUP2 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109A DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10AF DUP2 PUSH2 0x1423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10D9 DUP5 DUP3 DUP6 ADD PUSH2 0x1076 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1106 DUP5 DUP3 DUP6 ADD PUSH2 0x108B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1133 DUP5 DUP3 DUP6 ADD PUSH2 0x10A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1152 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP6 DUP3 DUP7 ADD PUSH2 0x108B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1172 DUP6 DUP3 DUP7 ADD PUSH2 0x108B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1338 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1198 PUSH1 0x15 DUP4 PUSH2 0x129C JUMP JUMPDEST SWAP2 POP PUSH2 0x11A3 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x1376 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x11FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1216 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x1223 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x1230 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x124D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x125A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x127A DUP2 PUSH2 0x118B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1296 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B8 DUP3 PUSH2 0x1376 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C3 DUP4 PUSH2 0x1376 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E9 DUP3 PUSH2 0x1376 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F4 DUP4 PUSH2 0x1376 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x1380 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1343 DUP3 PUSH2 0x1356 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1415 DUP2 PUSH2 0x134A JUMP JUMPDEST DUP2 EQ PUSH2 0x1420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x142C DUP2 PUSH2 0x1376 JUMP JUMPDEST DUP2 EQ PUSH2 0x1437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH14 0x95EEDEC98E6B834DF55BCB0FBD47 0xED 0xBD 0x1E 0xBF 0xED 0xC2 ADDRESS 0x24 0xC0 0xFB GASLIMIT 0x28 SWAP13 EXP 0xE2 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "224:2442:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;244:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1691:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;385:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;359:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;976:709;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2150:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;443:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;318:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;244;;;:::o;1691:453::-;1803:8;1755:6;1748:24;;;1773:10;1793:4;1748:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1740:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1854:6;1847:27;;;1875:10;1895:4;1902:8;1847:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1921:17;1964:8;;1953;;:19;;;;:::i;:::-;1941:8;:32;;;;:::i;:::-;1921:52;;1999:9;1987:8;;:21;1983:136;;2024:8;;;1983:136;2069:6;2062:23;;;2086:10;2098:9;2062:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2129:8;:6;:8::i;:::-;1730:414;1691:453;:::o;385:23::-;;;;:::o;414:::-;;;;:::o;470:21::-;;;;:::o;359:20::-;;;;:::o;976:709::-;1120:8;1072:6;1065:24;;;1090:10;1110:4;1065:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1057:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1227:8;1179:6;1172:24;;;1197:10;1217:4;1172:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;1164:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1278:6;1271:27;;;1299:10;1319:4;1326:8;1271:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1352:6;1345:27;;;1373:10;1393:4;1400:8;1345:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1476:6;1469:24;;;1502:4;1469:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1434:6;1427:24;;;1460:4;1427:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;;:::i;:::-;1419:5;:89;;;;1518:14;1535:16;1545:5;;1535:9;:16::i;:::-;1518:33;;1568:10;1561:27;;;1589:10;1601:6;1561:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1618:8;:6;:8::i;:::-;1641:37;1659:10;1671:6;1641:37;;;;;;;:::i;:::-;;;;;;;;1047:638;976:709;;:::o;2150:453::-;2262:8;2214:6;2207:24;;;2232:10;2252:4;2207:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;2199:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2313:6;2306:27;;;2334:10;2354:4;2361:8;2306:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2380:17;2423:8;;2412;;:19;;;;:::i;:::-;2400:8;:32;;;;:::i;:::-;2380:52;;2458:9;2446:8;;:21;2442:136;;2483:8;;;2442:136;2528:6;2521:23;;;2545:10;2557:9;2521:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2588:8;:6;:8::i;:::-;2189:414;2150:453;:::o;443:21::-;;;;:::o;318:35::-;;;:::o;281:31::-;;;:::o;739:229::-;793:6;786:24;;;819:4;786:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;775:8;:50;;;;853:6;846:24;;;879:4;846:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:8;:50;;;;915:8;;904;;:19;;;;:::i;:::-;895:6;:28;;;;953:8;;942;;:19;;;;:::i;:::-;933:6;:28;;;;739:229::o;6281:2206:0:-;6329:7;6357:1;6352;:6;6348:45;;;6381:1;6374:8;;;;6348:45;7058:14;7075:1;7058:18;;7086:9;7098:1;7086:13;;7124:1;7118:3;7113:1;:8;;:12;7109:79;;;7147:3;7141:9;;;;;7175:2;7164:13;;;;;7109:79;7211:1;7206:2;7201:1;:7;;:11;7197:77;;;7234:2;7228:8;;;;;7261:2;7250:13;;;;;7197:77;7297:1;7292:2;7287:1;:7;;:11;7283:77;;;7320:2;7314:8;;;;;7347:2;7336:13;;;;;7283:77;7383:1;7378:2;7373:1;:7;;:11;7369:76;;;7406:2;7400:8;;;;;7433:1;7422:12;;;;;7369:76;7467:1;7463;7458;:6;;:10;7454:74;;;7490:1;7484:7;;;;;7516:1;7505:12;;;;;7454:74;7550:1;7546;7541;:6;;:10;7537:74;;;7573:1;7567:7;;;;;7599:1;7588:12;;;;;7537:74;7633:1;7629;7624;:6;;:10;7620:53;;;7661:1;7650:12;;;;;7620:53;8131:1;8120:6;8116:1;:10;;;;;:::i;:::-;;;8107:6;:19;8106:26;;8097:35;;8180:1;8169:6;8165:1;:10;;;;;:::i;:::-;;;8156:6;:19;8155:26;;8146:35;;8229:1;8218:6;8214:1;:10;;;;;:::i;:::-;;;8205:6;:19;8204:26;;8195:35;;8278:1;8267:6;8263:1;:10;;;;;:::i;:::-;;;8254:6;:19;8253:26;;8244:35;;8327:1;8316:6;8312:1;:10;;;;;:::i;:::-;;;8303:6;:19;8302:26;;8293:35;;8376:1;8365:6;8361:1;:10;;;;;:::i;:::-;;;8352:6;:19;8351:26;;8342:35;;8425:1;8414:6;8410:1;:10;;;;;:::i;:::-;;;8401:6;:19;8400:26;;8391:35;;8447:23;8451:6;8463;8459:1;:10;;;;;:::i;:::-;;;8447:3;:23::i;:::-;8440:30;;;;6281:2206;;;;:::o;589:104::-;647:7;677:1;673;:5;:13;;685:1;673:13;;;681:1;673:13;666:20;;589:104;;;;:::o;7:137:3:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:143::-;352:5;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;295:143;;;;:::o;444:345::-;511:6;560:2;548:9;539:7;535:23;531:32;528:119;;;566:79;;:::i;:::-;528:119;686:1;711:61;764:7;755:6;744:9;740:22;711:61;:::i;:::-;701:71;;657:125;444:345;;;;:::o;795:329::-;854:6;903:2;891:9;882:7;878:23;874:32;871:119;;;909:79;;:::i;:::-;871:119;1029:1;1054:53;1099:7;1090:6;1079:9;1075:22;1054:53;:::i;:::-;1044:63;;1000:117;795:329;;;;:::o;1130:351::-;1200:6;1249:2;1237:9;1228:7;1224:23;1220:32;1217:119;;;1255:79;;:::i;:::-;1217:119;1375:1;1400:64;1456:7;1447:6;1436:9;1432:22;1400:64;:::i;:::-;1390:74;;1346:128;1130:351;;;;:::o;1487:474::-;1555:6;1563;1612:2;1600:9;1591:7;1587:23;1583:32;1580:119;;;1618:79;;:::i;:::-;1580:119;1738:1;1763:53;1808:7;1799:6;1788:9;1784:22;1763:53;:::i;:::-;1753:63;;1709:117;1865:2;1891:53;1936:7;1927:6;1916:9;1912:22;1891:53;:::i;:::-;1881:63;;1836:118;1487:474;;;;;:::o;1967:118::-;2054:24;2072:5;2054:24;:::i;:::-;2049:3;2042:37;1967:118;;:::o;2091:366::-;2233:3;2254:67;2318:2;2313:3;2254:67;:::i;:::-;2247:74;;2330:93;2419:3;2330:93;:::i;:::-;2448:2;2443:3;2439:12;2432:19;;2091:366;;;:::o;2463:118::-;2550:24;2568:5;2550:24;:::i;:::-;2545:3;2538:37;2463:118;;:::o;2587:222::-;2680:4;2718:2;2707:9;2703:18;2695:26;;2731:71;2799:1;2788:9;2784:17;2775:6;2731:71;:::i;:::-;2587:222;;;;:::o;2815:332::-;2936:4;2974:2;2963:9;2959:18;2951:26;;2987:71;3055:1;3044:9;3040:17;3031:6;2987:71;:::i;:::-;3068:72;3136:2;3125:9;3121:18;3112:6;3068:72;:::i;:::-;2815:332;;;;;:::o;3153:442::-;3302:4;3340:2;3329:9;3325:18;3317:26;;3353:71;3421:1;3410:9;3406:17;3397:6;3353:71;:::i;:::-;3434:72;3502:2;3491:9;3487:18;3478:6;3434:72;:::i;:::-;3516;3584:2;3573:9;3569:18;3560:6;3516:72;:::i;:::-;3153:442;;;;;;:::o;3601:332::-;3722:4;3760:2;3749:9;3745:18;3737:26;;3773:71;3841:1;3830:9;3826:17;3817:6;3773:71;:::i;:::-;3854:72;3922:2;3911:9;3907:18;3898:6;3854:72;:::i;:::-;3601:332;;;;;:::o;3939:419::-;4105:4;4143:2;4132:9;4128:18;4120:26;;4192:9;4186:4;4182:20;4178:1;4167:9;4163:17;4156:47;4220:131;4346:4;4220:131;:::i;:::-;4212:139;;3939:419;;;:::o;4364:222::-;4457:4;4495:2;4484:9;4480:18;4472:26;;4508:71;4576:1;4565:9;4561:17;4552:6;4508:71;:::i;:::-;4364:222;;;;:::o;4673:169::-;4757:11;4791:6;4786:3;4779:19;4831:4;4826:3;4822:14;4807:29;;4673:169;;;;:::o;4848:185::-;4888:1;4905:20;4923:1;4905:20;:::i;:::-;4900:25;;4939:20;4957:1;4939:20;:::i;:::-;4934:25;;4978:1;4968:35;;4983:18;;:::i;:::-;4968:35;5025:1;5022;5018:9;5013:14;;4848:185;;;;:::o;5039:348::-;5079:7;5102:20;5120:1;5102:20;:::i;:::-;5097:25;;5136:20;5154:1;5136:20;:::i;:::-;5131:25;;5324:1;5256:66;5252:74;5249:1;5246:81;5241:1;5234:9;5227:17;5223:105;5220:131;;;5331:18;;:::i;:::-;5220:131;5379:1;5376;5372:9;5361:20;;5039:348;;;;:::o;5393:96::-;5430:7;5459:24;5477:5;5459:24;:::i;:::-;5448:35;;5393:96;;;:::o;5495:90::-;5529:7;5572:5;5565:13;5558:21;5547:32;;5495:90;;;:::o;5591:126::-;5628:7;5668:42;5661:5;5657:54;5646:65;;5591:126;;;:::o;5723:77::-;5760:7;5789:5;5778:16;;5723:77;;;:::o;5806:180::-;5854:77;5851:1;5844:88;5951:4;5948:1;5941:15;5975:4;5972:1;5965:15;5992:180;6040:77;6037:1;6030:88;6137:4;6134:1;6127:15;6161:4;6158:1;6151:15;6301:117;6410:1;6407;6400:12;6424:171;6564:23;6560:1;6552:6;6548:14;6541:47;6424:171;:::o;6601:116::-;6671:21;6686:5;6671:21;:::i;:::-;6664:5;6661:32;6651:60;;6707:1;6704;6697:12;6651:60;6601:116;:::o;6723:122::-;6796:24;6814:5;6796:24;:::i;:::-;6789:5;6786:35;6776:63;;6835:1;6832;6825:12;6776:63;6723:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1046400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"get0(uint256)": "infinite",
								"get1(uint256)": "infinite",
								"kLast()": "2429",
								"ltrAddress()": "infinite",
								"price0()": "2495",
								"price1()": "2518",
								"provideLiquidity(uint256,uint256)": "infinite",
								"reserve0()": "2474",
								"reserve1()": "2496",
								"token0()": "infinite",
								"token1()": "infinite"
							},
							"internal": {
								"update()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 573,
									"end": 733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 659,
									"end": 666,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 650,
									"end": 666,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 650,
									"end": 666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 650,
									"end": 666,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 650,
									"end": 666,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 650,
									"end": 666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 685,
									"end": 692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 692,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 676,
									"end": 692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 692,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 676,
									"end": 692,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 676,
									"end": 692,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 715,
									"end": 726,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 702,
									"end": 726,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 573,
									"end": 733,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 244,
									"end": 250,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 258,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 266,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 311,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 297,
									"end": 306,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 288,
									"end": 295,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 284,
									"end": 307,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 280,
									"end": 312,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 277,
									"end": 396,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 277,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 277,
									"end": 396,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 516,
									"end": 523,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 507,
									"end": 513,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 496,
									"end": 505,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 492,
									"end": 514,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 450,
									"end": 524,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 450,
									"end": 524,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 406,
									"end": 534,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 655,
									"end": 662,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 635,
									"end": 644,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 631,
									"end": 653,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 589,
									"end": 663,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 589,
									"end": 663,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 544,
									"end": 673,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 712,
									"end": 714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 794,
									"end": 801,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 774,
									"end": 783,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 770,
									"end": 792,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 728,
									"end": 802,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 728,
									"end": 802,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 683,
									"end": 812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 990,
									"end": 995,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 961,
									"end": 996,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 996,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1045,
									"end": 1052,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 1127,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1074,
									"end": 1128,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1362,
									"end": 1374,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1452,
									"end": 1457,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1449,
									"end": 1484,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1498,
									"end": 1499,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1495,
									"end": 1496,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1488,
									"end": 1500,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "591"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "589"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "587"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 2666,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220446d95eedec98e6b834df55bcb0fbd47edbd1ebfedc23024c0fb45289c0ae22864736f6c63430008070033",
									".code": [
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "7464FC3D"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "7464FC3D"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "7A16AF7F"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "9C117F0F"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "A0A986F1"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "BA9C6845"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "D21220A7"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "DFE1681"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "2AF4EC36"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "443CB4BC"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "5A76F25E"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "6CAF25CE"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 2666,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 244,
											"end": 275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 244,
											"end": 275,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1811,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1748,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1748,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1740,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1847,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1874,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1875,
											"end": 1885,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1899,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1910,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1972,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1964,
											"end": 1972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1953,
											"end": 1961,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1953,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 1995,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1987,
											"end": 1995,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2008,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1983,
											"end": 2119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2032,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2119,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1983,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2075,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2062,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2086,
											"end": 2096,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2129,
											"end": 2137,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2129,
											"end": 2137,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2129,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 2144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 2144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 385,
											"end": 408,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 491,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 379,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 379,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1065,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1128,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1057,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1197,
											"end": 1207,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1172,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1235,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1235,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1164,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1271,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1323,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1334,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1373,
											"end": 1383,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 1469,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1460,
											"end": 1464,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1427,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1427,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "591"
										},
										{
											"begin": 1561,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1589,
											"end": 1599,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1618,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1659,
											"end": 1669,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1678,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2207,
											"end": 2231,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2207,
											"end": 2231,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2231,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2232,
											"end": 2242,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2256,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2207,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2270,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2199,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 2306,
											"end": 2333,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2333,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2334,
											"end": 2344,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2369,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2423,
											"end": 2431,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2420,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2412,
											"end": 2420,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2412,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2446,
											"end": 2454,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2467,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2442,
											"end": 2578,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2491,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2578,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2442,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2534,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 2521,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2544,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2545,
											"end": 2555,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2588,
											"end": 2596,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2588,
											"end": 2596,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2588,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2603,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 443,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "591"
										},
										{
											"begin": 318,
											"end": 353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 318,
											"end": 353,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 281,
											"end": 312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 739,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 739,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 793,
											"end": 799,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 786,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 786,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 819,
											"end": 823,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 786,
											"end": 825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 775,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 775,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 775,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 775,
											"end": 825,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 775,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 859,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 846,
											"end": 870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 870,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 879,
											"end": 883,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 846,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 835,
											"end": 885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 835,
											"end": 885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 835,
											"end": 885,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 835,
											"end": 885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 915,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 915,
											"end": 923,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 904,
											"end": 912,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 904,
											"end": 912,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 904,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 904,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 904,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 901,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 923,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 895,
											"end": 923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 961,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 950,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 961,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 933,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 968,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 352,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 377,
											"end": 390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 368,
											"end": 390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 368,
											"end": 390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 789,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 444,
											"end": 789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 511,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 539,
											"end": 546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 531,
											"end": 563,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 528,
											"end": 647,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 528,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 528,
											"end": 647,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 566,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 528,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 528,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 686,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 764,
											"end": 771,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 755,
											"end": 761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 744,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 740,
											"end": 762,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 711,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 701,
											"end": 772,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 444,
											"end": 789,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 444,
											"end": 789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 444,
											"end": 789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 444,
											"end": 789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 444,
											"end": 789,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 854,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 905,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 882,
											"end": 889,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 871,
											"end": 990,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 871,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 871,
											"end": 990,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 871,
											"end": 990,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 871,
											"end": 990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1609,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1598,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1610,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1615,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1580,
											"end": 1699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1618,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1618,
											"end": 1697,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1697,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1618,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1580,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1797,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1784,
											"end": 1806,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1816,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1867,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2313,
											"end": 2316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2419,
											"end": 2422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2463,
											"end": 2581,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2463,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2568,
											"end": 2573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2548,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2581,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 2809,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2587,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2720,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2707,
											"end": 2716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2801,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2731,
											"end": 2802,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2731,
											"end": 2802,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2731,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2809,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2809,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2809,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2987,
											"end": 3058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2987,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3134,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3068,
											"end": 3140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3068,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 3147,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3342,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3353,
											"end": 3424,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3424,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3353,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3502,
											"end": 3504,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3491,
											"end": 3500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3484,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3434,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3573,
											"end": 3582,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3566,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3516,
											"end": 3588,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3516,
											"end": 3588,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3516,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3595,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3745,
											"end": 3763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 3763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 3763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3773,
											"end": 3844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3773,
											"end": 3844,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3773,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3922,
											"end": 3924,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3854,
											"end": 3926,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3854,
											"end": 3926,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3854,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3933,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3939,
											"end": 4358,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3939,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4176,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4220,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4346,
											"end": 4350,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4220,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4220,
											"end": 4351,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4220,
											"end": 4351,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4220,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4351,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4358,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4358,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4364,
											"end": 4586,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4364,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4574,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4558,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4508,
											"end": 4579,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4508,
											"end": 4579,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 4508,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4586,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4586,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4768,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4831,
											"end": 4835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4826,
											"end": 4829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 5033,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4848,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4888,
											"end": 4889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4905,
											"end": 4925,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4905,
											"end": 4925,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4905,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4957,
											"end": 4958,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4959,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4968,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4968,
											"end": 5003,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4983,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4983,
											"end": 5001,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4983,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4968,
											"end": 5003,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4968,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 5033,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 5033,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 5033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 5033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 5033,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5039,
											"end": 5387,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5039,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5079,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5120,
											"end": 5121,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5097,
											"end": 5122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5324,
											"end": 5325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5252,
											"end": 5326,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5327,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5234,
											"end": 5243,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5244,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5328,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5351,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5220,
											"end": 5351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5351,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5220,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5379,
											"end": 5380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5377,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5387,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5387,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5393,
											"end": 5489,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5393,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5477,
											"end": 5482,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 5459,
											"end": 5483,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5459,
											"end": 5483,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5459,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5489,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5489,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5495,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5495,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5578,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5558,
											"end": 5579,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 5585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 5585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 5585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5495,
											"end": 5585,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5591,
											"end": 5717,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 5591,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5710,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5711,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5717,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5723,
											"end": 5800,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5723,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5800,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5806,
											"end": 5986,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5806,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5931,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5948,
											"end": 5949,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5972,
											"end": 5973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 5980,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5992,
											"end": 6172,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5992,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6117,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6037,
											"end": 6038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6141,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6134,
											"end": 6135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6127,
											"end": 6142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6165,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6158,
											"end": 6159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6166,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6418,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6301,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6410,
											"end": 6411,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6424,
											"end": 6595,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6424,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6564,
											"end": 6587,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6541,
											"end": 6588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6424,
											"end": 6595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6424,
											"end": 6595,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6601,
											"end": 6717,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6601,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6671,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6686,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6671,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6671,
											"end": 6692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6692,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6671,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6693,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6651,
											"end": 6711,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 6709,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6711,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6651,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6717,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6723,
											"end": 6845,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 6723,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6814,
											"end": 6819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6796,
											"end": 6820,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6820,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6796,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6786,
											"end": 6821,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6776,
											"end": 6839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6835,
											"end": 6836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6825,
											"end": 6837,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 6839,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6776,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6723,
											"end": 6845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6723,
											"end": 6845,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get0(uint256)": "2af4ec36",
							"get1(uint256)": "9c117f0f",
							"kLast()": "7464fc3d",
							"ltrAddress()": "ba9c6845",
							"price0()": "a0a986f1",
							"price1()": "6caf25ce",
							"provideLiquidity(uint256,uint256)": "7a16af7f",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ltrAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"get0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"}],\"name\":\"get1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltrAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0xc5d9ae7b2121084f44e3032b0bbf9707dd58df333bb701d5d67506d3ea359284\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b2cc4f666ad07729c2fa4fceab8af25741239b708aa59c0af54f2fec4618090\",\"dweb:/ipfs/QmfST4ztNDeJFt951rmKuYmm9jkXn34XroT5bgHLNrx9v6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 593,
								"contract": "contracts/Pool.sol:Pool",
								"label": "kLast",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 595,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve0",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 597,
								"contract": "contracts/Pool.sol:Pool",
								"label": "reserve1",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 599,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price0",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 601,
								"contract": "contracts/Pool.sol:Pool",
								"label": "price1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 515,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 524,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 581,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 581,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 581,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 581,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 581,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 581,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2660:1"
				},
				"id": 1
			},
			"contracts/Pool.sol": {
				"ast": {
					"absolutePath": "contracts/Pool.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						],
						"Math": [
							503
						],
						"Pool": [
							917
						]
					},
					"id": 918,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 582,
							"src": "146:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 918,
							"sourceUnit": 504,
							"src": "169:53:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917
							],
							"name": "Pool",
							"nameLocation": "233:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 587,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "269:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "244:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 586,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 589,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "306:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "281:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "281:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba9c6845",
									"id": 591,
									"mutability": "immutable",
									"name": "ltrAddress",
									"nameLocation": "343:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "318:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7464fc3d",
									"id": 593,
									"mutability": "mutable",
									"name": "kLast",
									"nameLocation": "374:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "359:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 595,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "400:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "385:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 597,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "429:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "414:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 596,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "414:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0a986f1",
									"id": 599,
									"mutability": "mutable",
									"name": "price0",
									"nameLocation": "458:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "443:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6caf25ce",
									"id": 601,
									"mutability": "mutable",
									"name": "price1",
									"nameLocation": "485:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "470:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 607,
									"name": "liquidityProvided",
									"nameLocation": "504:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "530:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "522:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "558:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "550:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:45:2"
									},
									"src": "498:69:2"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "640:93:2",
										"statements": [
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 616,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "650:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 617,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "659:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "650:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "650:16:2"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "676:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "685:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "676:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "676:16:2"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 624,
														"name": "ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "702:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 625,
														"name": "_ltrAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "715:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "702:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "702:24:2"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_ltrAddress",
												"nameLocation": "627:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "619:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:55:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:0:2"
									},
									"scope": 917,
									"src": "573:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "765:203:2",
										"statements": [
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "775:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 639,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "819:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$917",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$917",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "811:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 637,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "811:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "811:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 634,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "793:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 633,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "786:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "786:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "786:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "786:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "775:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "775:50:2"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "835:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 651,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "879:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pool_$917",
																			"typeString": "contract Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pool_$917",
																			"typeString": "contract Pool"
																		}
																	],
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "871:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "871:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "871:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 646,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "853:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 645,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "846:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "846:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$581",
																	"typeString": "contract IERC20"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "846:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "846:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "835:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "835:50:2"
											},
											{
												"expression": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "price0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "895:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 657,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "904:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 658,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "915:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "904:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "895:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "895:28:2"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 662,
														"name": "price1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "933:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 663,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "942:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 664,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "953:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "942:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "933:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "933:28:2"
											}
										]
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "748:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:0:2"
									},
									"scope": 917,
									"src": "739:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "1047:638:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 681,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1090:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1090:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 685,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1110:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1102:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1102:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1102:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 678,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "1072:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 677,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1065:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1065:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1065:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1065:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 688,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1120:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1065:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1130:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1057:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "1057:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 698,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1197:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1197:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 702,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1217:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1209:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1209:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1209:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 695,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1179:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 694,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1172:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1172:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1172:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1172:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 705,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1227:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1172:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1237:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1164:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1164:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 714,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1299:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1299:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 718,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1319:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1311:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1311:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1311:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1326:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 711,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1278:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 710,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1271:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1271:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1271:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1271:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "1271:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1373:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1373:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 731,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1393:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1385:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1385:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1385:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1400:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 724,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1352:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 723,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1345:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1345:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1345:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1345:64:2"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1419:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 743,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1460:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$917",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$917",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1452:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1452:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1452:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 738,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "1434:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 737,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1427:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1427:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1427:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1427:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 752,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1502:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pool_$917",
																				"typeString": "contract Pool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pool_$917",
																				"typeString": "contract Pool"
																			}
																		],
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1494:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 750,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1494:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1494:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 747,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "1476:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 746,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1469:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1469:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$581",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "1469:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1469:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1427:81:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1419:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1419:89:2"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "1526:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "1518:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1518:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1545:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 760,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1535:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$503_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sqrt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "1535:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1518:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1589:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1589:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1601:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 766,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1568:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 765,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1561:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1561:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1561:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1561:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "1561:47:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 774,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1618:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1618:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "1618:8:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 778,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1659:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1659:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1671:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1641:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "EmitStatement",
												"src": "1636:42:2"
											}
										]
									},
									"functionSelector": "7a16af7f",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "985:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "1010:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1002:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:36:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:0:2"
									},
									"scope": 917,
									"src": "976:709:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "1730:414:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 794,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1773:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1773:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 798,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1793:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1785:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 796,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1785:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1785:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 791,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "1755:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 790,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1748:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1748:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1748:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1748:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 801,
																"name": "_amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "1803:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1748:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1740:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1740:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1875:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1875:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 814,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1895:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1887:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1887:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1887:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "_amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "1902:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 807,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1854:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 806,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1847:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1847:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1847:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1847:64:2"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "1929:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "1921:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "_amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "1941:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "1953:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 823,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "1964:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1953:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 825,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1952:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1941:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1921:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 829,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1999:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1987:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "2048:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 839,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2086:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2086:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 841,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2098:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 836,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2069:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 835,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2062:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2062:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2062:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2062:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "2062:46:2"
														}
													]
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "1983:136:2",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "2010:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 831,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2024:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2024:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 833,
															"nodeType": "ExpressionStatement",
															"src": "2024:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 846,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2129:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "2129:8:2"
											}
										]
									},
									"functionSelector": "2af4ec36",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get0",
									"nameLocation": "1700:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1713:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1705:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:18:2"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:0:2"
									},
									"scope": 917,
									"src": "1691:453:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2189:414:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 860,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2232:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2232:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 864,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2252:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pool_$917",
																					"typeString": "contract Pool"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2244:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2244:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2244:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 857,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2214:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 856,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2207:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2207:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "2207:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2207:51:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 867,
																"name": "_amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "2262:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2207:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2199:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "2199:97:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 876,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2334:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2334:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 880,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2354:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$917",
																		"typeString": "contract Pool"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2346:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2346:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2346:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "_amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "2361:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 873,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2313:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 872,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2306:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2306:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2306:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "2306:64:2"
											},
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "2388:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "2380:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2380:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 887,
														"name": "_amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "2400:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 888,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "2412:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 889,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2423:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2412:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 891,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2411:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2400:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2380:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2446:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 895,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "2458:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2446:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "2507:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 905,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2545:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2545:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 907,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "2557:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 902,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "2528:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 901,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2521:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2521:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "2521:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2521:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 909,
															"nodeType": "ExpressionStatement",
															"src": "2521:46:2"
														}
													]
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "2442:136:2",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "2469:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 897,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2483:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2483:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "2483:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 912,
														"name": "update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2588:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "2588:8:2"
											}
										]
									},
									"functionSelector": "9c117f0f",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get1",
									"nameLocation": "2159:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "_amount0",
												"nameLocation": "2172:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2164:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:18:2"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:0:2"
									},
									"scope": 917,
									"src": "2150:453:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 918,
							"src": "224:2442:2",
							"usedErrors": []
						}
					],
					"src": "121:3075:2"
				},
				"id": 2
			}
		}
	}
}