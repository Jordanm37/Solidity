{
	"id": "737fbd38d5498ccefbbca78590ac2b05",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//  x * y = k\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ncontract LiquidityPool {\n    // using Math for uint256;\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    address public reserveToken;\n    address constant ltrAddress = 0x39DB207Dff3411F4fab0483D419306873Cbc13d9;\n    uint256 public kLast;\n\n    constructor(address _tokenAddress){\n        reserveToken = _tokenAddress;\n    }\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    function provideLiquidity(uint256 _amount) external payable {\n        // require(msg.value == _amount, \"The amount of ETH and tokens should be equal\");\n        // IERC20(ltrAddress).approve(address(this), 1000000000000000000000);\n      \n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount);\n        if (kLast == 0) {\n            kLast = (address(this).balance * IERC20(reserveToken).balanceOf(address(this)));\n        }\n        uint256 LPShares = Math.sqrt(kLast / 10 ** 18);\n        IERC20(ltrAddress).transfer(msg.sender, LPShares);\n        emit liquidityProvided(msg.sender, _amount);\n    }\n\n    function reedemShares(uint256 _sharesAmount) public {\n        require(_sharesAmount > 0, \"Invalid amount of shares\");\n        require(IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount, \"Please approve the contract to deduct ltr tokens from your wallet\");\n\n        IERC20(ltrAddress).transferFrom(msg.sender, address(this), _sharesAmount);\n        IERC20(reserveToken).transfer(msg.sender, _sharesAmount);\n        (bool success, ) = payable(msg.sender).call{value: _sharesAmount}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    function getEth(uint256 _DAIAmount) public {\n        require(IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount, \"Contract not approved\");\n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _DAIAmount);\n        (bool success, ) = payable(msg.sender).call{value: _DAIAmount}(\"\");\n        require(success, \"Transfer Failed\");\n    }\n\n    function getDAI(uint256 _ethAmount) public payable {\n        require(msg.value == _ethAmount, \"Invalid amount\");\n        IERC20(reserveToken).transfer(msg.sender, _ethAmount);\n    }\n\n    function transferTokens(address to, uint256 _amount) external {\n        IERC20(ltrAddress).transfer(to, _amount);\n    }\n}\n\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ethAmount",
									"type": "uint256"
								}
							],
							"name": "getDAI",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_DAIAmount",
									"type": "uint256"
								}
							],
							"name": "getEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sharesAmount",
									"type": "uint256"
								}
							],
							"name": "reedemShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pool.sol\":310:2625  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Pool.sol\":596:675  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Pool.sol\":655:668  _tokenAddress */\n  dup1\n    /* \"contracts/Pool.sol\":640:652  reserveToken */\n  0x00\n  dup1\n    /* \"contracts/Pool.sol\":640:668  reserveToken = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pool.sol\":596:675  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/Pool.sol\":310:2625  contract LiquidityPool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Pool.sol\":310:2625  contract LiquidityPool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pool.sol\":310:2625  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbec3fa17\n      gt\n      tag_9\n      jumpi\n      dup1\n      0xbec3fa17\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xeb521a4c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf4325d67\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff9b3758\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x1aa5c70e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8e3073a6\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Pool.sol\":2317:2498  function getDAI(uint256 _ethAmount) public payable {... */\n    tag_2:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/Pool.sol\":569:589  uint256 public kLast */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":1943:2311  function getEth(uint256 _DAIAmount) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Pool.sol\":2504:2623  function transferTokens(address to, uint256 _amount) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Pool.sol\":756:1374  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Pool.sol\":458:485  address public reserveToken */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pool.sol\":1380:1937  function reedemShares(uint256 _sharesAmount) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Pool.sol\":2317:2498  function getDAI(uint256 _ethAmount) public payable {... */\n    tag_13:\n        /* \"contracts/Pool.sol\":2399:2409  _ethAmount */\n      dup1\n        /* \"contracts/Pool.sol\":2386:2395  msg.value */\n      callvalue\n        /* \"contracts/Pool.sol\":2386:2409  msg.value == _ethAmount */\n      eq\n        /* \"contracts/Pool.sol\":2378:2428  require(msg.value == _ethAmount, \"Invalid amount\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/Pool.sol\":2445:2457  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":2438:2467  IERC20(reserveToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2468:2478  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2480:2490  _ethAmount */\n      dup4\n        /* \"contracts/Pool.sol\":2438:2491  IERC20(reserveToken).transfer(msg.sender, _ethAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      pop\n        /* \"contracts/Pool.sol\":2317:2498  function getDAI(uint256 _ethAmount) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":569:589  uint256 public kLast */\n    tag_16:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":1943:2311  function getEth(uint256 _DAIAmount) public {... */\n    tag_22:\n        /* \"contracts/Pool.sol\":2065:2075  _DAIAmount */\n      dup1\n        /* \"contracts/Pool.sol\":2011:2023  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":2004:2034  IERC20(reserveToken).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":2035:2045  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2055:2059  this */\n      address\n        /* \"contracts/Pool.sol\":2004:2061  IERC20(reserveToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/Pool.sol\":2004:2075  IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1996:2101  require(IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount, \"Contract not approved\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/Pool.sol\":2118:2130  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":2111:2144  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":2145:2155  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2165:2169  this */\n      address\n        /* \"contracts/Pool.sol\":2172:2182  _DAIAmount */\n      dup5\n        /* \"contracts/Pool.sol\":2111:2183  IERC20(reserveToken).transferFrom(msg.sender, address(this), _DAIAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_64:\n      pop\n        /* \"contracts/Pool.sol\":2194:2206  bool success */\n      0x00\n        /* \"contracts/Pool.sol\":2220:2230  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":2212:2236  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":2244:2254  _DAIAmount */\n      dup3\n        /* \"contracts/Pool.sol\":2212:2259  payable(msg.sender).call{value: _DAIAmount}(\"\") */\n      mload(0x40)\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_69\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_68)\n    tag_69:\n      0x60\n      swap2\n      pop\n    tag_68:\n      pop\n        /* \"contracts/Pool.sol\":2193:2259  (bool success, ) = payable(msg.sender).call{value: _DAIAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":2277:2284  success */\n      dup1\n        /* \"contracts/Pool.sol\":2269:2304  require(success, \"Transfer Failed\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/Pool.sol\":1986:2311  {... */\n      pop\n        /* \"contracts/Pool.sol\":1943:2311  function getEth(uint256 _DAIAmount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":2504:2623  function transferTokens(address to, uint256 _amount) external {... */\n    tag_27:\n        /* \"contracts/Pool.sol\":521:563  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/Pool.sol\":2576:2603  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":2604:2606  to */\n      dup4\n        /* \"contracts/Pool.sol\":2608:2615  _amount */\n      dup4\n        /* \"contracts/Pool.sol\":2576:2616  IERC20(ltrAddress).transfer(to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_74:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_77:\n      pop\n        /* \"contracts/Pool.sol\":2504:2623  function transferTokens(address to, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":756:1374  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_30:\n        /* \"contracts/Pool.sol\":1008:1020  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":1001:1034  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1035:1045  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1055:1059  this */\n      address\n        /* \"contracts/Pool.sol\":1062:1069  _amount */\n      dup5\n        /* \"contracts/Pool.sol\":1001:1070  IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_82:\n      pop\n        /* \"contracts/Pool.sol\":1093:1094  0 */\n      0x00\n        /* \"contracts/Pool.sol\":1084:1089  kLast */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1084:1094  kLast == 0 */\n      sub\n        /* \"contracts/Pool.sol\":1080:1200  if (kLast == 0) {... */\n      tag_83\n      jumpi\n        /* \"contracts/Pool.sol\":1150:1162  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":1143:1173  IERC20(reserveToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Pool.sol\":1182:1186  this */\n      address\n        /* \"contracts/Pool.sol\":1143:1188  IERC20(reserveToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_87:\n        /* \"contracts/Pool.sol\":1119:1140  address(this).balance */\n      selfbalance\n        /* \"contracts/Pool.sol\":1119:1188  address(this).balance * IERC20(reserveToken).balanceOf(address(this)) */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/Pool.sol\":1110:1115  kLast */\n      0x01\n        /* \"contracts/Pool.sol\":1110:1189  kLast = (address(this).balance * IERC20(reserveToken).balanceOf(address(this))) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pool.sol\":1080:1200  if (kLast == 0) {... */\n    tag_83:\n        /* \"contracts/Pool.sol\":1209:1225  uint256 LPShares */\n      0x00\n        /* \"contracts/Pool.sol\":1228:1255  Math.sqrt(kLast / 10 ** 18) */\n      tag_90\n        /* \"contracts/Pool.sol\":1246:1254  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Pool.sol\":1238:1243  kLast */\n      sload(0x01)\n        /* \"contracts/Pool.sol\":1238:1254  kLast / 10 ** 18 */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"contracts/Pool.sol\":1228:1237  Math.sqrt */\n      tag_93\n        /* \"contracts/Pool.sol\":1228:1255  Math.sqrt(kLast / 10 ** 18) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/Pool.sol\":1209:1255  uint256 LPShares = Math.sqrt(kLast / 10 ** 18) */\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":521:563  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/Pool.sol\":1265:1292  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":1293:1303  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1305:1313  LPShares */\n      dup4\n        /* \"contracts/Pool.sol\":1265:1314  IERC20(ltrAddress).transfer(msg.sender, LPShares) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_97:\n      pop\n        /* \"contracts/Pool.sol\":1329:1367  liquidityProvided(msg.sender, _amount) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/Pool.sol\":1347:1357  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1359:1366  _amount */\n      dup4\n        /* \"contracts/Pool.sol\":1329:1367  liquidityProvided(msg.sender, _amount) */\n      mload(0x40)\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pool.sol\":816:1374  {... */\n      pop\n        /* \"contracts/Pool.sol\":756:1374  function provideLiquidity(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pool.sol\":458:485  address public reserveToken */\n    tag_33:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Pool.sol\":1380:1937  function reedemShares(uint256 _sharesAmount) public {... */\n    tag_39:\n        /* \"contracts/Pool.sol\":1466:1467  0 */\n      0x00\n        /* \"contracts/Pool.sol\":1450:1463  _sharesAmount */\n      dup2\n        /* \"contracts/Pool.sol\":1450:1467  _sharesAmount > 0 */\n      gt\n        /* \"contracts/Pool.sol\":1442:1496  require(_sharesAmount > 0, \"Invalid amount of shares\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/Pool.sol\":1573:1586  _sharesAmount */\n      dup1\n        /* \"contracts/Pool.sol\":521:563  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/Pool.sol\":1514:1542  IERC20(ltrAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Pool.sol\":1543:1553  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1563:1567  this */\n      address\n        /* \"contracts/Pool.sol\":1514:1569  IERC20(ltrAddress).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_106:\n        /* \"contracts/Pool.sol\":1514:1586  IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount */\n      lt\n      iszero\n        /* \"contracts/Pool.sol\":1506:1656  require(IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount, \"Please approve the contract to deduct ltr tokens from your wallet\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/Pool.sol\":521:563  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/Pool.sol\":1667:1698  IERC20(ltrAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Pool.sol\":1699:1709  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1719:1723  this */\n      address\n        /* \"contracts/Pool.sol\":1726:1739  _sharesAmount */\n      dup5\n        /* \"contracts/Pool.sol\":1667:1740  IERC20(ltrAddress).transferFrom(msg.sender, address(this), _sharesAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_113:\n      pop\n        /* \"contracts/Pool.sol\":1757:1769  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":1750:1779  IERC20(reserveToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Pool.sol\":1780:1790  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1792:1805  _sharesAmount */\n      dup4\n        /* \"contracts/Pool.sol\":1750:1806  IERC20(reserveToken).transfer(msg.sender, _sharesAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_117:\n      pop\n        /* \"contracts/Pool.sol\":1817:1829  bool success */\n      0x00\n        /* \"contracts/Pool.sol\":1843:1853  msg.sender */\n      caller\n        /* \"contracts/Pool.sol\":1835:1859  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Pool.sol\":1867:1880  _sharesAmount */\n      dup3\n        /* \"contracts/Pool.sol\":1835:1885  payable(msg.sender).call{value: _sharesAmount}(\"\") */\n      mload(0x40)\n      tag_118\n      swap1\n      tag_66\n      jump\t// in\n    tag_118:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n        /* \"contracts/Pool.sol\":1816:1885  (bool success, ) = payable(msg.sender).call{value: _sharesAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Pool.sol\":1903:1910  success */\n      dup1\n        /* \"contracts/Pool.sol\":1895:1930  require(success, \"Transfer failed\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/Pool.sol\":1432:1937  {... */\n      pop\n        /* \"contracts/Pool.sol\":1380:1937  function reedemShares(uint256 _sharesAmount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6336  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6357:6358  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6353  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6358  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6374:6382  return 0 */\n      swap1\n      pop\n      jump(tag_125)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7072  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7075:7076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7076  uint256 result = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7095  uint256 x */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7098:7099  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7099  uint256 x = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7124:7125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7118:7121  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7114  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7121  x >> 128 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7125  x >> 128 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7147:7150  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7141:7150  x >>= 128 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7175:7177  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7164:7177  result <<= 64 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7211:7212  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7206:7208  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7202  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7208  x >> 64 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7212  x >> 64 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7234:7236  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7228:7236  x >>= 64 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7261:7263  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7250:7263  result <<= 32 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7297:7298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7292:7294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7288  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7294  x >> 32 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7298  x >> 32 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7320:7322  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7314:7322  x >>= 32 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7347:7349  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7336:7349  result <<= 16 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7383:7384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7378:7380  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7374  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7380  x >> 16 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7384  x >> 16 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7406:7408  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7400:7408  x >>= 16 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7433:7434  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7422:7434  result <<= 8 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7467:7468  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7463:7464  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7459  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7464  x >> 8 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7468  x >> 8 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7490:7491  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7484:7491  x >>= 8 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7516:7517  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7505:7517  result <<= 4 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7550:7551  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7546:7547  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7542  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7547  x >> 4 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7551  x >> 4 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7573:7574  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7567:7574  x >>= 4 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7599:7600  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7588:7600  result <<= 2 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7633:7634  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7629:7630  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7625  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7630  x >> 2 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7634  x >> 2 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7661:7662  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7650:7662  result <<= 1 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8131:8132  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8120:8126  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8117  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8126  a / result */\n      dup2\n      tag_134\n      jumpi\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n    tag_134:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8113  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8126  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8106:8132  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8097:8132  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8180:8181  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8169:8175  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8166  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8175  a / result */\n      dup2\n      tag_137\n      jumpi\n      tag_138\n      tag_136\n      jump\t// in\n    tag_138:\n    tag_137:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8162  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8175  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8155:8181  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8146:8181  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8229:8230  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8218:8224  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8215  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8224  a / result */\n      dup2\n      tag_139\n      jumpi\n      tag_140\n      tag_136\n      jump\t// in\n    tag_140:\n    tag_139:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8211  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8224  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8204:8230  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8195:8230  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8278:8279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8267:8273  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8264  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8273  a / result */\n      dup2\n      tag_141\n      jumpi\n      tag_142\n      tag_136\n      jump\t// in\n    tag_142:\n    tag_141:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8260  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8273  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8253:8279  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8244:8279  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8327:8328  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8316:8322  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8313  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8322  a / result */\n      dup2\n      tag_143\n      jumpi\n      tag_144\n      tag_136\n      jump\t// in\n    tag_144:\n    tag_143:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8309  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8322  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8302:8328  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8293:8328  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8376:8377  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8365:8371  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8362  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8371  a / result */\n      dup2\n      tag_145\n      jumpi\n      tag_146\n      tag_136\n      jump\t// in\n    tag_146:\n    tag_145:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8358  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8371  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8351:8377  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8342:8377  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8425:8426  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8414:8420  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8411  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8420  a / result */\n      dup2\n      tag_147\n      jumpi\n      tag_148\n      tag_136\n      jump\t// in\n    tag_148:\n    tag_147:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8407  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8420  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8400:8426  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8391:8426  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8451:8457  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8463:8469  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8460  a */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8469  a / result */\n      dup2\n      tag_150\n      jumpi\n      tag_151\n      tag_136\n      jump\t// in\n    tag_151:\n    tag_150:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8450  min */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8440:8470  return min(result, a / result) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_125:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":647:654  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":677:678  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:674  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:678  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":685:686  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      jump(tag_155)\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":681:682  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":666:686  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_157:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_159:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_160:\n        /* \"#utility.yul\":490:514   */\n      tag_195\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_159\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_196:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_161:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_198\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_160\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_12:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_201\n      tag_157\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":766:885   */\n    tag_200:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_202\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_161\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_162:\n        /* \"#utility.yul\":1112:1136   */\n      tag_204\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_159\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_18:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_206\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_162\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_163:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_164:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_209\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_163\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_165:\n        /* \"#utility.yul\":1684:1708   */\n      tag_211\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_164\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_212:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_166:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_214\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_165\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_26:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      dup1\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_217\n      tag_157\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1977:2096   */\n    tag_216:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_218\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_166\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_219\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_161\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_167:\n        /* \"#utility.yul\":2451:2475   */\n      tag_221\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_164\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_35:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_223\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_167\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2885   */\n    tag_168:\n        /* \"#utility.yul\":2800:2811   */\n      0x00\n        /* \"#utility.yul\":2834:2840   */\n      dup3\n        /* \"#utility.yul\":2829:2832   */\n      dup3\n        /* \"#utility.yul\":2822:2841   */\n      mstore\n        /* \"#utility.yul\":2874:2878   */\n      0x20\n        /* \"#utility.yul\":2869:2872   */\n      dup3\n        /* \"#utility.yul\":2865:2879   */\n      add\n        /* \"#utility.yul\":2850:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2716:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3055   */\n    tag_169:\n        /* \"#utility.yul\":3031:3047   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":3027:3028   */\n      0x00\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3015:3029   */\n      add\n        /* \"#utility.yul\":3008:3048   */\n      mstore\n        /* \"#utility.yul\":2891:3055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3061:3427   */\n    tag_170:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3224:3291   */\n      tag_227\n        /* \"#utility.yul\":3288:3290   */\n      0x0e\n        /* \"#utility.yul\":3283:3286   */\n      dup4\n        /* \"#utility.yul\":3224:3291   */\n      tag_168\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3217:3291   */\n      swap2\n      pop\n        /* \"#utility.yul\":3300:3393   */\n      tag_228\n        /* \"#utility.yul\":3389:3392   */\n      dup3\n        /* \"#utility.yul\":3300:3393   */\n      tag_169\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3418:3420   */\n      0x20\n        /* \"#utility.yul\":3413:3416   */\n      dup3\n        /* \"#utility.yul\":3409:3421   */\n      add\n        /* \"#utility.yul\":3402:3421   */\n      swap1\n      pop\n        /* \"#utility.yul\":3061:3427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3433:3852   */\n    tag_43:\n        /* \"#utility.yul\":3599:3603   */\n      0x00\n        /* \"#utility.yul\":3637:3639   */\n      0x20\n        /* \"#utility.yul\":3626:3635   */\n      dup3\n        /* \"#utility.yul\":3622:3640   */\n      add\n        /* \"#utility.yul\":3614:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3686:3695   */\n      dup2\n        /* \"#utility.yul\":3680:3684   */\n      dup2\n        /* \"#utility.yul\":3676:3696   */\n      sub\n        /* \"#utility.yul\":3672:3673   */\n      0x00\n        /* \"#utility.yul\":3661:3670   */\n      dup4\n        /* \"#utility.yul\":3657:3674   */\n      add\n        /* \"#utility.yul\":3650:3697   */\n      mstore\n        /* \"#utility.yul\":3714:3845   */\n      tag_230\n        /* \"#utility.yul\":3840:3844   */\n      dup2\n        /* \"#utility.yul\":3714:3845   */\n      tag_170\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3706:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3433:3852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3858:4190   */\n    tag_45:\n        /* \"#utility.yul\":3979:3983   */\n      0x00\n        /* \"#utility.yul\":4017:4019   */\n      0x40\n        /* \"#utility.yul\":4006:4015   */\n      dup3\n        /* \"#utility.yul\":4002:4020   */\n      add\n        /* \"#utility.yul\":3994:4020   */\n      swap1\n      pop\n        /* \"#utility.yul\":4030:4101   */\n      tag_232\n        /* \"#utility.yul\":4098:4099   */\n      0x00\n        /* \"#utility.yul\":4087:4096   */\n      dup4\n        /* \"#utility.yul\":4083:4100   */\n      add\n        /* \"#utility.yul\":4074:4080   */\n      dup6\n        /* \"#utility.yul\":4030:4101   */\n      tag_167\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4111:4183   */\n      tag_233\n        /* \"#utility.yul\":4179:4181   */\n      0x20\n        /* \"#utility.yul\":4168:4177   */\n      dup4\n        /* \"#utility.yul\":4164:4182   */\n      add\n        /* \"#utility.yul\":4155:4161   */\n      dup5\n        /* \"#utility.yul\":4111:4183   */\n      tag_162\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3858:4190   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4196:4286   */\n    tag_171:\n        /* \"#utility.yul\":4230:4237   */\n      0x00\n        /* \"#utility.yul\":4273:4278   */\n      dup2\n        /* \"#utility.yul\":4266:4279   */\n      iszero\n        /* \"#utility.yul\":4259:4280   */\n      iszero\n        /* \"#utility.yul\":4248:4280   */\n      swap1\n      pop\n        /* \"#utility.yul\":4196:4286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4292:4408   */\n    tag_172:\n        /* \"#utility.yul\":4362:4383   */\n      tag_236\n        /* \"#utility.yul\":4377:4382   */\n      dup2\n        /* \"#utility.yul\":4362:4383   */\n      tag_171\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4355:4360   */\n      dup2\n        /* \"#utility.yul\":4352:4384   */\n      eq\n        /* \"#utility.yul\":4342:4402   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":4398:4399   */\n      0x00\n        /* \"#utility.yul\":4395:4396   */\n      dup1\n        /* \"#utility.yul\":4388:4400   */\n      revert\n        /* \"#utility.yul\":4342:4402   */\n    tag_237:\n        /* \"#utility.yul\":4292:4408   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4414:4551   */\n    tag_173:\n        /* \"#utility.yul\":4468:4473   */\n      0x00\n        /* \"#utility.yul\":4499:4505   */\n      dup2\n        /* \"#utility.yul\":4493:4506   */\n      mload\n        /* \"#utility.yul\":4484:4506   */\n      swap1\n      pop\n        /* \"#utility.yul\":4515:4545   */\n      tag_239\n        /* \"#utility.yul\":4539:4544   */\n      dup2\n        /* \"#utility.yul\":4515:4545   */\n      tag_172\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4414:4551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4557:4902   */\n    tag_49:\n        /* \"#utility.yul\":4624:4630   */\n      0x00\n        /* \"#utility.yul\":4673:4675   */\n      0x20\n        /* \"#utility.yul\":4661:4670   */\n      dup3\n        /* \"#utility.yul\":4652:4659   */\n      dup5\n        /* \"#utility.yul\":4648:4671   */\n      sub\n        /* \"#utility.yul\":4644:4676   */\n      slt\n        /* \"#utility.yul\":4641:4760   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":4679:4758   */\n      tag_242\n      tag_157\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4641:4760   */\n    tag_241:\n        /* \"#utility.yul\":4799:4800   */\n      0x00\n        /* \"#utility.yul\":4824:4885   */\n      tag_243\n        /* \"#utility.yul\":4877:4884   */\n      dup5\n        /* \"#utility.yul\":4868:4874   */\n      dup3\n        /* \"#utility.yul\":4857:4866   */\n      dup6\n        /* \"#utility.yul\":4853:4875   */\n      add\n        /* \"#utility.yul\":4824:4885   */\n      tag_173\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4814:4885   */\n      swap2\n      pop\n        /* \"#utility.yul\":4770:4895   */\n      pop\n        /* \"#utility.yul\":4557:4902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4908:5240   */\n    tag_52:\n        /* \"#utility.yul\":5029:5033   */\n      0x00\n        /* \"#utility.yul\":5067:5069   */\n      0x40\n        /* \"#utility.yul\":5056:5065   */\n      dup3\n        /* \"#utility.yul\":5052:5070   */\n      add\n        /* \"#utility.yul\":5044:5070   */\n      swap1\n      pop\n        /* \"#utility.yul\":5080:5151   */\n      tag_245\n        /* \"#utility.yul\":5148:5149   */\n      0x00\n        /* \"#utility.yul\":5137:5146   */\n      dup4\n        /* \"#utility.yul\":5133:5150   */\n      add\n        /* \"#utility.yul\":5124:5130   */\n      dup6\n        /* \"#utility.yul\":5080:5151   */\n      tag_167\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5161:5233   */\n      tag_246\n        /* \"#utility.yul\":5229:5231   */\n      0x20\n        /* \"#utility.yul\":5218:5227   */\n      dup4\n        /* \"#utility.yul\":5214:5232   */\n      add\n        /* \"#utility.yul\":5205:5211   */\n      dup5\n        /* \"#utility.yul\":5161:5233   */\n      tag_167\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4908:5240   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5246:5389   */\n    tag_174:\n        /* \"#utility.yul\":5303:5308   */\n      0x00\n        /* \"#utility.yul\":5334:5340   */\n      dup2\n        /* \"#utility.yul\":5328:5341   */\n      mload\n        /* \"#utility.yul\":5319:5341   */\n      swap1\n      pop\n        /* \"#utility.yul\":5350:5383   */\n      tag_248\n        /* \"#utility.yul\":5377:5382   */\n      dup2\n        /* \"#utility.yul\":5350:5383   */\n      tag_160\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5246:5389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5746   */\n    tag_56:\n        /* \"#utility.yul\":5465:5471   */\n      0x00\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"#utility.yul\":5502:5511   */\n      dup3\n        /* \"#utility.yul\":5493:5500   */\n      dup5\n        /* \"#utility.yul\":5489:5512   */\n      sub\n        /* \"#utility.yul\":5485:5517   */\n      slt\n        /* \"#utility.yul\":5482:5601   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":5520:5599   */\n      tag_251\n      tag_157\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5482:5601   */\n    tag_250:\n        /* \"#utility.yul\":5640:5641   */\n      0x00\n        /* \"#utility.yul\":5665:5729   */\n      tag_252\n        /* \"#utility.yul\":5721:5728   */\n      dup5\n        /* \"#utility.yul\":5712:5718   */\n      dup3\n        /* \"#utility.yul\":5701:5710   */\n      dup6\n        /* \"#utility.yul\":5697:5719   */\n      add\n        /* \"#utility.yul\":5665:5729   */\n      tag_174\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5655:5729   */\n      swap2\n      pop\n        /* \"#utility.yul\":5611:5739   */\n      pop\n        /* \"#utility.yul\":5395:5746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5752:5923   */\n    tag_175:\n        /* \"#utility.yul\":5892:5915   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":5888:5889   */\n      0x00\n        /* \"#utility.yul\":5880:5886   */\n      dup3\n        /* \"#utility.yul\":5876:5890   */\n      add\n        /* \"#utility.yul\":5869:5916   */\n      mstore\n        /* \"#utility.yul\":5752:5923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5929:6295   */\n    tag_176:\n        /* \"#utility.yul\":6071:6074   */\n      0x00\n        /* \"#utility.yul\":6092:6159   */\n      tag_255\n        /* \"#utility.yul\":6156:6158   */\n      0x15\n        /* \"#utility.yul\":6151:6154   */\n      dup4\n        /* \"#utility.yul\":6092:6159   */\n      tag_168\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6085:6159   */\n      swap2\n      pop\n        /* \"#utility.yul\":6168:6261   */\n      tag_256\n        /* \"#utility.yul\":6257:6260   */\n      dup3\n        /* \"#utility.yul\":6168:6261   */\n      tag_175\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6286:6288   */\n      0x20\n        /* \"#utility.yul\":6281:6284   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      add\n        /* \"#utility.yul\":6270:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":5929:6295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6301:6720   */\n    tag_59:\n        /* \"#utility.yul\":6467:6471   */\n      0x00\n        /* \"#utility.yul\":6505:6507   */\n      0x20\n        /* \"#utility.yul\":6494:6503   */\n      dup3\n        /* \"#utility.yul\":6490:6508   */\n      add\n        /* \"#utility.yul\":6482:6508   */\n      swap1\n      pop\n        /* \"#utility.yul\":6554:6563   */\n      dup2\n        /* \"#utility.yul\":6548:6552   */\n      dup2\n        /* \"#utility.yul\":6544:6564   */\n      sub\n        /* \"#utility.yul\":6540:6541   */\n      0x00\n        /* \"#utility.yul\":6529:6538   */\n      dup4\n        /* \"#utility.yul\":6525:6542   */\n      add\n        /* \"#utility.yul\":6518:6565   */\n      mstore\n        /* \"#utility.yul\":6582:6713   */\n      tag_258\n        /* \"#utility.yul\":6708:6712   */\n      dup2\n        /* \"#utility.yul\":6582:6713   */\n      tag_176\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6574:6713   */\n      swap1\n      pop\n        /* \"#utility.yul\":6301:6720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6726:7168   */\n    tag_61:\n        /* \"#utility.yul\":6875:6879   */\n      0x00\n        /* \"#utility.yul\":6913:6915   */\n      0x60\n        /* \"#utility.yul\":6902:6911   */\n      dup3\n        /* \"#utility.yul\":6898:6916   */\n      add\n        /* \"#utility.yul\":6890:6916   */\n      swap1\n      pop\n        /* \"#utility.yul\":6926:6997   */\n      tag_260\n        /* \"#utility.yul\":6994:6995   */\n      0x00\n        /* \"#utility.yul\":6983:6992   */\n      dup4\n        /* \"#utility.yul\":6979:6996   */\n      add\n        /* \"#utility.yul\":6970:6976   */\n      dup7\n        /* \"#utility.yul\":6926:6997   */\n      tag_167\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7007:7079   */\n      tag_261\n        /* \"#utility.yul\":7075:7077   */\n      0x20\n        /* \"#utility.yul\":7064:7073   */\n      dup4\n        /* \"#utility.yul\":7060:7078   */\n      add\n        /* \"#utility.yul\":7051:7057   */\n      dup6\n        /* \"#utility.yul\":7007:7079   */\n      tag_167\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7089:7161   */\n      tag_262\n        /* \"#utility.yul\":7157:7159   */\n      0x40\n        /* \"#utility.yul\":7146:7155   */\n      dup4\n        /* \"#utility.yul\":7142:7160   */\n      add\n        /* \"#utility.yul\":7133:7139   */\n      dup5\n        /* \"#utility.yul\":7089:7161   */\n      tag_162\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6726:7168   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7174:7321   */\n    tag_177:\n        /* \"#utility.yul\":7275:7286   */\n      0x00\n        /* \"#utility.yul\":7312:7315   */\n      dup2\n        /* \"#utility.yul\":7297:7315   */\n      swap1\n      pop\n        /* \"#utility.yul\":7174:7321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7441   */\n    tag_178:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7447:7845   */\n    tag_179:\n        /* \"#utility.yul\":7606:7609   */\n      0x00\n        /* \"#utility.yul\":7627:7710   */\n      tag_266\n        /* \"#utility.yul\":7708:7709   */\n      0x00\n        /* \"#utility.yul\":7703:7706   */\n      dup4\n        /* \"#utility.yul\":7627:7710   */\n      tag_177\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7620:7710   */\n      swap2\n      pop\n        /* \"#utility.yul\":7719:7812   */\n      tag_267\n        /* \"#utility.yul\":7808:7811   */\n      dup3\n        /* \"#utility.yul\":7719:7812   */\n      tag_178\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7837:7838   */\n      0x00\n        /* \"#utility.yul\":7832:7835   */\n      dup3\n        /* \"#utility.yul\":7828:7839   */\n      add\n        /* \"#utility.yul\":7821:7839   */\n      swap1\n      pop\n        /* \"#utility.yul\":7447:7845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7851:8230   */\n    tag_66:\n        /* \"#utility.yul\":8035:8038   */\n      0x00\n        /* \"#utility.yul\":8057:8204   */\n      tag_269\n        /* \"#utility.yul\":8200:8203   */\n      dup3\n        /* \"#utility.yul\":8057:8204   */\n      tag_179\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8050:8204   */\n      swap2\n      pop\n        /* \"#utility.yul\":8221:8224   */\n      dup2\n        /* \"#utility.yul\":8214:8224   */\n      swap1\n      pop\n        /* \"#utility.yul\":7851:8230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8236:8401   */\n    tag_180:\n        /* \"#utility.yul\":8376:8393   */\n      0x5472616e73666572204661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":8372:8373   */\n      0x00\n        /* \"#utility.yul\":8364:8370   */\n      dup3\n        /* \"#utility.yul\":8360:8374   */\n      add\n        /* \"#utility.yul\":8353:8394   */\n      mstore\n        /* \"#utility.yul\":8236:8401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8407:8773   */\n    tag_181:\n        /* \"#utility.yul\":8549:8552   */\n      0x00\n        /* \"#utility.yul\":8570:8637   */\n      tag_272\n        /* \"#utility.yul\":8634:8636   */\n      0x0f\n        /* \"#utility.yul\":8629:8632   */\n      dup4\n        /* \"#utility.yul\":8570:8637   */\n      tag_168\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8563:8637   */\n      swap2\n      pop\n        /* \"#utility.yul\":8646:8739   */\n      tag_273\n        /* \"#utility.yul\":8735:8738   */\n      dup3\n        /* \"#utility.yul\":8646:8739   */\n      tag_180\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8764:8766   */\n      0x20\n        /* \"#utility.yul\":8759:8762   */\n      dup3\n        /* \"#utility.yul\":8755:8767   */\n      add\n        /* \"#utility.yul\":8748:8767   */\n      swap1\n      pop\n        /* \"#utility.yul\":8407:8773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8779:9198   */\n    tag_72:\n        /* \"#utility.yul\":8945:8949   */\n      0x00\n        /* \"#utility.yul\":8983:8985   */\n      0x20\n        /* \"#utility.yul\":8972:8981   */\n      dup3\n        /* \"#utility.yul\":8968:8986   */\n      add\n        /* \"#utility.yul\":8960:8986   */\n      swap1\n      pop\n        /* \"#utility.yul\":9032:9041   */\n      dup2\n        /* \"#utility.yul\":9026:9030   */\n      dup2\n        /* \"#utility.yul\":9022:9042   */\n      sub\n        /* \"#utility.yul\":9018:9019   */\n      0x00\n        /* \"#utility.yul\":9007:9016   */\n      dup4\n        /* \"#utility.yul\":9003:9020   */\n      add\n        /* \"#utility.yul\":8996:9043   */\n      mstore\n        /* \"#utility.yul\":9060:9191   */\n      tag_275\n        /* \"#utility.yul\":9186:9190   */\n      dup2\n        /* \"#utility.yul\":9060:9191   */\n      tag_181\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":9052:9191   */\n      swap1\n      pop\n        /* \"#utility.yul\":8779:9198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9384   */\n    tag_182:\n        /* \"#utility.yul\":9252:9329   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9249:9250   */\n      0x00\n        /* \"#utility.yul\":9242:9330   */\n      mstore\n        /* \"#utility.yul\":9349:9353   */\n      0x11\n        /* \"#utility.yul\":9346:9347   */\n      0x04\n        /* \"#utility.yul\":9339:9354   */\n      mstore\n        /* \"#utility.yul\":9373:9377   */\n      0x24\n        /* \"#utility.yul\":9370:9371   */\n      0x00\n        /* \"#utility.yul\":9363:9378   */\n      revert\n        /* \"#utility.yul\":9390:9800   */\n    tag_89:\n        /* \"#utility.yul\":9430:9437   */\n      0x00\n        /* \"#utility.yul\":9453:9473   */\n      tag_278\n        /* \"#utility.yul\":9471:9472   */\n      dup3\n        /* \"#utility.yul\":9453:9473   */\n      tag_159\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9448:9473   */\n      swap2\n      pop\n        /* \"#utility.yul\":9487:9507   */\n      tag_279\n        /* \"#utility.yul\":9505:9506   */\n      dup4\n        /* \"#utility.yul\":9487:9507   */\n      tag_159\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9482:9507   */\n      swap3\n      pop\n        /* \"#utility.yul\":9542:9543   */\n      dup3\n        /* \"#utility.yul\":9539:9540   */\n      dup3\n        /* \"#utility.yul\":9535:9544   */\n      mul\n        /* \"#utility.yul\":9564:9594   */\n      tag_280\n        /* \"#utility.yul\":9582:9593   */\n      dup2\n        /* \"#utility.yul\":9564:9594   */\n      tag_159\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9553:9594   */\n      swap2\n      pop\n        /* \"#utility.yul\":9743:9744   */\n      dup3\n        /* \"#utility.yul\":9734:9741   */\n      dup3\n        /* \"#utility.yul\":9730:9745   */\n      div\n        /* \"#utility.yul\":9727:9728   */\n      dup5\n        /* \"#utility.yul\":9724:9746   */\n      eq\n        /* \"#utility.yul\":9704:9705   */\n      dup4\n        /* \"#utility.yul\":9697:9706   */\n      iszero\n        /* \"#utility.yul\":9677:9760   */\n      or\n        /* \"#utility.yul\":9654:9793   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":9773:9791   */\n      tag_282\n      tag_182\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9654:9793   */\n    tag_281:\n        /* \"#utility.yul\":9438:9800   */\n      pop\n        /* \"#utility.yul\":9390:9800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9806:9986   */\n    tag_136:\n        /* \"#utility.yul\":9854:9931   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9851:9852   */\n      0x00\n        /* \"#utility.yul\":9844:9932   */\n      mstore\n        /* \"#utility.yul\":9951:9955   */\n      0x12\n        /* \"#utility.yul\":9948:9949   */\n      0x04\n        /* \"#utility.yul\":9941:9956   */\n      mstore\n        /* \"#utility.yul\":9975:9979   */\n      0x24\n        /* \"#utility.yul\":9972:9973   */\n      0x00\n        /* \"#utility.yul\":9965:9980   */\n      revert\n        /* \"#utility.yul\":9992:10177   */\n    tag_92:\n        /* \"#utility.yul\":10032:10033   */\n      0x00\n        /* \"#utility.yul\":10049:10069   */\n      tag_285\n        /* \"#utility.yul\":10067:10068   */\n      dup3\n        /* \"#utility.yul\":10049:10069   */\n      tag_159\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10044:10069   */\n      swap2\n      pop\n        /* \"#utility.yul\":10083:10103   */\n      tag_286\n        /* \"#utility.yul\":10101:10102   */\n      dup4\n        /* \"#utility.yul\":10083:10103   */\n      tag_159\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":10078:10103   */\n      swap3\n      pop\n        /* \"#utility.yul\":10122:10123   */\n      dup3\n        /* \"#utility.yul\":10112:10147   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":10127:10145   */\n      tag_288\n      tag_136\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":10112:10147   */\n    tag_287:\n        /* \"#utility.yul\":10169:10170   */\n      dup3\n        /* \"#utility.yul\":10166:10167   */\n      dup3\n        /* \"#utility.yul\":10162:10171   */\n      div\n        /* \"#utility.yul\":10157:10171   */\n      swap1\n      pop\n        /* \"#utility.yul\":9992:10177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10183:10357   */\n    tag_183:\n        /* \"#utility.yul\":10323:10349   */\n      0x496e76616c696420616d6f756e74206f66207368617265730000000000000000\n        /* \"#utility.yul\":10319:10320   */\n      0x00\n        /* \"#utility.yul\":10311:10317   */\n      dup3\n        /* \"#utility.yul\":10307:10321   */\n      add\n        /* \"#utility.yul\":10300:10350   */\n      mstore\n        /* \"#utility.yul\":10183:10357   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10363:10729   */\n    tag_184:\n        /* \"#utility.yul\":10505:10508   */\n      0x00\n        /* \"#utility.yul\":10526:10593   */\n      tag_291\n        /* \"#utility.yul\":10590:10592   */\n      0x18\n        /* \"#utility.yul\":10585:10588   */\n      dup4\n        /* \"#utility.yul\":10526:10593   */\n      tag_168\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10519:10593   */\n      swap2\n      pop\n        /* \"#utility.yul\":10602:10695   */\n      tag_292\n        /* \"#utility.yul\":10691:10694   */\n      dup3\n        /* \"#utility.yul\":10602:10695   */\n      tag_183\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10720:10722   */\n      0x20\n        /* \"#utility.yul\":10715:10718   */\n      dup3\n        /* \"#utility.yul\":10711:10723   */\n      add\n        /* \"#utility.yul\":10704:10723   */\n      swap1\n      pop\n        /* \"#utility.yul\":10363:10729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10735:11154   */\n    tag_102:\n        /* \"#utility.yul\":10901:10905   */\n      0x00\n        /* \"#utility.yul\":10939:10941   */\n      0x20\n        /* \"#utility.yul\":10928:10937   */\n      dup3\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"#utility.yul\":10916:10942   */\n      swap1\n      pop\n        /* \"#utility.yul\":10988:10997   */\n      dup2\n        /* \"#utility.yul\":10982:10986   */\n      dup2\n        /* \"#utility.yul\":10978:10998   */\n      sub\n        /* \"#utility.yul\":10974:10975   */\n      0x00\n        /* \"#utility.yul\":10963:10972   */\n      dup4\n        /* \"#utility.yul\":10959:10976   */\n      add\n        /* \"#utility.yul\":10952:10999   */\n      mstore\n        /* \"#utility.yul\":11016:11147   */\n      tag_294\n        /* \"#utility.yul\":11142:11146   */\n      dup2\n        /* \"#utility.yul\":11016:11147   */\n      tag_184\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11008:11147   */\n      swap1\n      pop\n        /* \"#utility.yul\":10735:11154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11160:11449   */\n    tag_185:\n        /* \"#utility.yul\":11300:11334   */\n      0x506c6561736520617070726f76652074686520636f6e747261637420746f2064\n        /* \"#utility.yul\":11296:11297   */\n      0x00\n        /* \"#utility.yul\":11288:11294   */\n      dup3\n        /* \"#utility.yul\":11284:11298   */\n      add\n        /* \"#utility.yul\":11277:11335   */\n      mstore\n        /* \"#utility.yul\":11369:11403   */\n      0x6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c65\n        /* \"#utility.yul\":11364:11366   */\n      0x20\n        /* \"#utility.yul\":11356:11362   */\n      dup3\n        /* \"#utility.yul\":11352:11367   */\n      add\n        /* \"#utility.yul\":11345:11404   */\n      mstore\n        /* \"#utility.yul\":11438:11441   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11433:11435   */\n      0x40\n        /* \"#utility.yul\":11425:11431   */\n      dup3\n        /* \"#utility.yul\":11421:11436   */\n      add\n        /* \"#utility.yul\":11414:11442   */\n      mstore\n        /* \"#utility.yul\":11160:11449   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11455:11821   */\n    tag_186:\n        /* \"#utility.yul\":11597:11600   */\n      0x00\n        /* \"#utility.yul\":11618:11685   */\n      tag_297\n        /* \"#utility.yul\":11682:11684   */\n      0x41\n        /* \"#utility.yul\":11677:11680   */\n      dup4\n        /* \"#utility.yul\":11618:11685   */\n      tag_168\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":11611:11685   */\n      swap2\n      pop\n        /* \"#utility.yul\":11694:11787   */\n      tag_298\n        /* \"#utility.yul\":11783:11786   */\n      dup3\n        /* \"#utility.yul\":11694:11787   */\n      tag_185\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":11812:11814   */\n      0x60\n        /* \"#utility.yul\":11807:11810   */\n      dup3\n        /* \"#utility.yul\":11803:11815   */\n      add\n        /* \"#utility.yul\":11796:11815   */\n      swap1\n      pop\n        /* \"#utility.yul\":11455:11821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11827:12246   */\n    tag_109:\n        /* \"#utility.yul\":11993:11997   */\n      0x00\n        /* \"#utility.yul\":12031:12033   */\n      0x20\n        /* \"#utility.yul\":12020:12029   */\n      dup3\n        /* \"#utility.yul\":12016:12034   */\n      add\n        /* \"#utility.yul\":12008:12034   */\n      swap1\n      pop\n        /* \"#utility.yul\":12080:12089   */\n      dup2\n        /* \"#utility.yul\":12074:12078   */\n      dup2\n        /* \"#utility.yul\":12070:12090   */\n      sub\n        /* \"#utility.yul\":12066:12067   */\n      0x00\n        /* \"#utility.yul\":12055:12064   */\n      dup4\n        /* \"#utility.yul\":12051:12068   */\n      add\n        /* \"#utility.yul\":12044:12091   */\n      mstore\n        /* \"#utility.yul\":12108:12239   */\n      tag_300\n        /* \"#utility.yul\":12234:12238   */\n      dup2\n        /* \"#utility.yul\":12108:12239   */\n      tag_186\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12100:12239   */\n      swap1\n      pop\n        /* \"#utility.yul\":11827:12246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12252:12417   */\n    tag_187:\n        /* \"#utility.yul\":12392:12409   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":12388:12389   */\n      0x00\n        /* \"#utility.yul\":12380:12386   */\n      dup3\n        /* \"#utility.yul\":12376:12390   */\n      add\n        /* \"#utility.yul\":12369:12410   */\n      mstore\n        /* \"#utility.yul\":12252:12417   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12423:12789   */\n    tag_188:\n        /* \"#utility.yul\":12565:12568   */\n      0x00\n        /* \"#utility.yul\":12586:12653   */\n      tag_303\n        /* \"#utility.yul\":12650:12652   */\n      0x0f\n        /* \"#utility.yul\":12645:12648   */\n      dup4\n        /* \"#utility.yul\":12586:12653   */\n      tag_168\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":12579:12653   */\n      swap2\n      pop\n        /* \"#utility.yul\":12662:12755   */\n      tag_304\n        /* \"#utility.yul\":12751:12754   */\n      dup3\n        /* \"#utility.yul\":12662:12755   */\n      tag_187\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":12780:12782   */\n      0x20\n        /* \"#utility.yul\":12775:12778   */\n      dup3\n        /* \"#utility.yul\":12771:12783   */\n      add\n        /* \"#utility.yul\":12764:12783   */\n      swap1\n      pop\n        /* \"#utility.yul\":12423:12789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12795:13214   */\n    tag_124:\n        /* \"#utility.yul\":12961:12965   */\n      0x00\n        /* \"#utility.yul\":12999:13001   */\n      0x20\n        /* \"#utility.yul\":12988:12997   */\n      dup3\n        /* \"#utility.yul\":12984:13002   */\n      add\n        /* \"#utility.yul\":12976:13002   */\n      swap1\n      pop\n        /* \"#utility.yul\":13048:13057   */\n      dup2\n        /* \"#utility.yul\":13042:13046   */\n      dup2\n        /* \"#utility.yul\":13038:13058   */\n      sub\n        /* \"#utility.yul\":13034:13035   */\n      0x00\n        /* \"#utility.yul\":13023:13032   */\n      dup4\n        /* \"#utility.yul\":13019:13036   */\n      add\n        /* \"#utility.yul\":13012:13059   */\n      mstore\n        /* \"#utility.yul\":13076:13207   */\n      tag_306\n        /* \"#utility.yul\":13202:13206   */\n      dup2\n        /* \"#utility.yul\":13076:13207   */\n      tag_188\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13068:13207   */\n      swap1\n      pop\n        /* \"#utility.yul\":12795:13214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201d1d22067405ca671b0937af208797f271ddc3727bdd349cc091b381597b13c364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_602": {
									"entryPoint": null,
									"id": 602,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001440380380620014408339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b611316806200012a6000396000f3fe6080604052600436106100705760003560e01c8063bec3fa171161004e578063bec3fa17146100e5578063eb521a4c1461010e578063f4325d671461012a578063ff9b37581461015557610070565b80631aa5c70e146100755780637464fc3d146100915780638e3073a6146100bc575b600080fd5b61008f600480360381019061008a9190610c95565b61017e565b005b34801561009d57600080fd5b506100a6610262565b6040516100b39190610cd1565b60405180910390f35b3480156100c857600080fd5b506100e360048036038101906100de9190610c95565b610268565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610d4a565b610497565b005b61012860048036038101906101239190610c95565b61052e565b005b34801561013657600080fd5b5061013f610777565b60405161014c9190610d99565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610c95565b61079b565b005b8034146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610e11565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161021b929190610e31565b6020604051808303816000875af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610e92565b5050565b60015481565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102c4929190610ebf565b602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610efd565b1015610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d90610f76565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103a393929190610f96565b6020604051808303816000875af11580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e69190610e92565b5060003373ffffffffffffffffffffffffffffffffffffffff168260405161040d90610ffe565b60006040518083038185875af1925050503d806000811461044a576040519150601f19603f3d011682016040523d82523d6000602084013e61044f565b606091505b5050905080610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a9061105f565b60405180910390fd5b5050565b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016104e6929190610e31565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190610e92565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161058b93929190610f96565b6020604051808303816000875af11580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190610e92565b506000600154036106855760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106329190610d99565b602060405180830381865afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610efd565b4761067e91906110ae565b6001819055505b60006106a5670de0b6b3a76400006001546106a0919061111f565b610a94565b90507339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106f6929190610e31565b6020604051808303816000875af1158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190610e92565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6338360405161076b929190610e31565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081116107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d59061119c565b60405180910390fd5b807339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161082e929190610ebf565b602060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086f9190610efd565b10156108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611254565b60405180910390fd5b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161090193929190610f96565b6020604051808303816000875af1158015610920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109449190610e92565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109a0929190610e31565b6020604051808303816000875af11580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e39190610e92565b5060003373ffffffffffffffffffffffffffffffffffffffff1682604051610a0a90610ffe565b60006040518083038185875af1925050503d8060008114610a47576040519150601f19603f3d011682016040523d82523d6000602084013e610a4c565b606091505b5050905080610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906112c0565b60405180910390fd5b5050565b6000808203610aa65760009050610c3c565b60006001905060008390506000608082901c1115610acd57608081901c9050604082901b91505b6000604082901c1115610ae957604081901c9050602082901b91505b6000602082901c1115610b0557602081901c9050601082901b91505b6000601082901c1115610b2157601081901c9050600882901b91505b6000600882901c1115610b3d57600881901c9050600482901b91505b6000600482901c1115610b5957600481901c9050600282901b91505b6000600282901c1115610b6e57600182901b91505b6001828581610b8057610b7f6110f0565b5b048301901c91506001828581610b9957610b986110f0565b5b048301901c91506001828581610bb257610bb16110f0565b5b048301901c91506001828581610bcb57610bca6110f0565b5b048301901c91506001828581610be457610be36110f0565b5b048301901c91506001828581610bfd57610bfc6110f0565b5b048301901c91506001828581610c1657610c156110f0565b5b048301901c9150610c3782838681610c3157610c306110f0565b5b04610c41565b925050505b919050565b6000818310610c505781610c52565b825b905092915050565b600080fd5b6000819050919050565b610c7281610c5f565b8114610c7d57600080fd5b50565b600081359050610c8f81610c69565b92915050565b600060208284031215610cab57610caa610c5a565b5b6000610cb984828501610c80565b91505092915050565b610ccb81610c5f565b82525050565b6000602082019050610ce66000830184610cc2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1782610cec565b9050919050565b610d2781610d0c565b8114610d3257600080fd5b50565b600081359050610d4481610d1e565b92915050565b60008060408385031215610d6157610d60610c5a565b5b6000610d6f85828601610d35565b9250506020610d8085828601610c80565b9150509250929050565b610d9381610d0c565b82525050565b6000602082019050610dae6000830184610d8a565b92915050565b600082825260208201905092915050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000610dfb600e83610db4565b9150610e0682610dc5565b602082019050919050565b60006020820190508181036000830152610e2a81610dee565b9050919050565b6000604082019050610e466000830185610d8a565b610e536020830184610cc2565b9392505050565b60008115159050919050565b610e6f81610e5a565b8114610e7a57600080fd5b50565b600081519050610e8c81610e66565b92915050565b600060208284031215610ea857610ea7610c5a565b5b6000610eb684828501610e7d565b91505092915050565b6000604082019050610ed46000830185610d8a565b610ee16020830184610d8a565b9392505050565b600081519050610ef781610c69565b92915050565b600060208284031215610f1357610f12610c5a565b5b6000610f2184828501610ee8565b91505092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6000610f60601583610db4565b9150610f6b82610f2a565b602082019050919050565b60006020820190508181036000830152610f8f81610f53565b9050919050565b6000606082019050610fab6000830186610d8a565b610fb86020830185610d8a565b610fc56040830184610cc2565b949350505050565b600081905092915050565b50565b6000610fe8600083610fcd565b9150610ff382610fd8565b600082019050919050565b600061100982610fdb565b9150819050919050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b6000611049600f83610db4565b915061105482611013565b602082019050919050565b600060208201905081810360008301526110788161103c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110b982610c5f565b91506110c483610c5f565b92508282026110d281610c5f565b915082820484148315176110e9576110e861107f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061112a82610c5f565b915061113583610c5f565b925082611145576111446110f0565b5b828204905092915050565b7f496e76616c696420616d6f756e74206f66207368617265730000000000000000600082015250565b6000611186601883610db4565b915061119182611150565b602082019050919050565b600060208201905081810360008301526111b581611179565b9050919050565b7f506c6561736520617070726f76652074686520636f6e747261637420746f206460008201527f6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6560208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b600061123e604183610db4565b9150611249826111bc565b606082019050919050565b6000602082019050818103600083015261126d81611231565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006112aa600f83610db4565b91506112b582611274565b602082019050919050565b600060208201905081810360008301526112d98161129d565b905091905056fea26469706673582212201d1d22067405ca671b0937af208797f271ddc3727bdd349cc091b381597b13c364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1440 CODESIZE SUB DUP1 PUSH3 0x1440 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB0 DUP3 PUSH3 0x83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0xA3 JUMP JUMPDEST DUP2 EQ PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE2 DUP2 PUSH3 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x111 DUP5 DUP3 DUP6 ADD PUSH3 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1316 DUP1 PUSH3 0x12A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEC3FA17 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xFF9B3758 EQ PUSH2 0x155 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x1AA5C70E EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8E3073A6 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST STOP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x40D SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48A SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST SELFBALANCE PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH2 0x6A5 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH2 0xA94 JUMP JUMPDEST SWAP1 POP PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x715 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x739 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST LT ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA0A SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xAA6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xACD JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB05 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB3D JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB6E JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xB80 JUMPI PUSH2 0xB7F PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xB99 JUMPI PUSH2 0xB98 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBB2 JUMPI PUSH2 0xBB1 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBE4 JUMPI PUSH2 0xBE3 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xC16 JUMPI PUSH2 0xC15 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xC37 DUP3 DUP4 DUP7 DUP2 PUSH2 0xC31 JUMPI PUSH2 0xC30 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV PUSH2 0xC41 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xC50 JUMPI DUP2 PUSH2 0xC52 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8F DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB9 DUP5 DUP3 DUP6 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD17 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP2 EQ PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0xD1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6F DUP6 DUP3 DUP7 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD80 DUP6 DUP3 DUP7 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFB PUSH1 0xE DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE06 DUP3 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE2A DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE46 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xE53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6F DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP2 EQ PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE8C DUP2 PUSH2 0xE66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB6 DUP5 DUP3 DUP6 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xED4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xEE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEF7 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF21 DUP5 DUP3 DUP6 ADD PUSH2 0xEE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 PUSH1 0x15 DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B DUP3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8F DUP2 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xFB8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xFC5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE8 PUSH1 0x0 DUP4 PUSH2 0xFCD JUMP JUMPDEST SWAP2 POP PUSH2 0xFF3 DUP3 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP3 PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1049 PUSH1 0xF DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1054 DUP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1078 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10B9 DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH2 0x10C4 DUP4 PUSH2 0xC5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x10D2 DUP2 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10E9 JUMPI PUSH2 0x10E8 PUSH2 0x107F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x112A DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH2 0x1135 DUP4 PUSH2 0xC5F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74206F66207368617265730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1186 PUSH1 0x18 DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1191 DUP3 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B5 DUP2 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520617070726F76652074686520636F6E747261637420746F2064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E PUSH1 0x41 DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1249 DUP3 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126D DUP2 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AA PUSH1 0xF DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12B5 DUP3 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D9 DUP2 PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR SAR 0x22 MOD PUSH21 0x5CA671B0937AF208797F271DDC3727BDD349CC091 0xB3 DUP2 MSIZE PUSH28 0x13C364736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "310:2315:2:-:0;;;596:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;655:13;640:12;;:28;;;;;;;;;;;;;;;;;;596:79;310:2315;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;310:2315:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getDAI_824": {
									"entryPoint": 382,
									"id": 824,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getEth_801": {
									"entryPoint": 616,
									"id": 801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@kLast_592": {
									"entryPoint": 610,
									"id": 592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_42": {
									"entryPoint": 3137,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@provideLiquidity_677": {
									"entryPoint": 1326,
									"id": 677,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reedemShares_747": {
									"entryPoint": 1947,
									"id": 747,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reserveToken_587": {
									"entryPoint": 1911,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_466": {
									"entryPoint": 2708,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferTokens_840": {
									"entryPoint": 1175,
									"id": 840,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 3882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b": {
									"entryPoint": 4540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13217:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:32:3"
															},
															"nodeType": "YulIf",
															"src": "1977:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2106:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2150:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2233:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1929:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1940:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1952:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1960:6:3",
														"type": ""
													}
												],
												"src": "1884:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2429:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2417:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2424:3:3",
														"type": ""
													}
												],
												"src": "2364:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2581:4:3",
														"type": ""
													}
												],
												"src": "2488:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2829:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2834:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2850:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2869:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2874:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2850:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2784:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2789:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2800:11:3",
														"type": ""
													}
												],
												"src": "2716:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2997:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:14:3"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3031:16:3",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2989:6:3",
														"type": ""
													}
												],
												"src": "2891:164:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3217:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3283:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3288:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3224:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3217:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3389:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "3300:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3300:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3402:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3413:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3418:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:3",
														"type": ""
													}
												],
												"src": "3061:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3604:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3614:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3626:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3614:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3661:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3672:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3657:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3680:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3676:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3676:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3650:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3650:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3706:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3840:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3706:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3584:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3599:4:3",
														"type": ""
													}
												],
												"src": "3433:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3984:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3994:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4006:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4017:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4002:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3994:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4074:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4087:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4098:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4083:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4030:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4030:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4030:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4155:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4168:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4179:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4164:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4111:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4111:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3948:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3960:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3968:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3979:4:3",
														"type": ""
													}
												],
												"src": "3858:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4238:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4248:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4273:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4266:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4266:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4259:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4248:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4220:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4230:7:3",
														"type": ""
													}
												],
												"src": "4196:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4332:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4395:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4398:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4355:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4377:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4362:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4362:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4352:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4352:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4345:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4345:40:3"
															},
															"nodeType": "YulIf",
															"src": "4342:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4325:5:3",
														"type": ""
													}
												],
												"src": "4292:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4474:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4484:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4499:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4493:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4484:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4515:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4515:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4515:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4452:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4460:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4468:5:3",
														"type": ""
													}
												],
												"src": "4414:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4631:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4677:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4679:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4679:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4679:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4652:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4661:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4648:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4648:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4673:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4644:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4644:32:3"
															},
															"nodeType": "YulIf",
															"src": "4641:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4770:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4785:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4799:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4789:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4814:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4857:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4868:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4853:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4853:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4877:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4824:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4824:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4814:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4601:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4612:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4624:6:3",
														"type": ""
													}
												],
												"src": "4557:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5034:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5044:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5056:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5067:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5052:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5044:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5124:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5137:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5148:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5133:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5133:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5080:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5080:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5205:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5218:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5229:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5214:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5214:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5161:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5161:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5161:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4998:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5010:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5018:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5029:4:3",
														"type": ""
													}
												],
												"src": "4908:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5309:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5319:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5334:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5328:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5328:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5319:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5377:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5350:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5350:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5350:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5287:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5295:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5303:5:3",
														"type": ""
													}
												],
												"src": "5246:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5518:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5520:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5520:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5520:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5493:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5502:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5489:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5489:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5485:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:32:3"
															},
															"nodeType": "YulIf",
															"src": "5482:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5611:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5626:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5640:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5630:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5655:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5701:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5712:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5697:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5697:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5721:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5665:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5665:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5655:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5442:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5453:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5465:6:3",
														"type": ""
													}
												],
												"src": "5395:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5858:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5880:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5888:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5876:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5876:14:3"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5892:23:3",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5869:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5850:6:3",
														"type": ""
													}
												],
												"src": "5752:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6085:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6151:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6156:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6092:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6092:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6085:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6257:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nodeType": "YulIdentifier",
																	"src": "6168:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6168:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6168:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6270:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6281:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6286:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6270:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6063:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6071:3:3",
														"type": ""
													}
												],
												"src": "5929:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6472:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6482:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6494:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6505:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6490:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6482:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6529:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6540:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6525:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6525:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6548:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6554:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6544:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6544:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6518:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6518:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6518:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6574:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6708:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6582:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6574:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6452:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6467:4:3",
														"type": ""
													}
												],
												"src": "6301:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6880:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6890:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6902:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6898:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6898:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6890:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6970:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6983:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6994:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6979:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6979:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6926:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6926:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6926:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7051:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7064:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7075:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7060:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7007:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7007:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7007:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7133:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7146:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7142:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7089:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7089:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7089:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6836:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6848:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6856:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6864:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6875:4:3",
														"type": ""
													}
												],
												"src": "6726:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7287:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7297:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7312:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7297:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7259:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7264:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7275:11:3",
														"type": ""
													}
												],
												"src": "7174:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7433:8:3",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7425:6:3",
														"type": ""
													}
												],
												"src": "7327:114:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7610:235:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7620:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7703:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7708:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7627:75:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7627:83:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7620:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7808:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "7719:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7719:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7719:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7821:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7832:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7828:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7821:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7598:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7606:3:3",
														"type": ""
													}
												],
												"src": "7447:398:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8039:191:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8050:154:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8200:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8057:141:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8057:147:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8214:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8221:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8214:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8026:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8035:3:3",
														"type": ""
													}
												],
												"src": "7851:379:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8342:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8364:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8372:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8360:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8360:14:3"
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8376:17:3",
																		"type": "",
																		"value": "Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8353:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8353:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8353:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8334:6:3",
														"type": ""
													}
												],
												"src": "8236:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8553:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8563:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8629:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8634:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8570:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8563:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8735:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																	"nodeType": "YulIdentifier",
																	"src": "8646:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8748:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8759:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8764:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8755:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8755:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8541:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8549:3:3",
														"type": ""
													}
												],
												"src": "8407:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8950:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8960:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8972:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8983:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8968:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8960:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9007:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9018:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9003:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9003:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9026:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9032:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9022:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9022:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8996:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8996:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8996:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9052:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9186:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9060:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9060:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9052:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8930:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8945:4:3",
														"type": ""
													}
												],
												"src": "8779:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9232:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9249:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9252:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9242:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9242:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9346:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9349:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9339:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9339:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9339:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9370:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9373:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9363:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9363:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9363:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9204:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9438:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9448:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9471:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9453:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9453:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9448:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9482:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9505:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9487:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9487:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9482:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9516:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9542:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9535:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9535:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9520:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9553:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9582:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9564:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9564:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9553:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9771:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9773:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9773:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9773:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9704:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9697:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9697:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9727:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9734:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9743:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9730:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9730:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9724:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9724:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9677:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9677:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9657:113:3"
															},
															"nodeType": "YulIf",
															"src": "9654:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9421:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9424:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9430:7:3",
														"type": ""
													}
												],
												"src": "9390:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9834:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9851:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9854:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9844:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9844:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9948:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9951:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9941:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9941:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9941:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9972:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9975:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9965:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9965:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9965:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9806:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10034:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10044:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10067:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10049:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10044:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10078:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10101:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10083:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10083:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10078:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10125:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10127:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10127:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10127:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10122:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10115:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10115:9:3"
															},
															"nodeType": "YulIf",
															"src": "10112:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10157:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10166:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10169:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10162:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10162:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10157:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10023:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10026:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10032:1:3",
														"type": ""
													}
												],
												"src": "9992:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10289:68:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10311:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10319:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:14:3"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74206f6620736861726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10323:26:3",
																		"type": "",
																		"value": "Invalid amount of shares"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:50:3"
														}
													]
												},
												"name": "store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10281:6:3",
														"type": ""
													}
												],
												"src": "10183:174:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10509:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10519:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10585:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10590:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10526:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10526:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10519:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10691:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																	"nodeType": "YulIdentifier",
																	"src": "10602:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10602:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10602:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10704:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10715:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10720:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10711:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10711:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10704:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10497:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10505:3:3",
														"type": ""
													}
												],
												"src": "10363:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10906:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10916:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10928:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10939:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10924:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10924:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10916:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10963:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10974:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10959:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10959:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10982:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10988:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10978:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10978:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10952:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10952:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11008:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11142:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11016:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11016:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11008:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10886:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10901:4:3",
														"type": ""
													}
												],
												"src": "10735:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11266:183:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11288:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11296:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11284:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11284:14:3"
																	},
																	{
																		"hexValue": "506c6561736520617070726f76652074686520636f6e747261637420746f2064",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11300:34:3",
																		"type": "",
																		"value": "Please approve the contract to d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11277:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11277:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11277:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11356:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11364:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11352:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11352:15:3"
																	},
																	{
																		"hexValue": "6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11369:34:3",
																		"type": "",
																		"value": "educt ltr tokens from your walle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11345:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11345:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11345:59:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11425:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11433:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11421:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11421:15:3"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11438:3:3",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11414:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11414:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11414:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11258:6:3",
														"type": ""
													}
												],
												"src": "11160:289:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11601:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11611:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11677:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11682:2:3",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11618:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11618:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11611:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11783:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																	"nodeType": "YulIdentifier",
																	"src": "11694:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11694:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11694:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11796:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11807:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11812:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11803:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11796:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11589:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11597:3:3",
														"type": ""
													}
												],
												"src": "11455:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11998:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12008:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12020:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12031:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12016:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12016:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12008:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12055:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12066:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12051:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12051:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12074:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12080:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12070:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12070:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12044:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12044:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12044:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12100:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12234:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12108:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12108:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12100:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11978:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11993:4:3",
														"type": ""
													}
												],
												"src": "11827:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12358:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12380:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12388:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12376:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12376:14:3"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12392:17:3",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12369:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12369:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12350:6:3",
														"type": ""
													}
												],
												"src": "12252:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12569:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12579:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12645:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12650:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12586:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12586:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12579:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12751:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "12662:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12662:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12662:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12764:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12775:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12780:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12771:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12771:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12764:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12557:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12565:3:3",
														"type": ""
													}
												],
												"src": "12423:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12966:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12976:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12988:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12999:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12984:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12984:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12976:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13023:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13034:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13019:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13042:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13048:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13038:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13038:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13012:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13012:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13012:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13068:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13202:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13076:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13076:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13068:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12946:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12961:4:3",
														"type": ""
													}
												],
												"src": "12795:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount of shares\")\n\n    }\n\n    function abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please approve the contract to d\")\n\n        mstore(add(memPtr, 32), \"educt ltr tokens from your walle\")\n\n        mstore(add(memPtr, 64), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 65)\n        store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c8063bec3fa171161004e578063bec3fa17146100e5578063eb521a4c1461010e578063f4325d671461012a578063ff9b37581461015557610070565b80631aa5c70e146100755780637464fc3d146100915780638e3073a6146100bc575b600080fd5b61008f600480360381019061008a9190610c95565b61017e565b005b34801561009d57600080fd5b506100a6610262565b6040516100b39190610cd1565b60405180910390f35b3480156100c857600080fd5b506100e360048036038101906100de9190610c95565b610268565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610d4a565b610497565b005b61012860048036038101906101239190610c95565b61052e565b005b34801561013657600080fd5b5061013f610777565b60405161014c9190610d99565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610c95565b61079b565b005b8034146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610e11565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161021b929190610e31565b6020604051808303816000875af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610e92565b5050565b60015481565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102c4929190610ebf565b602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610efd565b1015610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d90610f76565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103a393929190610f96565b6020604051808303816000875af11580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e69190610e92565b5060003373ffffffffffffffffffffffffffffffffffffffff168260405161040d90610ffe565b60006040518083038185875af1925050503d806000811461044a576040519150601f19603f3d011682016040523d82523d6000602084013e61044f565b606091505b5050905080610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a9061105f565b60405180910390fd5b5050565b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016104e6929190610e31565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190610e92565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161058b93929190610f96565b6020604051808303816000875af11580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190610e92565b506000600154036106855760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106329190610d99565b602060405180830381865afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610efd565b4761067e91906110ae565b6001819055505b60006106a5670de0b6b3a76400006001546106a0919061111f565b610a94565b90507339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106f6929190610e31565b6020604051808303816000875af1158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190610e92565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6338360405161076b929190610e31565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081116107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d59061119c565b60405180910390fd5b807339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161082e929190610ebf565b602060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086f9190610efd565b10156108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611254565b60405180910390fd5b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161090193929190610f96565b6020604051808303816000875af1158015610920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109449190610e92565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109a0929190610e31565b6020604051808303816000875af11580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e39190610e92565b5060003373ffffffffffffffffffffffffffffffffffffffff1682604051610a0a90610ffe565b60006040518083038185875af1925050503d8060008114610a47576040519150601f19603f3d011682016040523d82523d6000602084013e610a4c565b606091505b5050905080610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906112c0565b60405180910390fd5b5050565b6000808203610aa65760009050610c3c565b60006001905060008390506000608082901c1115610acd57608081901c9050604082901b91505b6000604082901c1115610ae957604081901c9050602082901b91505b6000602082901c1115610b0557602081901c9050601082901b91505b6000601082901c1115610b2157601081901c9050600882901b91505b6000600882901c1115610b3d57600881901c9050600482901b91505b6000600482901c1115610b5957600481901c9050600282901b91505b6000600282901c1115610b6e57600182901b91505b6001828581610b8057610b7f6110f0565b5b048301901c91506001828581610b9957610b986110f0565b5b048301901c91506001828581610bb257610bb16110f0565b5b048301901c91506001828581610bcb57610bca6110f0565b5b048301901c91506001828581610be457610be36110f0565b5b048301901c91506001828581610bfd57610bfc6110f0565b5b048301901c91506001828581610c1657610c156110f0565b5b048301901c9150610c3782838681610c3157610c306110f0565b5b04610c41565b925050505b919050565b6000818310610c505781610c52565b825b905092915050565b600080fd5b6000819050919050565b610c7281610c5f565b8114610c7d57600080fd5b50565b600081359050610c8f81610c69565b92915050565b600060208284031215610cab57610caa610c5a565b5b6000610cb984828501610c80565b91505092915050565b610ccb81610c5f565b82525050565b6000602082019050610ce66000830184610cc2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1782610cec565b9050919050565b610d2781610d0c565b8114610d3257600080fd5b50565b600081359050610d4481610d1e565b92915050565b60008060408385031215610d6157610d60610c5a565b5b6000610d6f85828601610d35565b9250506020610d8085828601610c80565b9150509250929050565b610d9381610d0c565b82525050565b6000602082019050610dae6000830184610d8a565b92915050565b600082825260208201905092915050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000610dfb600e83610db4565b9150610e0682610dc5565b602082019050919050565b60006020820190508181036000830152610e2a81610dee565b9050919050565b6000604082019050610e466000830185610d8a565b610e536020830184610cc2565b9392505050565b60008115159050919050565b610e6f81610e5a565b8114610e7a57600080fd5b50565b600081519050610e8c81610e66565b92915050565b600060208284031215610ea857610ea7610c5a565b5b6000610eb684828501610e7d565b91505092915050565b6000604082019050610ed46000830185610d8a565b610ee16020830184610d8a565b9392505050565b600081519050610ef781610c69565b92915050565b600060208284031215610f1357610f12610c5a565b5b6000610f2184828501610ee8565b91505092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6000610f60601583610db4565b9150610f6b82610f2a565b602082019050919050565b60006020820190508181036000830152610f8f81610f53565b9050919050565b6000606082019050610fab6000830186610d8a565b610fb86020830185610d8a565b610fc56040830184610cc2565b949350505050565b600081905092915050565b50565b6000610fe8600083610fcd565b9150610ff382610fd8565b600082019050919050565b600061100982610fdb565b9150819050919050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b6000611049600f83610db4565b915061105482611013565b602082019050919050565b600060208201905081810360008301526110788161103c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110b982610c5f565b91506110c483610c5f565b92508282026110d281610c5f565b915082820484148315176110e9576110e861107f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061112a82610c5f565b915061113583610c5f565b925082611145576111446110f0565b5b828204905092915050565b7f496e76616c696420616d6f756e74206f66207368617265730000000000000000600082015250565b6000611186601883610db4565b915061119182611150565b602082019050919050565b600060208201905081810360008301526111b581611179565b9050919050565b7f506c6561736520617070726f76652074686520636f6e747261637420746f206460008201527f6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6560208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b600061123e604183610db4565b9150611249826111bc565b606082019050919050565b6000602082019050818103600083015261126d81611231565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006112aa600f83610db4565b91506112b582611274565b602082019050919050565b600060208201905081810360008301526112d98161129d565b905091905056fea26469706673582212201d1d22067405ca671b0937af208797f271ddc3727bdd349cc091b381597b13c364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEC3FA17 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xFF9B3758 EQ PUSH2 0x155 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x1AA5C70E EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8E3073A6 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST STOP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x40D SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48A SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST SELFBALANCE PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH2 0x6A5 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH2 0xA94 JUMP JUMPDEST SWAP1 POP PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x715 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x739 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0xEFD JUMP JUMPDEST LT ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA0A SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xAA6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xACD JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB05 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB3D JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xB6E JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xB80 JUMPI PUSH2 0xB7F PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xB99 JUMPI PUSH2 0xB98 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBB2 JUMPI PUSH2 0xBB1 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBE4 JUMPI PUSH2 0xBE3 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xC16 JUMPI PUSH2 0xC15 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xC37 DUP3 DUP4 DUP7 DUP2 PUSH2 0xC31 JUMPI PUSH2 0xC30 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DIV PUSH2 0xC41 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xC50 JUMPI DUP2 PUSH2 0xC52 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8F DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB9 DUP5 DUP3 DUP6 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD17 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP2 EQ PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0xD1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6F DUP6 DUP3 DUP7 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD80 DUP6 DUP3 DUP7 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0xD0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFB PUSH1 0xE DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE06 DUP3 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE2A DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE46 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xE53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6F DUP2 PUSH2 0xE5A JUMP JUMPDEST DUP2 EQ PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE8C DUP2 PUSH2 0xE66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB6 DUP5 DUP3 DUP6 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xED4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xEE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEF7 DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF21 DUP5 DUP3 DUP6 ADD PUSH2 0xEE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 PUSH1 0x15 DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B DUP3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8F DUP2 PUSH2 0xF53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xFB8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xFC5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE8 PUSH1 0x0 DUP4 PUSH2 0xFCD JUMP JUMPDEST SWAP2 POP PUSH2 0xFF3 DUP3 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP3 PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1049 PUSH1 0xF DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1054 DUP3 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1078 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10B9 DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH2 0x10C4 DUP4 PUSH2 0xC5F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x10D2 DUP2 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10E9 JUMPI PUSH2 0x10E8 PUSH2 0x107F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x112A DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH2 0x1135 DUP4 PUSH2 0xC5F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x10F0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74206F66207368617265730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1186 PUSH1 0x18 DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1191 DUP3 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B5 DUP2 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520617070726F76652074686520636F6E747261637420746F2064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E PUSH1 0x41 DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1249 DUP3 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126D DUP2 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AA PUSH1 0xF DUP4 PUSH2 0xDB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12B5 DUP3 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D9 DUP2 PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR SAR 0x22 MOD PUSH21 0x5CA671B0937AF208797F271DDC3727BDD349CC091 0xB3 DUP2 MSIZE PUSH28 0x13C364736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "310:2315:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;569:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1943:368;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2504:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;756:618;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;458:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:557;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2317:181;2399:10;2386:9;:23;2378:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2445:12;;;;;;;;;;2438:29;;;2468:10;2480;2438:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2317:181;:::o;569:20::-;;;;:::o;1943:368::-;2065:10;2011:12;;;;;;;;;;2004:30;;;2035:10;2055:4;2004:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:71;;1996:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;2118:12;;;;;;;;;;2111:33;;;2145:10;2165:4;2172:10;2111:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2194:12;2220:10;2212:24;;2244:10;2212:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:66;;;2277:7;2269:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1986:325;1943:368;:::o;2504:119::-;521:42;2576:27;;;2604:2;2608:7;2576:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2504:119;;:::o;756:618::-;1008:12;;;;;;;;;;1001:33;;;1035:10;1055:4;1062:7;1001:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1093:1;1084:5;;:10;1080:120;;1150:12;;;;;;;;;;1143:30;;;1182:4;1143:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1119:21;:69;;;;:::i;:::-;1110:5;:79;;;;1080:120;1209:16;1228:27;1246:8;1238:5;;:16;;;;:::i;:::-;1228:9;:27::i;:::-;1209:46;;521:42;1265:27;;;1293:10;1305:8;1265:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1329:38;1347:10;1359:7;1329:38;;;;;;;:::i;:::-;;;;;;;;816:558;756:618;:::o;458:27::-;;;;;;;;;;;;:::o;1380:557::-;1466:1;1450:13;:17;1442:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1573:13;521:42;1514:28;;;1543:10;1563:4;1514:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;1506:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;521:42;1667:31;;;1699:10;1719:4;1726:13;1667:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1757:12;;;;;;;;;;1750:29;;;1780:10;1792:13;1750:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1817:12;1843:10;1835:24;;1867:13;1835:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:69;;;1903:7;1895:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1432:505;1380:557;:::o;6281:2206:0:-;6329:7;6357:1;6352;:6;6348:45;;6381:1;6374:8;;;;6348:45;7058:14;7075:1;7058:18;;7086:9;7098:1;7086:13;;7124:1;7118:3;7113:1;:8;;:12;7109:79;;;7147:3;7141:9;;;;;7175:2;7164:13;;;;;7109:79;7211:1;7206:2;7201:1;:7;;:11;7197:77;;;7234:2;7228:8;;;;;7261:2;7250:13;;;;;7197:77;7297:1;7292:2;7287:1;:7;;:11;7283:77;;;7320:2;7314:8;;;;;7347:2;7336:13;;;;;7283:77;7383:1;7378:2;7373:1;:7;;:11;7369:76;;;7406:2;7400:8;;;;;7433:1;7422:12;;;;;7369:76;7467:1;7463;7458;:6;;:10;7454:74;;;7490:1;7484:7;;;;;7516:1;7505:12;;;;;7454:74;7550:1;7546;7541;:6;;:10;7537:74;;;7573:1;7567:7;;;;;7599:1;7588:12;;;;;7537:74;7633:1;7629;7624;:6;;:10;7620:53;;;7661:1;7650:12;;;;;7620:53;8131:1;8120:6;8116:1;:10;;;;;:::i;:::-;;;8107:6;:19;8106:26;;8097:35;;8180:1;8169:6;8165:1;:10;;;;;:::i;:::-;;;8156:6;:19;8155:26;;8146:35;;8229:1;8218:6;8214:1;:10;;;;;:::i;:::-;;;8205:6;:19;8204:26;;8195:35;;8278:1;8267:6;8263:1;:10;;;;;:::i;:::-;;;8254:6;:19;8253:26;;8244:35;;8327:1;8316:6;8312:1;:10;;;;;:::i;:::-;;;8303:6;:19;8302:26;;8293:35;;8376:1;8365:6;8361:1;:10;;;;;:::i;:::-;;;8352:6;:19;8351:26;;8342:35;;8425:1;8414:6;8410:1;:10;;;;;:::i;:::-;;;8401:6;:19;8400:26;;8391:35;;8447:23;8451:6;8463;8459:1;:10;;;;;:::i;:::-;;;8447:3;:23::i;:::-;8440:30;;;;6281:2206;;;;:::o;589:104::-;647:7;677:1;673;:5;:13;;685:1;673:13;;;681:1;673:13;666:20;;589:104;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:169::-;2800:11;2834:6;2829:3;2822:19;2874:4;2869:3;2865:14;2850:29;;2716:169;;;;:::o;2891:164::-;3031:16;3027:1;3019:6;3015:14;3008:40;2891:164;:::o;3061:366::-;3203:3;3224:67;3288:2;3283:3;3224:67;:::i;:::-;3217:74;;3300:93;3389:3;3300:93;:::i;:::-;3418:2;3413:3;3409:12;3402:19;;3061:366;;;:::o;3433:419::-;3599:4;3637:2;3626:9;3622:18;3614:26;;3686:9;3680:4;3676:20;3672:1;3661:9;3657:17;3650:47;3714:131;3840:4;3714:131;:::i;:::-;3706:139;;3433:419;;;:::o;3858:332::-;3979:4;4017:2;4006:9;4002:18;3994:26;;4030:71;4098:1;4087:9;4083:17;4074:6;4030:71;:::i;:::-;4111:72;4179:2;4168:9;4164:18;4155:6;4111:72;:::i;:::-;3858:332;;;;;:::o;4196:90::-;4230:7;4273:5;4266:13;4259:21;4248:32;;4196:90;;;:::o;4292:116::-;4362:21;4377:5;4362:21;:::i;:::-;4355:5;4352:32;4342:60;;4398:1;4395;4388:12;4342:60;4292:116;:::o;4414:137::-;4468:5;4499:6;4493:13;4484:22;;4515:30;4539:5;4515:30;:::i;:::-;4414:137;;;;:::o;4557:345::-;4624:6;4673:2;4661:9;4652:7;4648:23;4644:32;4641:119;;;4679:79;;:::i;:::-;4641:119;4799:1;4824:61;4877:7;4868:6;4857:9;4853:22;4824:61;:::i;:::-;4814:71;;4770:125;4557:345;;;;:::o;4908:332::-;5029:4;5067:2;5056:9;5052:18;5044:26;;5080:71;5148:1;5137:9;5133:17;5124:6;5080:71;:::i;:::-;5161:72;5229:2;5218:9;5214:18;5205:6;5161:72;:::i;:::-;4908:332;;;;;:::o;5246:143::-;5303:5;5334:6;5328:13;5319:22;;5350:33;5377:5;5350:33;:::i;:::-;5246:143;;;;:::o;5395:351::-;5465:6;5514:2;5502:9;5493:7;5489:23;5485:32;5482:119;;;5520:79;;:::i;:::-;5482:119;5640:1;5665:64;5721:7;5712:6;5701:9;5697:22;5665:64;:::i;:::-;5655:74;;5611:128;5395:351;;;;:::o;5752:171::-;5892:23;5888:1;5880:6;5876:14;5869:47;5752:171;:::o;5929:366::-;6071:3;6092:67;6156:2;6151:3;6092:67;:::i;:::-;6085:74;;6168:93;6257:3;6168:93;:::i;:::-;6286:2;6281:3;6277:12;6270:19;;5929:366;;;:::o;6301:419::-;6467:4;6505:2;6494:9;6490:18;6482:26;;6554:9;6548:4;6544:20;6540:1;6529:9;6525:17;6518:47;6582:131;6708:4;6582:131;:::i;:::-;6574:139;;6301:419;;;:::o;6726:442::-;6875:4;6913:2;6902:9;6898:18;6890:26;;6926:71;6994:1;6983:9;6979:17;6970:6;6926:71;:::i;:::-;7007:72;7075:2;7064:9;7060:18;7051:6;7007:72;:::i;:::-;7089;7157:2;7146:9;7142:18;7133:6;7089:72;:::i;:::-;6726:442;;;;;;:::o;7174:147::-;7275:11;7312:3;7297:18;;7174:147;;;;:::o;7327:114::-;;:::o;7447:398::-;7606:3;7627:83;7708:1;7703:3;7627:83;:::i;:::-;7620:90;;7719:93;7808:3;7719:93;:::i;:::-;7837:1;7832:3;7828:11;7821:18;;7447:398;;;:::o;7851:379::-;8035:3;8057:147;8200:3;8057:147;:::i;:::-;8050:154;;8221:3;8214:10;;7851:379;;;:::o;8236:165::-;8376:17;8372:1;8364:6;8360:14;8353:41;8236:165;:::o;8407:366::-;8549:3;8570:67;8634:2;8629:3;8570:67;:::i;:::-;8563:74;;8646:93;8735:3;8646:93;:::i;:::-;8764:2;8759:3;8755:12;8748:19;;8407:366;;;:::o;8779:419::-;8945:4;8983:2;8972:9;8968:18;8960:26;;9032:9;9026:4;9022:20;9018:1;9007:9;9003:17;8996:47;9060:131;9186:4;9060:131;:::i;:::-;9052:139;;8779:419;;;:::o;9204:180::-;9252:77;9249:1;9242:88;9349:4;9346:1;9339:15;9373:4;9370:1;9363:15;9390:410;9430:7;9453:20;9471:1;9453:20;:::i;:::-;9448:25;;9487:20;9505:1;9487:20;:::i;:::-;9482:25;;9542:1;9539;9535:9;9564:30;9582:11;9564:30;:::i;:::-;9553:41;;9743:1;9734:7;9730:15;9727:1;9724:22;9704:1;9697:9;9677:83;9654:139;;9773:18;;:::i;:::-;9654:139;9438:362;9390:410;;;;:::o;9806:180::-;9854:77;9851:1;9844:88;9951:4;9948:1;9941:15;9975:4;9972:1;9965:15;9992:185;10032:1;10049:20;10067:1;10049:20;:::i;:::-;10044:25;;10083:20;10101:1;10083:20;:::i;:::-;10078:25;;10122:1;10112:35;;10127:18;;:::i;:::-;10112:35;10169:1;10166;10162:9;10157:14;;9992:185;;;;:::o;10183:174::-;10323:26;10319:1;10311:6;10307:14;10300:50;10183:174;:::o;10363:366::-;10505:3;10526:67;10590:2;10585:3;10526:67;:::i;:::-;10519:74;;10602:93;10691:3;10602:93;:::i;:::-;10720:2;10715:3;10711:12;10704:19;;10363:366;;;:::o;10735:419::-;10901:4;10939:2;10928:9;10924:18;10916:26;;10988:9;10982:4;10978:20;10974:1;10963:9;10959:17;10952:47;11016:131;11142:4;11016:131;:::i;:::-;11008:139;;10735:419;;;:::o;11160:289::-;11300:34;11296:1;11288:6;11284:14;11277:58;11369:34;11364:2;11356:6;11352:15;11345:59;11438:3;11433:2;11425:6;11421:15;11414:28;11160:289;:::o;11455:366::-;11597:3;11618:67;11682:2;11677:3;11618:67;:::i;:::-;11611:74;;11694:93;11783:3;11694:93;:::i;:::-;11812:2;11807:3;11803:12;11796:19;;11455:366;;;:::o;11827:419::-;11993:4;12031:2;12020:9;12016:18;12008:26;;12080:9;12074:4;12070:20;12066:1;12055:9;12051:17;12044:47;12108:131;12234:4;12108:131;:::i;:::-;12100:139;;11827:419;;;:::o;12252:165::-;12392:17;12388:1;12380:6;12376:14;12369:41;12252:165;:::o;12423:366::-;12565:3;12586:67;12650:2;12645:3;12586:67;:::i;:::-;12579:74;;12662:93;12751:3;12662:93;:::i;:::-;12780:2;12775:3;12771:12;12764:19;;12423:366;;;:::o;12795:419::-;12961:4;12999:2;12988:9;12984:18;12976:26;;13048:9;13042:4;13038:20;13034:1;13023:9;13019:17;13012:47;13076:131;13202:4;13076:131;:::i;:::-;13068:139;;12795:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "977200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getDAI(uint256)": "infinite",
								"getEth(uint256)": "infinite",
								"kLast()": "2452",
								"provideLiquidity(uint256)": "infinite",
								"reedemShares(uint256)": "infinite",
								"reserveToken()": "2555",
								"transferTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 310,
									"end": 2625,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 675,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 675,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 596,
									"end": 675,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 596,
									"end": 675,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 596,
									"end": 675,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 596,
									"end": 675,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 596,
									"end": 675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 655,
									"end": 668,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 652,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 652,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 640,
									"end": 668,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 640,
									"end": 668,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 640,
									"end": 668,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 640,
									"end": 668,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 596,
									"end": 675,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 2625,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d1d22067405ca671b0937af208797f271ddc3727bdd349cc091b381597b13c364736f6c63430008110033",
									".code": [
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "BEC3FA17"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "BEC3FA17"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "EB521A4C"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "F4325D67"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "FF9B3758"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "1AA5C70E"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "7464FC3D"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "8E3073A6"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 2625,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2317,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2317,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 569,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 569,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1943,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1943,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2504,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2504,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 756,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 756,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 458,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 458,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1380,
											"end": 1937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1380,
											"end": 1937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2378,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2378,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2468,
											"end": 2478,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2490,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2438,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2438,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2034,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2035,
											"end": 2045,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2059,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2004,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2004,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2075,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1996,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1996,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2144,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2144,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2144,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2145,
											"end": 2155,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2111,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2111,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2230,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2212,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2269,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2269,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 563,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2615,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2576,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2576,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1008,
											"end": 1020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1001,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1001,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1080,
											"end": 1200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1182,
											"end": 1186,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1143,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1143,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1143,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1140,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1119,
											"end": 1188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1119,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1188,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1119,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1115,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1080,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1225,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1238,
											"end": 1243,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1238,
											"end": 1243,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1238,
											"end": 1254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1238,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1254,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1238,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1228,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1255,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1228,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 521,
											"end": 563,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1265,
											"end": 1292,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1292,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1292,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1293,
											"end": 1303,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1265,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1265,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1347,
											"end": 1357,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1329,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1367,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 816,
											"end": 1374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 756,
											"end": 1374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 458,
											"end": 485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1467,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1442,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 563,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1514,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1567,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1514,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1514,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1586,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1506,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1506,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 563,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1667,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1723,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1739,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1667,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1667,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1780,
											"end": 1790,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1750,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1750,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1853,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1859,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1835,
											"end": 1859,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1835,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1895,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1895,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8116,
											"end": 8126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8165,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8214,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8263,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8312,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8361,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8410,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8459,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8447,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2878,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3055,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2891,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3008,
											"end": 3048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3224,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3224,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3300,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3300,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3420,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3696,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3714,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3714,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4190,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3858,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 3983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4019,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4083,
											"end": 4100,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4030,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4101,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4030,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4179,
											"end": 4181,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4168,
											"end": 4177,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4111,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4111,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4190,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4190,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 4190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4286,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4196,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4266,
											"end": 4279,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4259,
											"end": 4280,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4248,
											"end": 4280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4248,
											"end": 4280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4408,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4292,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4362,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4384,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4342,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4342,
											"end": 4402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4342,
											"end": 4402,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4342,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4414,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4493,
											"end": 4506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4515,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4515,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4515,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4551,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4902,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4557,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4652,
											"end": 4659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4648,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4644,
											"end": 4676,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4760,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4641,
											"end": 4760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4679,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4679,
											"end": 4758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4758,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4679,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4760,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4641,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4800,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 4877,
											"end": 4884,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4857,
											"end": 4866,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4824,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4824,
											"end": 4885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4824,
											"end": 4885,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 4824,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4902,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4902,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5240,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4908,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5069,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5056,
											"end": 5065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5133,
											"end": 5150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5130,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5080,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5151,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5080,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5229,
											"end": 5231,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5211,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5161,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5233,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5161,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5240,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5240,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5389,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5246,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5319,
											"end": 5341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5319,
											"end": 5341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5377,
											"end": 5382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5350,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5389,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5746,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5395,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5502,
											"end": 5511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5500,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5489,
											"end": 5512,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5485,
											"end": 5517,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5601,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5482,
											"end": 5601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5520,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5520,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5520,
											"end": 5599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5520,
											"end": 5599,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5520,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5601,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5482,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5721,
											"end": 5728,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 5718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5710,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5665,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5665,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5665,
											"end": 5729,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5665,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5739,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5746,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5923,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5752,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5915,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 5888,
											"end": 5889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5886,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5876,
											"end": 5890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 5916,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 6295,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5929,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6071,
											"end": 6074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6151,
											"end": 6154,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6092,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6092,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6092,
											"end": 6159,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6092,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6159,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6257,
											"end": 6260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6168,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6261,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6168,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6286,
											"end": 6288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6270,
											"end": 6289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6270,
											"end": 6289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 6295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 6295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 6295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 6295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6720,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6301,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6507,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6494,
											"end": 6503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6482,
											"end": 6508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6482,
											"end": 6508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6554,
											"end": 6563,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6544,
											"end": 6564,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6541,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6525,
											"end": 6542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6518,
											"end": 6565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6582,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6582,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6582,
											"end": 6713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6582,
											"end": 6713,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6582,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6720,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6994,
											"end": 6995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6992,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6979,
											"end": 6996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6926,
											"end": 6997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6926,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 7075,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7060,
											"end": 7078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7007,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7079,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 7007,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7157,
											"end": 7159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7133,
											"end": 7139,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7089,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7161,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7089,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 7168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7321,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7174,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7275,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7441,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7327,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7447,
											"end": 7845,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7447,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7606,
											"end": 7609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7708,
											"end": 7709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7706,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7627,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7710,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7627,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7620,
											"end": 7710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7620,
											"end": 7710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7808,
											"end": 7811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7719,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7719,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7828,
											"end": 7839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7447,
											"end": 7845,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7447,
											"end": 7845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7447,
											"end": 7845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7447,
											"end": 7845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 8230,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 7851,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8057,
											"end": 8204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8204,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8057,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8221,
											"end": 8224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 8230,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 8230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 8230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8401,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8236,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8393,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E73666572204661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8360,
											"end": 8374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8353,
											"end": 8394,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8773,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 8407,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8549,
											"end": 8552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 8629,
											"end": 8632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8570,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8570,
											"end": 8637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8570,
											"end": 8637,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8570,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8563,
											"end": 8637,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8563,
											"end": 8637,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8646,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8735,
											"end": 8738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8646,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8646,
											"end": 8739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8646,
											"end": 8739,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8646,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8755,
											"end": 8767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8748,
											"end": 8767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8748,
											"end": 8767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8779,
											"end": 9198,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8779,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8945,
											"end": 8949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8985,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8972,
											"end": 8981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9026,
											"end": 9030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9022,
											"end": 9042,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9018,
											"end": 9019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9003,
											"end": 9020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9043,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9060,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9186,
											"end": 9190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9060,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9060,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9060,
											"end": 9191,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9060,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8779,
											"end": 9198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8779,
											"end": 9198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8779,
											"end": 9198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8779,
											"end": 9198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9204,
											"end": 9384,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 9204,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9252,
											"end": 9329,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9249,
											"end": 9250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9242,
											"end": 9330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9353,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 9346,
											"end": 9347,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9339,
											"end": 9354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9370,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9363,
											"end": 9378,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9800,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 9390,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9471,
											"end": 9472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9453,
											"end": 9473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9473,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9453,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9505,
											"end": 9506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9487,
											"end": 9507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9507,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9487,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9482,
											"end": 9507,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9482,
											"end": 9507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9544,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9582,
											"end": 9593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9564,
											"end": 9594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9564,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9553,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9553,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 9741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9730,
											"end": 9745,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9727,
											"end": 9728,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9724,
											"end": 9746,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9704,
											"end": 9705,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9697,
											"end": 9706,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9677,
											"end": 9760,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9654,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 9654,
											"end": 9793,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 9773,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9654,
											"end": 9793,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 9654,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9438,
											"end": 9800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9800,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9806,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 9806,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9854,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9851,
											"end": 9852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9951,
											"end": 9955,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 9948,
											"end": 9949,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9941,
											"end": 9956,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9975,
											"end": 9979,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10067,
											"end": 10068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 10049,
											"end": 10069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10069,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10101,
											"end": 10102,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 10083,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10103,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10122,
											"end": 10123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 10127,
											"end": 10145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10169,
											"end": 10170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10162,
											"end": 10171,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9992,
											"end": 10177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10357,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10183,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10323,
											"end": 10349,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420616D6F756E74206F66207368617265730000000000000000"
										},
										{
											"begin": 10319,
											"end": 10320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10307,
											"end": 10321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10300,
											"end": 10350,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10363,
											"end": 10729,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10363,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10505,
											"end": 10508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10590,
											"end": 10592,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 10585,
											"end": 10588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10526,
											"end": 10593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10519,
											"end": 10593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10519,
											"end": 10593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10602,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10602,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10602,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10602,
											"end": 10695,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10602,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10720,
											"end": 10722,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10715,
											"end": 10718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10711,
											"end": 10723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10363,
											"end": 10729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10363,
											"end": 10729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10363,
											"end": 10729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10363,
											"end": 10729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 11154,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 10735,
											"end": 11154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10901,
											"end": 10905,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10939,
											"end": 10941,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10928,
											"end": 10937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10916,
											"end": 10942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10916,
											"end": 10942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10988,
											"end": 10997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10982,
											"end": 10986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10978,
											"end": 10998,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10972,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10959,
											"end": 10976,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10952,
											"end": 10999,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11016,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11016,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 11016,
											"end": 11147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11016,
											"end": 11147,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 11016,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11008,
											"end": 11147,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11008,
											"end": 11147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 11154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 11154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 11154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10735,
											"end": 11154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11160,
											"end": 11449,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 11160,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11300,
											"end": 11334,
											"name": "PUSH",
											"source": 3,
											"value": "506C6561736520617070726F76652074686520636F6E747261637420746F2064"
										},
										{
											"begin": 11296,
											"end": 11297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11284,
											"end": 11298,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11277,
											"end": 11335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11403,
											"name": "PUSH",
											"source": 3,
											"value": "6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65"
										},
										{
											"begin": 11364,
											"end": 11366,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11356,
											"end": 11362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11345,
											"end": 11404,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11438,
											"end": 11441,
											"name": "PUSH",
											"source": 3,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11433,
											"end": 11435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11425,
											"end": 11431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11421,
											"end": 11436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11414,
											"end": 11442,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11160,
											"end": 11449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11160,
											"end": 11449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11455,
											"end": 11821,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 11455,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11597,
											"end": 11600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11618,
											"end": 11685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 11682,
											"end": 11684,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 11677,
											"end": 11680,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11618,
											"end": 11685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 11618,
											"end": 11685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11618,
											"end": 11685,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 11618,
											"end": 11685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11611,
											"end": 11685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11611,
											"end": 11685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11694,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 11783,
											"end": 11786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11694,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 11694,
											"end": 11787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11694,
											"end": 11787,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 11694,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11812,
											"end": 11814,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 11807,
											"end": 11810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11803,
											"end": 11815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11796,
											"end": 11815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11796,
											"end": 11815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11455,
											"end": 11821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11455,
											"end": 11821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11455,
											"end": 11821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11455,
											"end": 11821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11827,
											"end": 12246,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 11827,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 11997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12016,
											"end": 12034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12008,
											"end": 12034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12008,
											"end": 12034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12080,
											"end": 12089,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12074,
											"end": 12078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12070,
											"end": 12090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12066,
											"end": 12067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12055,
											"end": 12064,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12051,
											"end": 12068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12044,
											"end": 12091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 12234,
											"end": 12238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 12108,
											"end": 12239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12239,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 12108,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12100,
											"end": 12239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12100,
											"end": 12239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11827,
											"end": 12246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11827,
											"end": 12246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11827,
											"end": 12246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11827,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12252,
											"end": 12417,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 12252,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12392,
											"end": 12409,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 12388,
											"end": 12389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12380,
											"end": 12386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12252,
											"end": 12417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12252,
											"end": 12417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12789,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 12423,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12565,
											"end": 12568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12586,
											"end": 12653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 12650,
											"end": 12652,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 12645,
											"end": 12648,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12586,
											"end": 12653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 12586,
											"end": 12653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12586,
											"end": 12653,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 12586,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12579,
											"end": 12653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12579,
											"end": 12653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12662,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 12751,
											"end": 12754,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12662,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 12662,
											"end": 12755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12662,
											"end": 12755,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 12662,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12780,
											"end": 12782,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12778,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12771,
											"end": 12783,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12764,
											"end": 12783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12764,
											"end": 12783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12423,
											"end": 12789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12795,
											"end": 13214,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 12795,
											"end": 13214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12961,
											"end": 12965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12999,
											"end": 13001,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12988,
											"end": 12997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12984,
											"end": 13002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13048,
											"end": 13057,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13042,
											"end": 13046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13038,
											"end": 13058,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13034,
											"end": 13035,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13019,
											"end": 13036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13012,
											"end": 13059,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13076,
											"end": 13207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 13202,
											"end": 13206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13076,
											"end": 13207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 13076,
											"end": 13207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13076,
											"end": 13207,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 13076,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13068,
											"end": 13207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13068,
											"end": 13207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12795,
											"end": 13214,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12795,
											"end": 13214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12795,
											"end": 13214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12795,
											"end": 13214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/Pool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getDAI(uint256)": "1aa5c70e",
							"getEth(uint256)": "8e3073a6",
							"kLast()": "7464fc3d",
							"provideLiquidity(uint256)": "eb521a4c",
							"reedemShares(uint256)": "ff9b3758",
							"reserveToken()": "f4325d67",
							"transferTokens(address,uint256)": "bec3fa17"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getDAI\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_DAIAmount\",\"type\":\"uint256\"}],\"name\":\"getEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sharesAmount\",\"type\":\"uint256\"}],\"name\":\"reedemShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0x59dabc7310dc0b392f0970f4748f103141edba4f02dfb057c1ce64b41a2095bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34dc90daae77b7aa5e0d1662200a02de063d4e8ea1a4c3529199ed56020d7935\",\"dweb:/ipfs/QmaXquMnGRBbSj7vPQpMa6ufLVrBdHHjWXJAfuKYJhthSg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 587,
								"contract": "contracts/Pool.sol:LiquidityPool",
								"label": "reserveToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 592,
								"contract": "contracts/Pool.sol:LiquidityPool",
								"label": "kLast",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5960:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nameLocations": [
															"5817:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8732:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nameLocations": [
															"8612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 515,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 524,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 581,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 581,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 581,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 581,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 581,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 581,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2660:1"
				},
				"id": 1
			},
			"contracts/Pool.sol": {
				"ast": {
					"absolutePath": "contracts/Pool.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						],
						"LiquidityPool": [
							841
						],
						"Math": [
							503
						]
					},
					"id": 842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "207:23:2"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 842,
							"sourceUnit": 582,
							"src": "232:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 842,
							"sourceUnit": 504,
							"src": "255:53:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 841,
							"linearizedBaseContracts": [
								841
							],
							"name": "LiquidityPool",
							"nameLocation": "319:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f4325d67",
									"id": 587,
									"mutability": "mutable",
									"name": "reserveToken",
									"nameLocation": "473:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "458:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 586,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 590,
									"mutability": "constant",
									"name": "ltrAddress",
									"nameLocation": "508:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "491:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833394442323037446666333431314634666162303438334434313933303638373343626331336439",
										"id": 589,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "521:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x39DB207Dff3411F4fab0483D419306873Cbc13d9"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7464fc3d",
									"id": 592,
									"mutability": "mutable",
									"name": "kLast",
									"nameLocation": "584:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "569:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 591,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "569:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "630:45:2",
										"statements": [
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 597,
														"name": "reserveToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "640:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 598,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "655:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "640:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "640:28:2"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "616:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "608:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:23:2"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:2"
									},
									"scope": 841,
									"src": "596:79:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6",
									"id": 608,
									"name": "liquidityProvided",
									"nameLocation": "687:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "713:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "705:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "741:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "733:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:45:2"
									},
									"src": "681:69:2"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "816:558:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 617,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1035:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1039:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1035:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 621,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1055:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$841",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$841",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1047:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 619,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1047:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1047:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "1062:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 614,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1008:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 613,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1001:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1001:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1022:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1001:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1001:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "1001:69:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 626,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1084:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1093:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1084:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 649,
												"nodeType": "IfStatement",
												"src": "1080:120:2",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "1096:104:2",
													"statements": [
														{
															"expression": {
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 629,
																	"name": "kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "1110:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 632,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1127:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LiquidityPool_$841",
																								"typeString": "contract LiquidityPool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_LiquidityPool_$841",
																								"typeString": "contract LiquidityPool"
																							}
																						],
																						"id": 631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1119:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 630,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1119:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1119:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1133:7:2",
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"src": "1119:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 641,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "1182:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_LiquidityPool_$841",
																									"typeString": "contract LiquidityPool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_LiquidityPool_$841",
																									"typeString": "contract LiquidityPool"
																								}
																							],
																							"id": 640,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1174:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 639,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "1174:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 642,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1174:13:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 636,
																								"name": "reserveToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 587,
																								"src": "1150:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 635,
																							"name": "IERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 581,
																							"src": "1143:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																								"typeString": "type(contract IERC20)"
																							}
																						},
																						"id": 637,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1143:20:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$581",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1164:9:2",
																					"memberName": "balanceOf",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "1143:30:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1143:45:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1119:69:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 645,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1118:71:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1110:79:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 647,
															"nodeType": "ExpressionStatement",
															"src": "1110:79:2"
														}
													]
												}
											},
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "LPShares",
														"nameLocation": "1217:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "1209:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 650,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1209:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 654,
																"name": "kLast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "1238:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1246:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1252:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "1246:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "1238:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 652,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$503_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1233:4:2",
														"memberName": "sqrt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "1228:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1228:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1209:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 665,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1293:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1297:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1293:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "LPShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "1305:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 662,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "1272:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 661,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1265:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1265:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1284:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1265:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1265:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "1265:49:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 671,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1347:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1351:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1347:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "1359:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 670,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "1329:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "EmitStatement",
												"src": "1324:43:2"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "765:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "790:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "782:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:17:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:0:2"
									},
									"scope": 841,
									"src": "756:618:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1432:505:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 683,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "1450:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1466:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1450:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74206f6620736861726573",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1469:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																"typeString": "literal_string \"Invalid amount of shares\""
															},
															"value": "Invalid amount of shares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																"typeString": "literal_string \"Invalid amount of shares\""
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1442:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1442:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "1442:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 694,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1543:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1547:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1543:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 698,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1563:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPool_$841",
																					"typeString": "contract LiquidityPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPool_$841",
																					"typeString": "contract LiquidityPool"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1555:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1555:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1555:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 691,
																				"name": "ltrAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "1521:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 690,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1514:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1514:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1533:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1514:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1514:55:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 701,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "1573:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1514:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520617070726f76652074686520636f6e747261637420746f20646564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6574",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1588:67:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																"typeString": "literal_string \"Please approve the contract to deduct ltr tokens from your wallet\""
															},
															"value": "Please approve the contract to deduct ltr tokens from your wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																"typeString": "literal_string \"Please approve the contract to deduct ltr tokens from your wallet\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "1506:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 710,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1699:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1703:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1699:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1719:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$841",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$841",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1711:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1711:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1711:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 716,
															"name": "_sharesAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "1726:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 707,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "1674:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 706,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1667:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1686:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1667:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "1667:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 723,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1780:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1784:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1780:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "_sharesAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "1792:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1757:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 719,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1750:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1750:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1750:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "1750:56:2"
											},
											{
												"assignments": [
													729,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1822:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "1817:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 728,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1817:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 740,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 732,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1843:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1847:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1843:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1835:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 730,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1835:8:2",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1835:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1855:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1835:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 736,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "1867:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1835:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1835:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1816:69:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1895:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "1895:35:2"
											}
										]
									},
									"functionSelector": "ff9b3758",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reedemShares",
									"nameLocation": "1389:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "_sharesAmount",
												"nameLocation": "1410:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1402:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:23:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:0:2"
									},
									"scope": 841,
									"src": "1380:557:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "1986:325:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 757,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2035:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2039:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2035:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 761,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2055:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPool_$841",
																					"typeString": "contract LiquidityPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPool_$841",
																					"typeString": "contract LiquidityPool"
																				}
																			],
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2047:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 759,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2047:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2047:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 754,
																				"name": "reserveToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2011:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 753,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2004:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2004:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2025:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "2004:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2004:57:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 764,
																"name": "_DAIAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "2065:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2004:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2077:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:105:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "1996:105:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 773,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2145:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2149:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2145:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 777,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2165:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$841",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$841",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2157:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 775,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2157:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2157:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "_DAIAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "2172:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2118:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 769,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2111:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2111:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2132:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2111:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2111:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "2111:72:2"
											},
											{
												"assignments": [
													783,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2199:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 800,
														"src": "2194:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 782,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2194:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 794,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 786,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2220:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2224:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2220:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2212:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 784,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2212:8:2",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2212:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2232:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2212:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 790,
																"name": "_DAIAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "2244:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2212:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2193:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572204661696c6564",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2286:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															},
															"value": "Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															}
														],
														"id": 795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2269:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "2269:35:2"
											}
										]
									},
									"functionSelector": "8e3073a6",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEth",
									"nameLocation": "1952:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "_DAIAmount",
												"nameLocation": "1967:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1959:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:20:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:0:2"
									},
									"scope": 841,
									"src": "1943:368:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "2368:130:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 807,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2386:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2390:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2386:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 809,
																"name": "_ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "2399:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2386:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2411:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2378:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "2378:50:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 818,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2468:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2472:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2468:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "_ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "2480:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 815,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2445:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 814,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2438:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2438:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2459:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "2438:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2438:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "2438:53:2"
											}
										]
									},
									"functionSelector": "1aa5c70e",
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDAI",
									"nameLocation": "2326:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "_ethAmount",
												"nameLocation": "2341:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "2333:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:20:2"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:2"
									},
									"scope": 841,
									"src": "2317:181:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "2566:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "2604:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "2608:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 832,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "2583:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 831,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2576:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2576:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2595:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "2576:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2576:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "2576:40:2"
											}
										]
									},
									"functionSelector": "bec3fa17",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "2513:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2536:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2528:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2548:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2540:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2527:29:2"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2566:0:2"
									},
									"scope": 841,
									"src": "2504:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 842,
							"src": "310:2315:2",
							"usedErrors": []
						}
					],
					"src": "207:2420:2"
				},
				"id": 2
			}
		}
	}
}